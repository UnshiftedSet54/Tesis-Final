[{"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\index.js":"1","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\App.js":"2","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reportWebVitals.js":"3","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\rootReducer.js":"4","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Hoc\\PrivateRouterRegister.js":"5","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Hoc\\isLoggedIn.js":"6","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\postRegisterPage.js":"7","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\registerProfesional.js":"8","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Hoc\\PrivateRouter.js":"9","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\register.js":"10","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\principal.js":"11","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\homeProfesional.js":"12","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\login.js":"13","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\dashboard.js":"14","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\rubroPage.js":"15","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\miCuenta.js":"16","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\registerBusiness.js":"17","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\proyectos.js":"18","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\publicaciones.js":"19","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\userPropuestas.js":"20","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\chatPage.js":"21","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\miPerfil.js":"22","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\propuestaPage.js":"23","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\rubroReducer.js":"24","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\isRenderReducer.js":"25","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\errorReducer.js":"26","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\anunciosUser.js":"27","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\anunciosReducer.js":"28","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\propuestaReducer.js":"29","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\userInfoReducer.js":"30","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\areaReducer.js":"31","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\chatsReducer.js":"32","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\authReducer.js":"33","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\types.js":"34","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\rubroActions.js":"35","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\authAction.js":"36","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\firebase\\index.js":"37","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\chatActions.js":"38","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\areasActions.js":"39","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\anunciosActions.js":"40","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\userInfoActions.js":"41","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\propuestaActions.js":"42","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\anuncioUser.js":"43","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\rightSide.js":"44","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\navBar.js":"45","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\footer.js":"46","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\categories.js":"47","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\cuenta.js":"48","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\errorActions.js":"49"},{"size":1026,"mtime":1642885285555,"results":"50","hashOfConfig":"51"},{"size":2683,"mtime":1642283374796,"results":"52","hashOfConfig":"51"},{"size":375,"mtime":1642283374833,"results":"53","hashOfConfig":"51"},{"size":795,"mtime":1642283374831,"results":"54","hashOfConfig":"51"},{"size":651,"mtime":1642283374798,"results":"55","hashOfConfig":"51"},{"size":639,"mtime":1642283374799,"results":"56","hashOfConfig":"51"},{"size":2862,"mtime":1642283374805,"results":"57","hashOfConfig":"51"},{"size":12368,"mtime":1642283374808,"results":"58","hashOfConfig":"51"},{"size":624,"mtime":1642283374798,"results":"59","hashOfConfig":"51"},{"size":1854,"mtime":1642283374807,"results":"60","hashOfConfig":"51"},{"size":11531,"mtime":1642283374805,"results":"61","hashOfConfig":"51"},{"size":14931,"mtime":1642456529364,"results":"62","hashOfConfig":"51"},{"size":7126,"mtime":1642283374804,"results":"63","hashOfConfig":"51"},{"size":1053,"mtime":1642283374802,"results":"64","hashOfConfig":"51"},{"size":11364,"mtime":1642283374809,"results":"65","hashOfConfig":"51"},{"size":932,"mtime":1642283374804,"results":"66","hashOfConfig":"51"},{"size":12766,"mtime":1642346923856,"results":"67","hashOfConfig":"51"},{"size":747,"mtime":1642283374806,"results":"68","hashOfConfig":"51"},{"size":16012,"mtime":1642457917018,"results":"69","hashOfConfig":"51"},{"size":3523,"mtime":1642283374809,"results":"70","hashOfConfig":"51"},{"size":10104,"mtime":1642712149804,"results":"71","hashOfConfig":"51"},{"size":474,"mtime":1642283374805,"results":"72","hashOfConfig":"51"},{"size":8050,"mtime":1642349889960,"results":"73","hashOfConfig":"51"},{"size":689,"mtime":1642283374832,"results":"74","hashOfConfig":"51"},{"size":381,"mtime":1642283374830,"results":"75","hashOfConfig":"51"},{"size":529,"mtime":1642283374830,"results":"76","hashOfConfig":"51"},{"size":1357,"mtime":1642283374827,"results":"77","hashOfConfig":"51"},{"size":865,"mtime":1642283374826,"results":"78","hashOfConfig":"51"},{"size":1399,"mtime":1642283374831,"results":"79","hashOfConfig":"51"},{"size":1297,"mtime":1642283374832,"results":"80","hashOfConfig":"51"},{"size":493,"mtime":1642283374827,"results":"81","hashOfConfig":"51"},{"size":1792,"mtime":1642283374829,"results":"82","hashOfConfig":"51"},{"size":1456,"mtime":1642283374828,"results":"83","hashOfConfig":"51"},{"size":2570,"mtime":1642283374815,"results":"84","hashOfConfig":"51"},{"size":543,"mtime":1642283374814,"results":"85","hashOfConfig":"51"},{"size":4305,"mtime":1642283374812,"results":"86","hashOfConfig":"51"},{"size":629,"mtime":1642283374822,"results":"87","hashOfConfig":"51"},{"size":1703,"mtime":1642283374812,"results":"88","hashOfConfig":"51"},{"size":702,"mtime":1642283374811,"results":"89","hashOfConfig":"51"},{"size":491,"mtime":1642283374810,"results":"90","hashOfConfig":"51"},{"size":1005,"mtime":1642283374816,"results":"91","hashOfConfig":"51"},{"size":1618,"mtime":1642352343648,"results":"92","hashOfConfig":"51"},{"size":1525,"mtime":1642283374810,"results":"93","hashOfConfig":"51"},{"size":360,"mtime":1642283374819,"results":"94","hashOfConfig":"51"},{"size":5186,"mtime":1642283374819,"results":"95","hashOfConfig":"51"},{"size":2716,"mtime":1642283374817,"results":"96","hashOfConfig":"51"},{"size":742,"mtime":1642283374817,"results":"97","hashOfConfig":"51"},{"size":10217,"mtime":1642283374801,"results":"98","hashOfConfig":"51"},{"size":343,"mtime":1642283374813,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1od6eup",{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"105"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"105"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"105"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"105"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"105"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"105"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"105"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"105"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"105"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"105"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"105"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\index.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\App.js",["233","234"],"import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\n\r\n/* CSS */\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/* HOC */\r\nimport PrivateRoute from './Hoc/PrivateRouter'\r\nimport PrivateRouteRegister from './Hoc/PrivateRouterRegister'\r\nimport PrivateRouteLoggedIn from './Hoc/isLoggedIn'\r\n\r\n/* Pages */\r\nimport Login from './Pages/login'\r\nimport Register from './Pages/register'\r\nimport HomeProfesional from './Pages/homeProfesional'\r\nimport Principal from './Pages/principal'\r\nimport RegisterProfesional from './Pages/registerProfesional'\r\nimport RegistroBusiness from './Pages/registerBusiness'\r\nimport PostRegister from './Pages/postRegisterPage'\r\nimport Rubro from './Pages/rubroPage'\r\nimport Dashboard from './Pages/dashboard'\r\nimport MiCuenta from './Pages/miCuenta'\r\nimport MiPerfil from './Pages/miPerfil'\r\nimport Publicaciones from \"./Pages/publicaciones\";\r\nimport Proyectos from \"./Pages/proyectos\";\r\nimport ChatPage from \"./Pages/chatPage\"\r\nimport PropuestaPage from \"./Pages/propuestaPage\"\r\nimport UserPropuestas from \"./Pages/userPropuestas\"\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n\r\n        <PrivateRouteLoggedIn exact path = \"/\" component = {Principal} />\r\n\r\n        {/* <Route exact path = \"/\" component = {Principal} /> */}\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/registro\" component={Register} />\r\n        \r\n        <Route path = \"/registro/profesional\" component = {RegisterProfesional} />\r\n        <Route path = \"/registro/empresa\" component = {RegistroBusiness} />\r\n\r\n        <Route path = '/chat/:id?' component = {ChatPage} />\r\n\r\n        <PrivateRouteRegister path = \"/registro/postregister\" component={PostRegister} />\r\n        <PrivateRouteRegister  path = \"/registro/rubro\" component={Rubro}  />\r\n        <PrivateRoute path = \"/dashboard\" component={Dashboard} />\r\n\r\n        <PrivateRoute path = \"/mispublicaciones\" component={Publicaciones} />\r\n        <PrivateRoute path = \"/misproyectos\" component={Proyectos} />\r\n\r\n        {/* <Route path = \"/registro/postregister\" component = {PostRegister} />\r\n        <Route path = \"/registro/rubro\" component = {Rubro} /> */}\r\n        <PrivateRoute path = \"/home\" component={HomeProfesional} />\r\n        <PrivateRoute path = \"/micuenta\" component={MiCuenta} />\r\n        <PrivateRoute path = \"/miperfil\" component={MiPerfil} />\r\n        <PrivateRoute path = \"/propuesta/:id\" component={PropuestaPage} />\r\n        <PrivateRoute path = \"/usuariopropuestas\" component={UserPropuestas} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["235","236"],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Hoc\\PrivateRouterRegister.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Hoc\\isLoggedIn.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\postRegisterPage.js",["237","238"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/postRegister.css\";\r\n\r\n/* React Boostrap */\r\nimport { Card, Button, Container, Row, Col, Alert, Image } from \"react-bootstrap\";\r\n\r\n\r\nconst PostRegister = (props) => {\r\n\r\n    const [isDisable, setIsDisable] = useState(true)\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"content-container\">\r\n        <Card className = \"card-style-post\">\r\n          <Card.Body style = {{ padding: 0 }}>\r\n            <Container>\r\n              <Row>\r\n                <Col lg={8} md = {12} className = \"left-content-post\" >\r\n                  <h3 style = {{ textAlign: 'center' }}>Hola {  props.auth !== null ? props.auth.nombre_completo : null  } bienvenido.</h3>\r\n                  <label style = {{ marginTop: '10px' }}>\r\n                    Aqui te ayudaremos a crear tu perfil como freelancer para\r\n                    que consigas tu primer proyecto. Sigue estos pasos, y llena\r\n                    toda la informacion posible para que aumenten tus\r\n                    posibilidades de conseguir empleo.\r\n                    <br />\r\n                    <br />\r\n                    Ten en cuenta que un perfil con poca informacion es un\r\n                    perfil sin transparencia, por ende tus posibilidades de\r\n                    conseguir trabajo se veran afectadas de manera directa\r\n                  </label>\r\n                  <br />\r\n                  <br />\r\n                  <label className = \"checkbox-container\">\r\n                    <input\r\n                      name=\"isGoing\"\r\n                      type=\"checkbox\"\r\n                      style = {{ marginRight: '5px' }}\r\n                      className = \"checkbox-style\"\r\n                      onChange={ () => setIsDisable(!isDisable)   }\r\n                    />\r\n                    Entendido\r\n                  </label>\r\n                </Col>\r\n                <Col lg={4} md = {12} className = \"right-content-post\">\r\n                    <Image className = \"img-container-post\" src=\"/assets/imagenStudy.jpg\" fluid />     \r\n                    <div className = \"boton-contenedor\">    \r\n                    <Button onClick = { () => props.history.push('/registro/rubro')  } style = {{ marginTop: '10%', borderRadius: '20px' }} variant=\"success\" disabled = {isDisable}>Comenzar</Button>\r\n                    </div>   \r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\r\n  const {  auth  } = state\r\n\r\n  return {\r\n    auth: auth.user\r\n  }\r\n\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n\r\n\r\n\r\n// }\r\n\r\nexport default connect(mapStateToProps, null) (PostRegister);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\registerProfesional.js",["239","240","241","242","243","244","245","246","247","248","249"],"/* React importaciones */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { storage } from \"../firebase/index\"\r\n\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUser,\r\n  faAddressBook,\r\n  faEye,\r\n  faEyeSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/PageStyles/registerProfesional.css\";\r\n\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\nimport { register } from \"../actions/authAction\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst RegisterProfesional = (props) => {\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n\r\n    if (props.error.id != null) {\r\n      toast.error(props.error.msg.message)\r\n      props.clearErrors()\r\n    }\r\n\r\n  }, [props.error])\r\n\r\n  const [isShowPass1, setIsShowPass1] = useState(true);\r\n  const [isShowPass2, setIsShowPass2] = useState(true);\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [disableButton, setDisableButto] = useState(true);\r\n\r\n  const [selectedState, setSelectedState] = useState(\"Selecciona tu estado\");\r\n\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const [usernameError, setUsernameError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [stateError, setStateError] = useState(null);\r\n\r\n  const [pdfError, setPdfError] = useState(null);\r\n\r\n\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\r\n\r\n  const [copyStates , setCopyStates] = useState([])\r\n\r\n  const [pdf, setPdf] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n\r\n    setCopyStates(states)\r\n\r\n  }, [])\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    state: \"\",\r\n    isBussines: false,\r\n  });\r\n\r\n\r\n  const stateChange = (v) => {\r\n    setSelectedState(v);\r\n    setUserInfo({ ...userInfo, state: v });\r\n  };\r\n\r\n  const checkForm = () => {\r\n    if (userInfo.name === \"\") {\r\n      errorHandler(setNameError, \"Por favor, ingrese un nombre\");\r\n    }\r\n    else if (userInfo.username === \"\") {\r\n      errorHandler(setUsernameError, \"Por favor, ingrese un nombre de usuario\");\r\n    }\r\n    else if (userInfo.password === \"\") {\r\n      errorHandler(setPasswordError, \"Por favor, ingrese una contraseña\");\r\n    }\r\n    else if (userInfo.state === \"\") {\r\n      errorHandler(setStateError, \"Por favor, ingrese una fecha\");\r\n    }\r\n    else if (userInfo.password !== confirmPassword && userInfo.password.length > 0) {\r\n      errorHandler(setConfirmPasswordError, \"Contraseñas no coinciden\");\r\n    } else if (pdf === \"\") {\r\n      errorHandler(setPdfError, \"Por favor, ingrese un curriculum\")\r\n    } else if (pdf.type !== \"application/pdf\") {\r\n      errorHandler(setPdfError, \"Por favor, ingrese un curriculum en pdf\")\r\n    } else {\r\n      props.onRegister({ ...userInfo,  pdf_url: pdf  }, props.history)\r\n    }\r\n  };\r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const registrarse = () => {\r\n\r\n    checkForm();\r\n  };\r\n\r\n  const uplodadFile = async (files) => {\r\n\r\n    setPdf(files[0])\r\n\r\n  } \r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"card-continer-profesional\">\r\n        <Card className=\"card-profesional\">\r\n          <Card.Body>\r\n            <Card.Title style={{ textAlign: \"center\" }}>\r\n              Crear cuenta\r\n            </Card.Title>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faAddressBook} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, name: e.target.value })\r\n                }\r\n                placeholder=\"Nombre Completo\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={nameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{nameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, username: e.target.value })\r\n                }\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={usernameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{usernameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass1(!isShowPass1)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass1 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, password: e.target.value });\r\n                  setConfirmPassword(e.target.value == \"\" ? \"\" : null);\r\n                }}\r\n                placeholder=\"Contraseña\"\r\n                type={isShowPass1 ? \"password\" : null}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass2(!isShowPass2)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass2 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={userInfo.password.length == 0}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirmar Contraseña\"\r\n                type={isShowPass2 ? \"password\" : null}\r\n                value={confirmPassword}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={confirmPasswordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{confirmPasswordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedState}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese ciudad\"\r\n                onChange={ (e) => setCopyStates(states.filter( (v) => v.toLowerCase().includes(e.target.value.toLowerCase()) ) )  }\r\n              />\r\n                </div>\r\n                {copyStates.map((value, i) => (\r\n                  <Dropdown.Item key = {i} onClick={() => stateChange(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <div style = {{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\r\n            <input type = \"file\" ref = {inputRef} onChange = { (e) =>  uplodadFile(e.target.files) } style = {{ marginBottom: '10px', display: 'none' }} />\r\n\r\n            <Button onClick = {() => inputRef.current.click()} variant=\"success\">Subir curriculum</Button>\r\n\r\n            </div>\r\n              \r\n            <Transition\r\n              items={pdfError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{pdfError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n            \r\n            <label style={{ fontSize: \"14px\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => setDisableButto(!disableButton)}\r\n              />{\" \"}\r\n              Al crear tu cuenta aceptas los terminos de servicio y politica de\r\n              seguridad\r\n            </label>\r\n\r\n            <Button\r\n              disabled={disableButton}\r\n              style={{ width: \"100%\" }}\r\n              variant=\"success\"\r\n              onClick={() => registrarse()}\r\n            >\r\n              Registrarse\r\n            </Button>\r\n            <ToastContainer />\r\n\r\n\r\n            <hr />\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>\r\n                Ya estas registrado?{\" \"}\r\n              </label>{\" \"}\r\n              <Link to=\"/login\" style={{ marginLeft: \"3px\" }}>\r\n                Ingresa\r\n              </Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, error } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegister: (user, history) => {\r\n      dispatch(register(user, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( RegisterProfesional );\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Hoc\\PrivateRouter.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\register.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\principal.js",["250","251","252","253","254","255"],"/* React importaciones */\r\nimport React, { useState, useEffect} from \"react\";\r\nimport {  connect } from 'react-redux'\r\n\r\n/* React boostrap */\r\nimport {\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Spinner,\r\n  Container,\r\n  Image,\r\n  Dropdown,\r\n  Modal,\r\n  Badge\r\n} from \"react-bootstrap\";\r\n\r\n\r\n/* Components */\r\nimport Navbar from \"../components/navBar\";\r\nimport Categories from \"../components/categories\";\r\nimport Footer from \"../components/footer\";\r\nimport RightSide from \"../components/rightSide\";\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/principal.css\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* Importaciones */\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n/* Actions */\r\nimport { getRubros, getRubroInfo } from '../actions/rubroActions'\r\n\r\nconst Principal = ( { onGetRubros, rubros, onGetRubroInfo, rubroInfo, loadingRubros } ) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const [rubroSelected, setRubroSelected] = useState( {nombre: \"Seleccione algun rubro\" })\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const [categories, setCategories] = useState([\r\n    {\r\n      titulo: \"Programador\",\r\n      src:\r\n        \"/assets/ProgramacionImagen.jpg\",\r\n      contenido: 'Busca al mejor programador para tu empresa'\r\n    },\r\n    {\r\n      titulo: \"Diseño\",\r\n      src:\r\n      \"/assets/DisenoImagen.jpg\",\r\n      contenido: 'Consigue al diseñador mas creativo'\r\n    },\r\n    {\r\n      titulo: \"Escritura\",\r\n      src:\r\n      \"/assets/EscrituraImagen.jpg\",\r\n      contenido: 'Escritura, redaccion y mas'\r\n    },\r\n    {\r\n      titulo: \"Marketing\",\r\n      src:\r\n      \"/assets/MarketingImagen.jpg\",\r\n      contenido: 'Nada mejor que una persona responsable manejando las publicidades'\r\n    },\r\n    {\r\n      titulo: \"Administracion\",\r\n      src:\r\n      \"/assets/AdministracionImagen.jpg\",\r\n      contenido: 'Consigue a un experto que sepa administrar tu negocio'\r\n    },\r\n    {\r\n      titulo : \"Ingenieria\",\r\n      src: \"/assets/IngenieriaImagen.jpg\",\r\n      contenido: 'Consigue personal relacionado al ambito de la ingenieria'\r\n    },\r\n    {\r\n      titulo: 'Idiomas',\r\n      src: \"/assets/IdiomasImagen.jpg\",\r\n      contenido: 'Traduccion de texto y mucho mas'\r\n    },\r\n    {\r\n      titulo: 'Leyes',\r\n      src: \"/assets/LeyesImagen.jpg\",\r\n      contenido: 'Problema legal? Consigue a las personas mas preparadas'\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n\r\n    //Ver de donde saco el id\r\n    onGetRubros()\r\n\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n    if (!!rubros) {\r\n\r\n      \r\n\r\n    }\r\n\r\n  }, [rubros])\r\n\r\n  useEffect(() => {\r\n\r\n    if (!!rubroInfo && !!rubroInfo.data && !isLoading) {\r\n        setShow(true)\r\n    }\r\n\r\n    if (!!rubroInfo && !!!rubroInfo.data && !!rubroInfo.msg && !isLoading ) {\r\n      toast.warn(rubroInfo.msg)\r\n    }\r\n\r\n  }, [rubroInfo, isLoading])\r\n\r\n\r\n  const search = () => {\r\n\r\n    setIsLoading(true);\r\n\r\n    //Peticion\r\n    onGetRubroInfo(rubroSelected.rubro_id)\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const selectRubro = valor => {\r\n\r\n    setRubroSelected(valor)\r\n  }\r\n\r\n  return (\r\n    <div className=\"Main-page\">\r\n\r\n      <Modal show={show} onHide={() => setShow(false) } animation={false} >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cantidad de profesionales registrados como { !!rubroInfo && !!rubroInfo.data ? rubroInfo.data.nombre : null}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div style = {{ display: 'flex', flexDirection: 'column' }}>\r\n            <div>\r\n              <FontAwesomeIcon icon = {faCheck} style = {{ marginRight: '20px' }} />\r\n              Cantidad de profesionales inscritos en dicha area: {  !!rubroInfo && !!rubroInfo.data ? <Badge variant=\"primary\">{rubroInfo.data.count}</Badge> : null }\r\n            </div>\r\n            <div>\r\n              <FontAwesomeIcon icon = {faCheck} style = {{ marginRight: '20px' }} />\r\n               El {  !!rubroInfo && !!rubroInfo.data ? <Badge variant=\"primary\">{ Math.round( ( rubroInfo.data.count / rubroInfo.data.users_total ) * 100 ) }%</Badge> : null } de profesionales,\r\n               se registró en el area de { !!rubroInfo && !!rubroInfo.data ? rubroInfo.data.nombre : null }\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Navbar type = \"home\" />\r\n      <div className=\"bg-success\" style={{ paddingBottom: \"5%\" }}>\r\n        <div>\r\n          <Row className = \"main-container\">\r\n            <Col>\r\n            <div className = \"center-div\">\r\n\r\n                <div className = \"text-container\">\r\n\r\n                <h1 style={{ color: \"white\" }}>\r\n                  Encuentra el talento que <br></br> necesitas{\" \"}\r\n                </h1>\r\n                </div>\r\n\r\n                <InputGroup className=\"mb-3\" style={{ width: \"70%\" }}>\r\n                  {/* <InputGroup.Text id=\"basic-addon1\">\r\n                    {isLoading ? (\r\n                      <Spinner\r\n                        animation=\"border\"\r\n                        variant=\"success\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      >\r\n                        {\" \"}\r\n                      </Spinner>\r\n                    ) : (\r\n                      <FontAwesomeIcon className=\"icon\" icon={faSearch} />\r\n                    )}\r\n                  </InputGroup.Text>\r\n\r\n                  <FormControl\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                    placeholder=\"¿Que desea buscar?\"\r\n                  /> */}\r\n                  \r\n                  <Dropdown>\r\n                    <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" style = {{ width: '240px' }}>\r\n                      { rubroSelected.nombre }\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n\r\n                      { !!rubros ? rubros.map((valor, i) => ( <Dropdown.Item onClick = {() => selectRubro(valor) } key = {i}>{valor.nombre}</Dropdown.Item>) ) : null }\r\n\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                  <InputGroup.Append style={{ marginLeft: \"5px\" }}>\r\n                    <Button variant=\"dark\" onClick={() => search()}>\r\n                      {  isLoading ? <Spinner style = {{ height: '22px', width: '22px' }} animation=\"border\" role=\"status\" /> : 'Buscar'  }\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n            </div>\r\n            </Col>\r\n            <Col>\r\n              <div className = \"img-container\">\r\n                  \r\n              <Image src = '/work.svg' className = \"img\" />\r\n\r\n                \r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n\r\n      <Container>\r\n        <h1 style={{ margin: \"20px\" }}>Categorias</h1>\r\n\r\n        <Row>\r\n          {categories.map((v, i) => {\r\n            return (\r\n              <Col key = {i} lg={3} sm={6}>\r\n                <Categories content={v} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n\r\n      <div style={{ background: \"#F2EEED\", paddingBottom: '30px', paddingTop: '30px' }}>\r\n        <h4 style={{ textAlign: \"center\" }}>Como funciona?</h4>\r\n        <Container style={{ marginTop: \"50px\" }}>\r\n          <Row>\r\n            <Col sm = {6} lg = {4} >\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <Image\r\n                    style={{ width: \"80px\", height: \"80px\"}}\r\n                    src=\"/assets/PublicaTrabajoImagen.png\"\r\n                    roundedCircle\r\n                  />\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <label style = {{ display: \"block\"  }}>Publica un trabajo</label>\r\n                  <label\r\n                    style={{ overflowWrap: \"break-word\", display: \"inline\" }}\r\n                  >\r\n                    Publica un trabajo en el caso de ser alguna empresa en busca de empleados.\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm = {6} lg = {4}>\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <Image\r\n                    style={{ width: \"80px\", height: \"80px\" }}\r\n                    src=\"/assets/ObtenOfertas.svg\"\r\n                    roundedCircle\r\n                  />\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <label style = {{ display: \"block\"  }}>Obten ofertas</label>\r\n                  <label\r\n                    style={{ overflowWrap: \"break-word\", display: \"inline\" }}\r\n                  >\r\n                    Obten propuestas que vayan adaptados a tu rubro\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm = {6} lg = {4}>\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <Image\r\n                    style={{ width: \"80px\", height: \"80px\" }}\r\n                    src='/assets/pagaseguro.jpg'\r\n                    roundedCircle\r\n                  />\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <label style = {{ display: \"block\"  }}>Paga rapido y seguro</label>\r\n                  <label\r\n                    style={{ overflowWrap: \"break-word\", display: \"inline\" }}\r\n                  >\r\n                    Ponte de acuerdo con tus empleados por medio del chat y pagales de una forma segura\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      <Container style={{ marginTop: \"30px\", marginBottom: '30px' }}>\r\n        <Row className = \"row-container\">\r\n          <Col style = {{ marginBottom : '30px' }}>\r\n            <h1>Lo que ofrecemos</h1>\r\n\r\n            <label>\r\n              Ofrecemos un sistema web para profesionales Venezolanos y empresas Venezolanas que quieran destacar en sus profesiones\r\n              siguiendo los valores de:\r\n            </label>\r\n\r\n            <label style={{ display: \"block\" }}>- Transparencia</label>\r\n            <label style={{ display: \"block\" }}>- Respeto</label>\r\n            <label style={{ display: \"block\" }}>- Trabajo</label>\r\n            <label style={{ display: \"block\" }}>- Confianza</label>\r\n          </Col>\r\n\r\n          <Col style = {{ display: 'flex', textAlign: 'center' }}>\r\n            <RightSide imgWidth = \"100%\" imgHeight = \"100%\" src = \"/assets/Trato.jpeg\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <ToastContainer />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { rubros } = state\r\n\r\n  return {\r\n    rubros : rubros.rubros,\r\n    rubroInfo : rubros.rubroInfo,\r\n    loadingRubros: rubros.isLoading\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onGetRubros : () => {\r\n      dispatch(getRubros())\r\n    },\r\n    onGetRubroInfo : (id) => {\r\n      dispatch(getRubroInfo(id))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Principal);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\homeProfesional.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Toast,\r\n  Carousel,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Spinner,\r\n  Button,\r\n  Modal\r\n} from \"react-bootstrap\";\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/home.css\";\r\n// import \"../styles/PageStyles/homeProfesional.css\"\r\n\r\n/* Componentes */\r\nimport NavBar from \"../components/navBar\";\r\n\r\n/* Acciones */\r\nimport { getRubros } from \"../actions/rubroActions\";\r\nimport { getAnuncios } from \"../actions/anunciosActions\";\r\nimport { getAreaById } from '../actions/areasActions'\r\nimport { sendPropuesta, cleanPropuesta, getPropuestas  } from \"../actions/propuestaActions\"\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faSearch,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst HomeProfesional = ({\r\n  auth,\r\n  history,\r\n  onGetRubros,\r\n  rubros,\r\n  anuncios,\r\n  onGetAnuncios,\r\n  onGetAreaById,\r\n  onSendPropuesta,\r\n  propuesta,\r\n  onCleanPropuesta,\r\n  onGetPropuestas\r\n}) => {\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [rubrosState, setRubrosState] = useState([]);\r\n\r\n  const [valueInput, setValueInput] = useState(\"\");\r\n\r\n  const [anunciosUsers, setAnunciosUsers] = useState([])\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [descripcion, setDescripcion] = useState(\"\")\r\n\r\n  const [currentSelected, setCurrentSelected] = useState(\"\")\r\n\r\n  const [isFirstRender, setIsFirstRender] = useState(true)\r\n\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setToast(false);\r\n  //   }, 6000);\r\n  // }, []);\r\n\r\n  /* Cuando abandona la view */\r\n  useEffect(() => {\r\n    return () => {\r\n      if (history.action == \"POP\") {\r\n        window.location.href = \"/home\";\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    // onGetAnuncios(history.location.search);\r\n    onGetPropuestas(auth.user.username_freelancer)\r\n\r\n    console.log(\"PROPUESTA\", propuesta)\r\n\r\n    /* Hacer peticion si aun no tenemos los rubros en redux */\r\n    if (rubros.rubros == null) {\r\n      onGetRubros();\r\n    }\r\n\r\n    setChips((oldValues) => [...oldValues, { value: \"Todas las categorias\", id: 0 }]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (rubros.rubros !== null) {\r\n      let newValue = rubros.rubros.map((v) => {\r\n        return {\r\n          nombre: v.nombre,\r\n          isChecked: false,\r\n          id: v.rubro_id\r\n        };\r\n      });\r\n\r\n      newValue.unshift({ nombre: \"Todas las categorias\", isChecked: true, id : 0 });\r\n\r\n      setRubrosState(newValue);\r\n    }\r\n  }, [rubros.rubros]);\r\n\r\n  /* Use Effect solo para escuchar a anuncios */\r\n  useEffect(() => {\r\n\r\n\r\n    if(anuncios.anuncios !== undefined) {\r\n\r\n\r\n      let anunciosFilter = anuncios.anuncios.filter(v => v.username_freelancer !== auth.user.username_freelancer  )\r\n\r\n      setAnunciosUsers(anunciosFilter)\r\n\r\n    }\r\n\r\n  }, [anuncios.anuncios]  )\r\n\r\n  useEffect(() => {\r\n\r\n    let query = \"?\"\r\n      \r\n    if(chips.length > 0) {\r\n\r\n      console.log(\"ENTRA\")\r\n\r\n      chips.map( (v, i) => {\r\n        query += \"b\"  +i + \"=\" + v.id + \"&\"\r\n      })\r\n\r\n      history.push(({\r\n        pathname: '/home',\r\n        search: query\r\n      }))\r\n\r\n      console.log(\"QUERY\", query)\r\n      onGetAnuncios(query)\r\n\r\n    } else {\r\n      console.log(\"ELSE\")\r\n      history.push({\r\n        patname: '/home',\r\n        search: ''\r\n      })\r\n\r\n      onGetAnuncios(\"\")\r\n    } \r\n\r\n  }, [chips])\r\n\r\n  useEffect(() => {\r\n\r\n    if(propuesta.msg !== null) {\r\n      toast.success(propuesta.msg)\r\n      onCleanPropuesta()\r\n      onGetPropuestas(auth.user.username_freelancer)\r\n    }\r\n\r\n  }, [propuesta.msg])\r\n\r\n\r\n  const getRubroByAnuncio = (rubroId) => {\r\n    console.log('rubroid ->', !rubros.rubros.find(v => v.rubro_id === rubroId).nombre ? null:false)\r\n    const selectedRubro = rubros.rubros.find(v => v.rubro_id === rubroId).nombre\r\n    return (\r\n      <div>\r\n        { rubros.rubros !== null ? selectedRubro : null} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  const changeCombo = (v, index, evento) => {\r\n\r\n    if (evento.target.checked) {\r\n      // if(chips.length > 2) {\r\n      //   toast.error(\"Solo puedes Seleccionar 3 Categorias\")\r\n      // } else {\r\n      let values = [...rubrosState];\r\n      values[index].isChecked = evento.target.checked;\r\n      setRubrosState(values);\r\n      setChips((oldValues) => [...oldValues, { value: v.nombre, id: v.id }]);\r\n      // }\r\n    } else {\r\n      let valor = [...rubrosState];\r\n      valor[index].isChecked = evento.target.checked;\r\n      setRubrosState(valor);\r\n      let newValue = chips.filter((value) => value.value !== v.nombre);\r\n      setChips(newValue);\r\n    }\r\n  };\r\n\r\n  const onSearch = () => {\r\n\r\n    if (chips.length <= 0 && valueInput === \"\") {\r\n      toast.warn(\"Ingrese algun filtro\");\r\n    } else {\r\n\r\n      // history.push({\r\n      //   patname: '/home',\r\n      //   search: history.location.search + \"value=\"+ valueInput\r\n      // })\r\n\r\n      let query = \"?\"\r\n      \r\n\r\n      chips.map( (v, i) => {\r\n        query += \"b\"  +i + \"=\" + v.id + \"&\"\r\n      })\r\n\r\n      history.push(({\r\n        pathname: '/home',\r\n        search: query + \"value=\" + valueInput\r\n      }))\r\n\r\n      onGetAnuncios(history.location.search)\r\n\r\n    }\r\n  };\r\n\r\n  const deleteChip = (value, index) => {\r\n    setChips(chips.filter((v, i) => i !== index));\r\n\r\n    let getRubroIndex = rubrosState.findIndex((v) => v.nombre === value.value);\r\n\r\n    let updateState = [...rubrosState];\r\n\r\n    updateState[getRubroIndex].isChecked = false;\r\n\r\n    setRubrosState(updateState);\r\n\r\n  };\r\n\r\n  const sendPropuesta = (valor = currentSelected) => {\r\n\r\n    onSendPropuesta({\r\n      anuncio_id: valor.anuncio_id,\r\n      username_freelancer: valor.username_freelancer,\r\n      descripcion,\r\n      user_prop: auth.user.username_freelancer\r\n    })\r\n\r\n    setShow(false)\r\n\r\n  }\r\n\r\n  const modal = (v) => {\r\n\r\n    setShow(true)\r\n\r\n    setCurrentSelected(v)\r\n\r\n  }\r\n\r\n  const renderBoton = (v) => {\r\n\r\n    if (!auth.user.isbussines) {\r\n      if (propuesta.propuestasByUser !== null) {\r\n\r\n        const checkIfSend = propuesta.propuestasByUser.find(valor => valor.anuncio_id === v.anuncio_id )\r\n\r\n        if(checkIfSend) {\r\n          return null\r\n        } else {\r\n          return <Button variant=\"success\" style = {{ borderRadius: '30px', height: '38px' }} onClick = { () => modal(v) } >Enviar Propuesta</Button>\r\n        }\r\n      }\r\n\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <NavBar />\r\n      <header>\r\n        <Carousel slide={false} fade={false}>\r\n          <Carousel.Item interval={5000}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"/assets/NoteBookSlider.jpg\"\r\n              alt=\"First slide\"\r\n              style={{ height: \"80vh\" }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>Consigue trabajo</h3>\r\n              <p>Sin necesidad de ir al lugar</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={5000}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"/assets/LaptopSlider.jpg\"\r\n              alt=\"Third slide\"\r\n              style={{ height: \"80vh\" }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>Trabaja</h3>\r\n              <p>De una forma rapida y segura.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"/assets/LaptopThirdSlider.jpg\"\r\n              alt=\"Third slide\"\r\n              style={{ height: \"80vh\" }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>Aumenta tu reputacion</h3>\r\n              <p>Con una mejor reputacion podras conseguir mas trabajos.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </header>\r\n\r\n      <Container style={{ marginTop: \"40px\", height: \"100vh\" }}>\r\n        <Row>\r\n          <Col lg={4}>\r\n            <Card\r\n              className=\"shadow p-3 mb-5 bg-white rounded\"\r\n              style={{ width: \"18rem\" }}\r\n              className=\"card-home-profesional\"\r\n            >\r\n              {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n              <Card.Body>\r\n                {rubros.rubros !== null\r\n                  ? rubrosState.map((v, i) => {\r\n                      return (\r\n                        <div\r\n                          key = {i}\r\n                          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                        >\r\n                          <label>\r\n                            {\" \"}\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={v.isChecked}\r\n                              onChange={(e) => changeCombo(v, i, e)}\r\n                            />{\" \"}\r\n                            {v.nombre}\r\n                          </label>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={8} style={{ height: \"100vh\" }}>\r\n            <InputGroup className=\"mb-3 shadow\">\r\n              <FormControl\r\n                placeholder=\"Busca trabajo\"\r\n                onChange={(e) => setValueInput(e.target.value)}\r\n              />\r\n              <InputGroup.Append onClick={() => onSearch()}>\r\n                <InputGroup.Text id=\"basic-addon2\">\r\n                  {anuncios.isLoading ? (\r\n                    <Spinner\r\n                      animation=\"border\"\r\n                      variant=\"success\"\r\n                      style={{ width: \"20px\", height: \"20px\" }}\r\n                    >\r\n                      {\" \"}\r\n                    </Spinner>\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                  )}\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n\r\n            {/* <Row style = {{ marginTop: '30px' }}> */}\r\n\r\n            {chips.length > 0 ? (\r\n              <div className=\"chips-home-user\">\r\n                {chips.map((v, i) => {\r\n                  return (\r\n                    <div\r\n                      key = {i}\r\n                      className=\"chips-container-home-user\"\r\n                      style={{ backgroundColor: \"#18D735\" }}\r\n                    >\r\n                      <div className=\"chip-element-user\">\r\n                        <label>{v.value}</label>\r\n                        <FontAwesomeIcon\r\n                          className=\"icon-rubro-container\"\r\n                          icon={faTimesCircle}\r\n                          onClick={() => deleteChip(v, i)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null }\r\n            {/* </Row> */}\r\n              \r\n            {  /* Aqui ira el mapeo de los anuncios */ }   \r\n            { anunciosUsers.length > 0 ?  ( \r\n              anunciosUsers.map((v, i) => {\r\n                return (\r\n                  \r\n              <Card key = {i} style = {{ marginTop: '30px', borderColor: 'green', borderWidth: '3px' }} className = \"shadow\">\r\n              <Card.Body>\r\n                <div className = \"titulo-container\">\r\n                <Card.Title style = {{ width : '60%' }}>{ v.titulo }</Card.Title>\r\n                {   renderBoton(v) }\r\n                </div>\r\n                <Card.Text style = {{ marginTop: '10px'}}>\r\n                  { v.descripcion }\r\n                </Card.Text>\r\n                \r\n                <div className=\"chips-home-user\">\r\n                \r\n                { v.area_Info.map((area, i) => {\r\n                  return (\r\n                    <div\r\n                      key = {i}\r\n                      className=\"chips-container-post-user\"\r\n                      style={{ backgroundColor: \"#18D735\" }}\r\n                    >\r\n                      <div className=\"chip-element-user\">\r\n                        <label>{area.nombre}</label>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                }) }\r\n                </div>\r\n\r\n                <div style = {{ display: 'flex', flexDirection: 'row',  marginTop: '25px' }}>\r\n                <label style = {{ marginRight: '5px' }}> \r\n                <strong>Categoria: </strong>\r\n                </label> \r\n                <label>{getRubroByAnuncio(v.rubro_id)} </label>\r\n                </div>\r\n                \r\n               \r\n                <label style = {{ marginTop: '15px', display: 'block' }} ><strong>Disponibilidad:</strong> { v.disponibilidad } </label>\r\n                <label style = {{ marginTop: '15px', display: 'block' }} ><strong>Publicado por:</strong> {v.username_freelancer}</label>\r\n                \r\n\r\n\r\n                {/* <Button variant=\"primary\">Go somewhere</Buttonn> */}\r\n              </Card.Body>\r\n            </Card>\r\n                )\r\n              })\r\n\r\n              ) : <h1 style = {{ textAlign: 'center', marginTop: '20%' }}>No hay anuncios disponibles</h1> }\r\n            \r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal\r\n        show={show}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        onHide = { () => setShow(false)}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Ingresa una descripcion de tu propuesta</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <FormControl as = \"textarea\" placeholder=\"Descripcion\" onChange = { (e) => setDescripcion(e.target.value)  }  />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick = { () => setShow(false)  }>\r\n            Cerrar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick = { () => sendPropuesta() }>Enviar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, rubros, anuncios, propuesta } = state;\r\n\r\n  return {\r\n    auth,\r\n    rubros,\r\n    anuncios,\r\n    propuesta\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetRubros: () => {\r\n      dispatch(getRubros());\r\n    },\r\n    onGetAnuncios: (query) => {\r\n      dispatch(getAnuncios(query));\r\n    },\r\n    onGetAreaById: (id) => {\r\n      dispatch(getAreaById(id))\r\n    },\r\n    onSendPropuesta: (data) => {\r\n      dispatch(sendPropuesta(data))\r\n    },\r\n    onCleanPropuesta: () => {\r\n      dispatch(cleanPropuesta())\r\n    },\r\n    onGetPropuestas: (id) => {\r\n      dispatch(getPropuestas(id))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeProfesional);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\login.js",["270","271","272","273","274","275","276","277"],"/* React importaciones */\r\nimport React, { useState, useLayoutEffect, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/login.css\";\r\n\r\n/* Actions */\r\nimport { login } from \"../actions/authAction\";\r\nimport { NOT_USER } from \"../actions/types\";\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Otros */\r\nimport { loadProgressBar } from \"axios-progress-bar\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { faUser, faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\n\r\n/* CSS */\r\nimport \"axios-progress-bar/dist/nprogress.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Login = ({ onLogin, history, auth, error, clearErrors }) => {\r\n  /* Antes de renderizar la view */\r\n  useEffect(() => {\r\n    if (error.id != null) {\r\n      if (error.id == NOT_USER) {\r\n        toast.warn(error.msg.message);\r\n      } else {\r\n        toast.error(error.msg.message);\r\n      }\r\n    }\r\n  }, [error]);\r\n\r\n  const items = [1, 2, 34, 5, 6, 77];\r\n\r\n  /* Antes de que renderice en el dom */\r\n  useLayoutEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push(\"/home?b0=0&\");\r\n    }\r\n  }, []);\r\n\r\n  /* Cuando abandona la view */\r\n  useEffect(() => {\r\n    return () => {\r\n      clearErrors();\r\n    };\r\n  }, []);\r\n\r\n  const [usuario, setUsuario] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [userError, setUserError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [isShow, setIsShow] = useState(false);\r\n\r\n  const checkForm = () => {\r\n    if (usuario == \"\" && password == \"\") {\r\n      errorHandler(setUserError, \"Por favor, ingrese valores en el input\");\r\n      errorHandler(setPasswordError, \"Por favor ingrese valores en el input\");\r\n    }\r\n    if (usuario == \"\") {\r\n      errorHandler(setUserError, \"Por favor, ingrese valores en el input\");\r\n    } else if (password.length < 4) {\r\n      errorHandler(setPasswordError, \"Contraseña muy corta\");\r\n    } else {\r\n      onLogin(usuario, password, history);\r\n    }\r\n  };\r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <div className=\"page-container\">\r\n      {loadProgressBar()}\r\n      <KeyboardEventHandler\r\n        handleKeys={[\"enter\"]}\r\n        onKeyEvent={(key, e) => onLogin(usuario, password, history)}\r\n      />\r\n\r\n        <Card className=\"card-container\">\r\n          <Card.Body>\r\n            <Form.Label>Usuario</Form.Label>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e) => setUsuario(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n            {/* {userError !== null ? (\r\n              <div>\r\n                <Alert variant=\"danger\">{userError}</Alert>\r\n              </div>\r\n            ) : null} */}\r\n\r\n            <Transition\r\n              items={userError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{userError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <Form.Label>Contraseña</Form.Label>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShow(!isShow)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={isShow ? faEyeSlash : faEye} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder=\"Contraseña\"\r\n                type={isShow ? null : \"password\"}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n\r\n            {/* {passwordError !== null ? (\r\n              <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}>\r\n                {(props) => (\r\n                  <div style={props}>\r\n                    {\" \"}\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                )}\r\n              </Spring>\r\n            ) : null} */}\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            {/* <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}  >\r\n              {(props) => <div style={props}></div>}\r\n            </Spring> */}\r\n\r\n            {/* {passwordError !== null ? (\r\n              <div>\r\n                <Alert variant=\"danger\">{passwordError}</Alert>\r\n              </div>\r\n            ) : null} */}\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button\r\n                onClick={() => checkForm()}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"primary\"\r\n              >\r\n                Iniciar Sesion\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"2%\",\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={() => history.push(\"/registro\")}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n              >\r\n                Registrarse\r\n              </Button>\r\n              <ToastContainer />\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, error } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogin: (usuario, password, history) => {\r\n      dispatch(login(usuario, password, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\dashboard.js",["278","279","280"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from '../components/navBar'\r\n\r\nimport { SET_RENDER } from '../actions/types'\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    useEffect (() => {\r\n      if(props.isFirstRender.firstRender) {\r\n        toast.success(\"Bienvenido \" + props.auth.user.nombre_completo )\r\n        props.onFistRenderChange()\r\n      }\r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n        <NavBar />\r\n      <h1>Dashboard</h1>\r\n      {  }\r\n      <ToastContainer type = \"logeado\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth, isFirstRender } = state\r\n\r\n    return {\r\n        auth,\r\n        isFirstRender\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onFistRenderChange: () => {\r\n      dispatch({type: SET_RENDER })\r\n    }\r\n\r\n  }\r\n   \r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Dashboard)\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\rubroPage.js",["281","282","283","284","285","286","287","288","289","290"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Actions */\r\nimport { getRubros } from '../actions/rubroActions'\r\nimport {  getAreas } from '../actions/areasActions'\r\nimport { sendAreas } from '../actions/areasActions'\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/rubro.css\";\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Image,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faSearch,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* Otros */\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nconst Rubro = (props) => {\r\n\r\n  useEffect(() => {\r\n   props.onGetRubros()    \r\n  }, [])\r\n\r\n  // /* Peticion a la base de datos */\r\n  // const [rubros, setRubros] = useState([\r\n  //   \"Programacion y tecnologia\",\r\n  //   \"Diseño y multimedia\",\r\n  //   \"Redaccion y traduccion\",\r\n  //   \"Marketing digital y ventas\",\r\n  //   \"Soporte administrativo\",\r\n  //   \"Legal\",\r\n  //   \"Finanzas y Negocios\",\r\n  //   \"Ingenieria y Arquitectura\",\r\n  // ]);\r\n\r\n  const [rubroIndex, setRubroIndex] = useState(null);\r\n\r\n  const [rubroValue, setRubroValue] = useState(null)\r\n\r\n  const [experiencia, setExperiencia] = useState([\r\n    \"menos de 1 año\",\r\n    \"entre 1 y 3 años\",\r\n    \"4 a 6 años\",\r\n    \"mas de 7 años\",\r\n  ]);\r\n\r\n  const [experienciaSelected, setExperienciaSelected] = useState(\"Experiencia\")\r\n\r\n  const[experienciaTemp, setExperienciaTemp] = useState(\"\")\r\n\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [estadoChip, setEstadoChip] = useState(\"new\")\r\n\r\n  const [send, setSend] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n    if( chips.length > 0 && estadoChip === \"new\") {\r\n\r\n      let value = {\r\n        area: chips[chips.length-1].value,\r\n        experiencia: experienciaTemp,\r\n        id: chips[chips.length-1].id\r\n      }\r\n\r\n      setInfoUser(oldValues =>  ( { ...oldValues, info : [...oldValues.info, value] } ))\r\n\r\n    }\r\n\r\n  }, [chips])\r\n\r\n  // const[textInput, setTextInput] = useState(\"\")\r\n\r\n  const [disableButton, setDisableButton] = useState(false);\r\n\r\n  const [colors, setColors] = useState([\r\n    \"#1878D7\",\r\n    \"#D71843\",\r\n    \"#B418D7\",\r\n    \"#18D735\",\r\n  ]);\r\n\r\n  const [infoUser, setInfoUser] = useState({\r\n    rubro: \"\",\r\n    info: []\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    if(send) {\r\n\r\n      props.onSendAreas(infoUser, props.auth, props.history)\r\n      \r\n    }\r\n\r\n  }, [infoUser])\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const rubroSelected = (rubro, index) => {\r\n\r\n    setChips([])\r\n\r\n    setRubroIndex(index);\r\n    setRubroValue(rubro)\r\n\r\n    /* Consulta al back */\r\n    props.onGetAreas(rubro.rubro_id)\r\n    \r\n\r\n  };\r\n\r\n  const addTag = () => {\r\n\r\n    setEstadoChip(\"new\")\r\n\r\n    setExperienciaTemp(experienciaSelected)\r\n\r\n    if (chips.length >= 3) {\r\n      setDisableButton(true);\r\n    }\r\n\r\n    let checkIfExist = chips.find((v) => v.value === value)\r\n\r\n    \r\n    let id_current = props.areas.find((v) => v.nombre === value )\r\n    \r\n\r\n    if (!checkIfExist) {\r\n      \r\n      setChips((oldArray) => [\r\n        ...oldArray,\r\n        { value, colors: colors[Math.floor(Math.random() * 4) + 0], id: id_current.area_id},\r\n      ]);\r\n  \r\n  \r\n      setValue(\"\")\r\n      setExperienciaSelected(\"Experiencia\")\r\n    }\r\n\r\n\r\n  };  \r\n\r\n  const onSaveUser =  () => {\r\n\r\n    setSend(true)\r\n\r\n    /* Llevar a Redux */\r\n    setInfoUser(oldValue =>  ( {...oldValue, rubro: rubroValue } ) )\r\n\r\n  }\r\n\r\n  const deleteChip = (i) => {\r\n\r\n    setEstadoChip(\"edit\")\r\n\r\n    // estadoChip = \"edit\"\r\n\r\n    setChips(chips.filter((v, index) => index !== i));\r\n\r\n    setInfoUser(oldValues => ({ info: oldValues.info.filter((v, index) =>  index !== i )  }) )\r\n\r\n\r\n\r\n    if (chips.length < 5) {\r\n      setDisableButton(false);\r\n    }\r\n  };\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : props.areas.filter(\r\n          (lang) => lang.nombre.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.nombre;\r\n\r\n  const renderSuggestion = (suggestion) => <div>{suggestion.nombre}</div>;\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Ingrese su area\",\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"rubro-page-style\">\r\n        <Card className=\"card-rubro\">\r\n          <Card.Body>\r\n            <h1>{props.auth !== null ? props.auth.nombre_completo : null }, listo para trabajar?</h1>\r\n            <label>Indicanos cuales son tus habilidades.</label>\r\n            <br />\r\n            <label>\r\n              Recuerda! Mientras mas informacion proporciones, mas facil te\r\n              encontraran\r\n            </label>\r\n            <label style={{ display: \"block\" }}>\r\n              En que rubro te especializas?\r\n            </label>\r\n            <Container>\r\n              <Row>\r\n                {/* Aqui iria un mapeo de forma dinamica, traido desde el back */}\r\n\r\n                {  props.rubros ? props.rubros.map((v, i) => {\r\n                  return (\r\n                    <Col style={{ marginTop: \"20px\" }} lg={3}>\r\n                      <Card\r\n                        style={{ padding: \"10px\" }}\r\n                        className={i === rubroIndex ? \"selected\" : null}\r\n                        onClick={() => rubroSelected(v, i)}\r\n                      >\r\n                        <div className=\"rubro-container\">\r\n                          <label className=\"label-rubro\">{v.nombre}</label>\r\n\r\n                          {i === rubroIndex ? (\r\n                            <div className=\"style-icon-rubro\">\r\n                              <FontAwesomeIcon icon={faCheckCircle} />\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  );\r\n                }) : null }\r\n              </Row>\r\n\r\n              {rubroIndex !== null ? (\r\n                <div>\r\n                  <h3 style={{ marginTop: \"30px\" }}>\r\n                    Cuales son las areas en las que te especializas\r\n                  </h3>\r\n\r\n                  <Row>\r\n                    <Col lg={7}>\r\n                      {/* <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                          placeholder=\"Buscar Area\"\r\n                          className=\"input-rubro\"\r\n                          onChange={(e) => onChangeText(e.target.value)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                      </InputGroup> */}\r\n\r\n                      <Autosuggest\r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={\r\n                          onSuggestionsFetchRequested\r\n                        }\r\n                        onSuggestionsClearRequested={\r\n                          onSuggestionsClearRequested\r\n                        }\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col lg={5}>\r\n                      <div className=\"right-rubro\">\r\n                        <Dropdown style={{ width: \"60%\" }}>\r\n                          <Dropdown.Toggle\r\n                            variant=\"success\"\r\n                            id=\"dropdown-basic\"\r\n                            style={{ width: \"100%\" }}\r\n                          >\r\n                            {experienciaSelected}\r\n                          </Dropdown.Toggle>\r\n\r\n                          <Dropdown.Menu>\r\n                            {experiencia.map((v) => {\r\n                              return <Dropdown.Item onClick = { () => setExperienciaSelected(v) } >{v}</Dropdown.Item>;\r\n                            })}\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Button\r\n                          className=\"button-rubro\"\r\n                          disabled={disableButton || value === \"\" || experienciaSelected === \"Experiencia\" }\r\n                          onClick={() => addTag()}\r\n                        >\r\n                          Agregar\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              ) : null}\r\n              \r\n\r\n              {chips.length > 0 ? (\r\n                <div className=\"chips-rubro\">\r\n                  {chips.map((v, i) => {\r\n                    return (\r\n                      <div\r\n                        className=\"chips-container\"\r\n                        style={{ backgroundColor: v.colors }}\r\n                      >\r\n                        <div className=\"chip-element-rubro\">\r\n                          <label>{v.value}</label>\r\n                          <FontAwesomeIcon\r\n                            className=\"icon-rubro-container\"\r\n                            icon={faTimesCircle}\r\n                            onClick={() => deleteChip(i)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"buttons-rubro\">\r\n                <Button\r\n                  onClick={() => props.history.push(\"/registro/postregister\")}\r\n                  className=\"button-rubro\"\r\n                >\r\n                  Anterior\r\n                </Button>\r\n                <Button\r\n                  disabled={chips.length <= 0 ? true : false}\r\n                  className=\"button-rubro\"\r\n                  onClick = {() => onSaveUser() }\r\n                >\r\n                  Siguiente\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { rubros, areas, auth } = state\r\n\r\n  return {\r\n    rubros: rubros.rubros,\r\n    areas: areas.areas,\r\n    auth: auth.user\r\n  }\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onGetRubros: () => {\r\n      dispatch(getRubros())\r\n    },\r\n    onGetAreas: (rubro_id) => {\r\n      dispatch(getAreas(rubro_id))\r\n    },\r\n    onSendAreas : (data, user, history) => {\r\n      dispatch(sendAreas(data, user, history))\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Rubro);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\miCuenta.js",["291","292","293","294"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Componentes */\r\nimport NavBar from \"../components/navBar\";\r\n\r\n/* React Boostrap */\r\nimport { Tab , Tabs } from \"react-bootstrap\";\r\n\r\n/* Pages */\r\nimport MiPerfil from '../Pages/miPerfil'\r\nimport Cuenta from '../Pages/cuenta'\r\n\r\nconst MiCuenta = (props) => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Tabs style = {{ justifyContent: 'center' }} defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"home\" title=\"Home\">\r\n          <Cuenta />\r\n        </Tab>\r\n        {/* <Tab eventKey=\"profile\" title=\"Profile\">\r\n          <MiPerfil />\r\n        </Tab> */}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n\r\n  return {\r\n    auth,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, null)(MiCuenta);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\registerBusiness.js",["295","296","297","298","299","300","301","302","303","304","305"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport axios from 'axios'\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUser,\r\n  faAddressBook,\r\n  faEye,\r\n  faEyeSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/PageStyles/registerProfesional.css\";\r\n\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\nimport { register } from \"../actions/authAction\";\r\nimport { getRubros } from \"../actions/rubroActions\"\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n\r\nconst RegisterBusiness = (props) => {\r\n\r\n  /* Para saber en que pais se encuentra la persona y así negarle el registro */\r\n  const [country, setCountry] = useState(\"\")\r\n\r\n  const getGeoInfo = async () => {\r\n\r\n   const info = await axios.get('https://ipapi.co/json/')\r\n\r\n   setCountry(info.data.country)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (props.error.id != null) {\r\n      toast.error(props.error.msg.message)\r\n      props.clearErrors()\r\n    }\r\n\r\n  }, [props.error])\r\n\r\n  useEffect(() => {\r\n\r\n    props.onGetRubros()\r\n    getGeoInfo()\r\n\r\n  }, [])\r\n\r\n  const [isShowPass1, setIsShowPass1] = useState(true);\r\n  const [isShowPass2, setIsShowPass2] = useState(true);\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    state: \"\",\r\n    isBussines: true\r\n  });\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [disableButton, setDisableButto] = useState(true);\r\n\r\n  const [selectedState, setSelectedState] = useState(\"Selecciona tu estado\");\r\n\r\n  const [selectedRubro, setSelectedRubro] = useState({\r\n    id: 0,\r\n    nombre: \"Selecciona un rubro\"\r\n  })\r\n\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const [usernameError, setUsernameError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [stateError, setStateError] = useState(null);\r\n\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\r\n\r\n  const [copyStates, setCopyStates] = useState([...states])\r\n\r\n\r\n  const stateChange = (v) => {\r\n    setSelectedState(v);\r\n    setUserInfo({ ...userInfo, state: v });\r\n  };\r\n\r\n  const onFilterState = (value) => {\r\n\r\n    setCopyStates(states.filter( (v) => v.includes(value) ) )\r\n\r\n  }\r\n\r\n  const checkForm = () => {\r\n    if (userInfo.name === \"\") {\r\n      errorHandler(setNameError, \"Por favor, ingrese un nombre\");\r\n      console.log(\"User vacio\");\r\n    }\r\n    else if (userInfo.username === \"\") {\r\n      errorHandler(setUsernameError, \"Por favor, ingrese un nombre de usuario\");\r\n      console.log(\"Username vacio\");\r\n    }\r\n    else if (userInfo.password === \"\") {\r\n      errorHandler(setPasswordError, \"Por favor, ingrese una contraseña\");\r\n      console.log(\"Password vacio\");\r\n    }\r\n    else if (userInfo.state === \"\") {\r\n      errorHandler(setStateError, \"Por favor, ingrese una fecha\");\r\n    }\r\n    else if (userInfo.password !== confirmPassword && userInfo.password.length > 0) {\r\n      errorHandler(setConfirmPasswordError, \"Contraseñas no coinciden\");\r\n    } /* else if (country !== \"VE\") {\r\n      toast.warn('No te puedes registrar ya que no eres de Venezuela')\r\n    }  */else {\r\n      props.onRegister(userInfo, props.history)\r\n    }\r\n  };\r\n\r\n  const rubros = () => {\r\n    if (props.rubros.rubros !== null ) {\r\n      return props.rubros.rubros.map((value, i) => (\r\n       <Dropdown.Item key = {i} onClick={() => changeRubro(value)}>\r\n         {value.nombre}\r\n       </Dropdown.Item>\r\n     ))\r\n    }\r\n  }\r\n\r\n  const changeRubro = (rubro) => {\r\n\r\n    setSelectedRubro(rubro)\r\n    setUserInfo({ ...userInfo, rubro_id: rubro.rubro_id });\r\n\r\n  }\r\n  \r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const registrarse = () => {\r\n\r\n    checkForm();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"card-continer-profesional\">\r\n        <Card className=\"card-profesional\">\r\n          <Card.Body>\r\n            <Card.Title style={{ textAlign: \"center\" }}>\r\n              Crear cuenta empresarial\r\n            </Card.Title>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faAddressBook} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, name: e.target.value })\r\n                }\r\n                placeholder=\"Nombre Completo\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={nameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{nameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, username: e.target.value })\r\n                }\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={usernameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{usernameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass1(!isShowPass1)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass1 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, password: e.target.value });\r\n                  setConfirmPassword(e.target.value == \"\" ? \"\" : null);\r\n                }}\r\n                placeholder=\"Contraseña\"\r\n                type={isShowPass1 ? \"password\" : null}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass2(!isShowPass2)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass2 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={userInfo.password.length == 0}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirmar Contraseña\"\r\n                type={isShowPass2 ? \"password\" : null}\r\n                value={confirmPassword}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={confirmPasswordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{confirmPasswordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n            \r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedState}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese estado\"\r\n                onChange={ (e) =>  onFilterState(e.target.value) }\r\n              />\r\n                </div>\r\n                {copyStates.map((value, i) => (\r\n                  <Dropdown.Item key = {i} onClick={() => stateChange(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            \r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedRubro.nombre}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                \r\n                {rubros()}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <label style={{ fontSize: \"14px\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => setDisableButto(!disableButton)}\r\n              />{\" \"}\r\n              Al crear tu cuenta aceptas los terminos de servicio y politica de\r\n              seguridad\r\n            </label>\r\n\r\n            <Button\r\n              disabled={disableButton}\r\n              style={{ width: \"100%\" }}\r\n              variant=\"success\"\r\n              onClick={() => registrarse()}\r\n            >\r\n              Registrarse\r\n            </Button>\r\n            <ToastContainer />\r\n\r\n\r\n            <hr />\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>\r\n                Ya estas registrado?{\" \"}\r\n              </label>{\" \"}\r\n              <Link to=\"/login\" style={{ marginLeft: \"3px\" }}>\r\n                Ingresa\r\n              </Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, error, rubros } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n    rubros\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegister: (user, history) => {\r\n      dispatch(register(user, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n    onGetRubros : () => {\r\n      dispatch(getRubros())\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( RegisterBusiness );\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\proyectos.js",["306","307"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from '../components/navBar'\r\n\r\n\r\nconst Proyectos = (props) => {\r\n\r\n    useEffect (() => {\r\n     \r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n        <NavBar />\r\n        <h1>Proyectos</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth, isFirstRender } = state\r\n\r\n    return {\r\n        auth,\r\n        isFirstRender\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n\r\n//   return {\r\n//     onFistRenderChange: () => {\r\n//       dispatch({type: SET_RENDER })\r\n//     }\r\n\r\n//   }\r\n   \r\n\r\n// }\r\n\r\nexport default connect(mapStateToProps, null) (Proyectos)\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\publicaciones.js",["308","309","310","311","312","313","314","315"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n/* Components */\r\nimport NavBar from \"../components/navBar\";\r\n\r\n/* Actions */\r\nimport {\r\n  getAnuncioByUser,\r\n  deleteAnuncioById,\r\n  updateAnuncioById,\r\n  clearMessage,\r\n  saveAnuncio\r\n} from \"../actions/anuncioUser\";\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nimport { getRubros } from \"../actions/rubroActions\";\r\n\r\nimport { getAreas } from \"../actions/areasActions\";\r\n\r\nimport {\r\n  Container as Contenedor,\r\n  Button as Boton,\r\n} from \"react-floating-action-button\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* React boostrap */\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  Image,\r\n  Card,\r\n  Modal,\r\n  Dropdown,\r\n  Alert\r\n} from \"react-bootstrap\";\r\n\r\nimport \"../styles/PageStyles/anuniosUser.css\";\r\n\r\n/* Otros */\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Publicaciones = (props) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [isEditMode, setIsEditMode] = useState([]);\r\n\r\n  const [postInfo, setPostInfo] = useState('');\r\n\r\n  const [selectedRubro, setSelectedRubro] = useState({\r\n    rubro_id: 0,\r\n    nombre: \"Seleccionar rubro\",\r\n  });\r\n\r\n  const [selectedRubroError, setSelectedRubroError] = useState(\"\")\r\n\r\n  const [anuncios, setAnuncios] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [isRenderInput, setIsRenderInput] = useState(false);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [titulo, setTitulo] = useState('')\r\n\r\n  const [tituloError, setTituloError] = useState('')\r\n\r\n  const [descripcion, setDescripcion] = useState('')\r\n\r\n  const [descriptionError, setDescriptionError] = useState('')\r\n\r\n  const [disponibilidad, setDisponibilidad] = useState('')\r\n\r\n  const [disponibilidadError, setDisponibilidadError] = useState('')\r\n\r\n  const [chipsError, setChipsError] = useState('')\r\n\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n  const returnIcon = () => {\r\n    return <FontAwesomeIcon icon={faPlus} />;\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const onChangeEditMode = (index) => {\r\n    let newValue = [...isEditMode];\r\n\r\n    newValue[index] = !isEditMode[index];\r\n\r\n    if (!newValue[index]) {\r\n      let oldValue = [...props.useranuncios.userAnuncios];\r\n      setAnuncios(oldValue);\r\n    }\r\n\r\n    setIsEditMode(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    props.onHandleGetUserPost();\r\n\r\n    if (props.rubros.rubros !== null) {\r\n\r\n      if (props.rubros.rubros.length == 0) {\r\n        props.onGetRubros();\r\n      }\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.useranuncios.userAnuncios !== null) {\r\n      setIsEditMode(props.useranuncios.userAnuncios.map(() => false));\r\n      setAnuncios(props.useranuncios.userAnuncios);\r\n    }\r\n  }, [props.useranuncios.userAnuncios]);\r\n\r\n  useEffect(() => {\r\n    if (props.useranuncios.msg !== \"\") {\r\n      toast.success(props.useranuncios.msg);\r\n      props.onClearMessage();\r\n    }\r\n  }, [props.useranuncios.msg]);\r\n\r\n  useEffect(() => {\r\n    if (selectedRubro.nombre !== \"Seleccionar rubro\") {\r\n      props.onGetAreas(selectedRubro.rubro_id);\r\n\r\n      setIsRenderInput(true);\r\n    }\r\n  }, [selectedRubro]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (postInfo !== '') {\r\n\r\n      props.onSendData(postInfo)\r\n\r\n      setShow(false)\r\n    }\r\n\r\n  }, [postInfo])\r\n\r\n  useEffect(() => {\r\n\r\n    if(!show) {\r\n\r\n      setChips([])\r\n\r\n      setSelectedRubro({\r\n        rubro_id: 0,\r\n        nombre: \"Seleccionar rubro\",\r\n      })\r\n\r\n      setTitulo(\"\")\r\n      setDescripcion(\"\")\r\n      setDisponibilidad(\"\")\r\n\r\n    }\r\n\r\n  }, [show])\r\n\r\n  useEffect(() => {\r\n\r\n    if (chips.length === 3) {\r\n      setIsDisabled(true)\r\n    } if (chips.length < 3) {\r\n      setIsDisabled(false)\r\n    }\r\n\r\n  }, [chips])\r\n\r\n\r\n\r\n  const verPropuesta = (v) => {\r\n\r\n    history.push(`/propuesta/${v.anuncio_id}`)\r\n\r\n  }\r\n\r\n  const renderButtonsInEditMode = (v, i) => (\r\n    <div>\r\n      <Button\r\n        variant=\"success\"\r\n        style={{ marginTop: \"200px\" }}\r\n        onClick={() =>\r\n          props.onUpdateUserPost(\r\n            v.anuncio_id,\r\n            anuncios[i],\r\n            isEditMode,\r\n            setIsEditMode,\r\n            i\r\n          )\r\n        }\r\n      >\r\n        Guardar\r\n      </Button>\r\n      <Button\r\n        variant=\"warning\"\r\n        style={{ marginTop: \"200px\", marginLeft: \"5px\" }}\r\n        onClick={() => onChangeEditMode(i)}\r\n      >\r\n        Volver\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  const renderItem = () => {\r\n    if( props.rubros.rubros !== null) {\r\n      if (props.rubros.rubros.length > 0) {\r\n        return (\r\n          <Dropdown\r\n            drop=\"up\"\r\n            style={{ marginTop: \"20px\", width: \"100%\", marginBottom: \"20px\" }}\r\n          >\r\n            <Dropdown.Toggle\r\n              style={{ width: \"100%\" }}\r\n              variant=\"success\"\r\n              id=\"dropdown-basic\"\r\n            >\r\n              {selectedRubro.nombre}\r\n            </Dropdown.Toggle>\r\n  \r\n            <Dropdown.Menu\r\n              style={{ width: \"100%\" }}\r\n              className=\"dropdown-register\"\r\n            >\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}></div>\r\n              {props.rubros.rubros.map((value, i) => (\r\n                <Dropdown.Item key = {i} onClick={() => stateChange(value)}>\r\n                  {value.nombre}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        );\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  const stateChange = (valor) => {\r\n    setSelectedRubro({ nombre: valor.nombre, rubro_id: valor.rubro_id });\r\n  };\r\n\r\n  const renderButtonsNormalMode = (v, i) => (\r\n    <div>\r\n      <Button\r\n        variant=\"danger\"\r\n        style={{ marginTop: \"200px\" }}\r\n        onClick={() => props.onDeleteUserPost(v.anuncio_id)}\r\n      >\r\n        Eliminar\r\n      </Button>\r\n      <Button\r\n        variant=\"warning\"\r\n        style={{ marginTop: \"200px\", marginLeft: \"5px\" }}\r\n        onClick={() => onChangeEditMode(i)}\r\n      >\r\n        Editar\r\n      </Button>\r\n\r\n      <Button \r\n      onClick = {() => verPropuesta(v) }\r\n      style={{ marginTop: \"200px\", marginLeft: \"20px\" }}\r\n      >\r\n        Ver propuestas\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  const changeValue = (value, propiedad, index) => {\r\n    const valor = [...anuncios];\r\n\r\n    valor[index] = {\r\n      ...valor[index],\r\n      [propiedad]: value,\r\n    };\r\n\r\n    setAnuncios(valor);\r\n  };\r\n\r\n  /* Suggestions Component */\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.nombre;\r\n\r\n  const renderSuggestion = (suggestion) => <div>{suggestion.nombre}</div>;\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : props.areas.filter(\r\n          (lang) =>\r\n            lang.nombre.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Ingrese su area\",\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n\r\n  /* FINALIZA SUGGEST */\r\n\r\n  const addTag = () => {\r\n    if(value){\r\n      let newValue = props.areas.find(v => v.nombre === value)\r\n      let checkIfExists = chips.find(v => v.area_id === newValue.area_id )\r\n      if(!checkIfExists) {\r\n        setChips((oldValues) => [...oldValues, newValue]);\r\n      }\r\n      setValue(\"\")\r\n    }\r\n\r\n  };\r\n\r\n  const deleteChip = (i) => {\r\n\r\n\r\n    setChips(chips.filter((v, index) => index !== i));\r\n\r\n  }\r\n\r\n  const sendData = () => {\r\n    if (titulo === \"\") {\r\n      setTituloError(\"Por favor ingrese un titulo\")\r\n      setTimeout(() => {\r\n        setTituloError(\"\")\r\n      }, 2000)\r\n      return\r\n    } else if (descripcion === \"\" ) {\r\n      setDescriptionError(\"Por favor ingrese una descripcion\")\r\n      setTimeout(() => {\r\n        setDescriptionError(\"\")\r\n      }, 2000)\r\n      return\r\n    } else if (selectedRubro.nombre === \"Seleccionar rubro\") {\r\n      setSelectedRubroError(\"Por favor ingrese algun rubro\")\r\n      setTimeout(() => {\r\n        setSelectedRubroError(\"\")\r\n      }, 2000)\r\n      return\r\n    } else if (chips.length === 0) {\r\n      setChipsError(\"Error, ingrese chips\")\r\n      setTimeout(() => {\r\n        setChipsError(\"\")\r\n      }, 2000)\r\n      return\r\n    }else if (disponibilidad === \"\") {\r\n\r\n      setDisponibilidadError(\"Error, ingrese algun valor\")\r\n      setTimeout(() => {\r\n        setDisponibilidadError(\"\")\r\n      }, 2000)\r\n      return\r\n    }  else {\r\n      setPostInfo({\r\n        titulo,\r\n        descripcion,\r\n        rubro_id: selectedRubro.rubro_id,\r\n        area_id : chips.map(v => v.area_id ),\r\n        disponibilidad\r\n      })\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Container>\r\n        <Row>\r\n          {anuncios.length > 0 ? (\r\n            anuncios.map((v, i) => {\r\n              return (\r\n                <Col md={4} key = {i}>\r\n                  <Card style={{ marginTop: \"30px\" }}>\r\n                    <Card.Body>\r\n                      <div style={{ height: \"70px\" }}>\r\n                        {isEditMode[i] ? (\r\n                          <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            value={v.titulo}\r\n                            onChange={(e) =>\r\n                              changeValue(e.target.value, \"titulo\", i)\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          // <FormControl\r\n                          //   value = { v.titulo  }\r\n                          // />\r\n                          <Card.Title>{v.titulo}</Card.Title>\r\n                        )}\r\n                        {isEditMode[i] ? (\r\n                          <Form.Control\r\n                            style={{ marginTop: \"40px\" }}\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            value={v.descripcion}\r\n                            onChange={(e) =>\r\n                              changeValue(e.target.value, \"descripcion\", i)\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          <Card.Text>{v.descripcion}</Card.Text>\r\n                        )}\r\n                      </div>\r\n                      {/* <button >trry</button> */}\r\n                      {isEditMode[i]\r\n                        ? renderButtonsInEditMode(v, i)\r\n                        : renderButtonsNormalMode(v, i)}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })\r\n          ) : (\r\n            <h1>No hay publicaciones disponibles</h1>\r\n          )}\r\n        </Row>\r\n        <ToastContainer />\r\n        <Contenedor>\r\n          <Boton tooltip=\"Agregar\" rotate={true} onClick={() => setShow(true)}>\r\n            {returnIcon()}\r\n          </Boton>\r\n        </Contenedor>\r\n\r\n        <>\r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Agregar anuncio</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <FormControl placeholder=\"Titulo\" value = {titulo} onChange = { (e) => setTitulo(e.target.value) } style = {{ marginBottom: '10px' }} />\r\n\r\n              { tituloError !== \"\" ? <Alert variant = \"danger\">{tituloError}</Alert> : null  }\r\n              \r\n              <FormControl\r\n                value = {descripcion}\r\n                style={{ marginTop: \"20px\" }}\r\n                placeholder=\"Descripcion\"\r\n                onChange = { (e) => setDescripcion(e.target.value) } \r\n                style = {{ marginBottom: '10px' }}\r\n              />\r\n\r\n              { descriptionError !== \"\" ? <Alert variant = \"danger\">{descriptionError}</Alert> : null  }\r\n\r\n              {renderItem()}\r\n\r\n              { selectedRubroError !== \"\" ? <Alert variant = \"danger\">{selectedRubroError}</Alert> : null  }\r\n\r\n              {isRenderInput ? (\r\n                <Row>\r\n                  <Col lg={9}>\r\n                    <Autosuggest\r\n                      className=\"input-suggest-areas\"\r\n                      suggestions={suggestions}\r\n                      onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                      onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                      getSuggestionValue={getSuggestionValue}\r\n                      renderSuggestion={renderSuggestion}\r\n                      inputProps={inputProps}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Button disabled = {isDisabled} onClick={() => addTag()}>Añadir</Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : null}\r\n\r\n              {chips.length > 0 ? (\r\n                <div className=\"chips-rubro\" style = {{ marginTop: '10px' }}>\r\n                  {chips.map((v, i) => {\r\n                    return (\r\n                      <div\r\n                        key = {i}\r\n                        className=\"chips-container\"\r\n                        style={{ backgroundColor: 'green' }}\r\n                      >\r\n                        <div className=\"chip-element-rubro\">\r\n                          <label>{v.nombre || \"\"}</label>\r\n                          <FontAwesomeIcon\r\n                            className=\"icon-rubro-container\"\r\n                            icon={faTimesCircle}\r\n                            onClick={() => deleteChip(i)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n\r\n              { chipsError !== \"\" ? <Alert variant = \"danger\">{chipsError}</Alert> : null  }\r\n\r\n              <FormControl\r\n                value = {disponibilidad}\r\n                style={{ marginTop: \"20px\", marginBottom: '10px' }}\r\n                placeholder=\"Disponibilidad\"\r\n                onChange = { (e) => setDisponibilidad(e.target.value) }\r\n              />\r\n\r\n              { disponibilidadError !== \"\" ? <Alert variant = \"danger\">{disponibilidadError}</Alert> : null  }\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick = { () => sendData() }>Guardar</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, isFirstRender, useranuncios, rubros, areas } = state;\r\n\r\n  return {\r\n    auth,\r\n    isFirstRender,\r\n    useranuncios,\r\n    rubros,\r\n    areas: areas.areas,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onHandleGetUserPost: () => {\r\n      dispatch(getAnuncioByUser());\r\n    },\r\n    onDeleteUserPost: (id) => {\r\n      dispatch(deleteAnuncioById(id));\r\n    },\r\n    onUpdateUserPost: (id, anuncio, isEditMode, setIsEditMode, i) => {\r\n      dispatch(updateAnuncioById(id, anuncio, isEditMode, setIsEditMode, i));\r\n    },\r\n    onClearMessage: () => {\r\n      dispatch(clearMessage());\r\n    },\r\n    onGetRubros: () => {\r\n      dispatch(getRubros());\r\n    },\r\n    onGetAreas: (rubro_id) => {\r\n      dispatch(getAreas(rubro_id));\r\n    },\r\n    onSendData: (data) => {\r\n      dispatch(saveAnuncio(data))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\userPropuestas.js",["316","317","318","319","320"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect, useParams } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from \"../components/navBar\";\r\n\r\nimport { getPropuestas } from \"../actions/propuestaActions\";\r\n\r\nimport { Button, ListGroup, Modal, Badge, Spinner } from \"react-bootstrap\";\r\n\r\nimport \"../styles/PageStyles/userPropuestas.css\";\r\n\r\nconst UserPropuestas = ({ auth, onGetPropuesta, propuestas }) => {\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    onGetPropuesta(auth.username_freelancer, setIsLoading);\r\n  }, []);\r\n\r\n  const renderList = () => {\r\n    if (propuestas !== null) {\r\n      if (!isLoading) {\r\n        if (propuestas.length > 0) {\r\n          return (\r\n            <ListGroup>\r\n              {propuestas.map((v, i) => (\r\n                <ListGroup.Item key = {i}>\r\n                  <div className=\"propuestas-container\">\r\n                    <div>\r\n                      <h3>{v.descripcion}</h3>\r\n                      <label>Enviado a: {v.username_freelancer}</label>\r\n                    </div>\r\n                    <div className=\"bagde-container\">\r\n                      {v.isread ? (\r\n                        <Badge\r\n                          style={{ height: \"20px\", marginRight: \"50px\" }}\r\n                          variant=\"success\"\r\n                        >\r\n                          Leido\r\n                        </Badge>\r\n                      ) : (\r\n                        <Badge\r\n                          style={{ height: \"20px\", marginRight: \"50px\" }}\r\n                          variant=\"warning\"\r\n                        >\r\n                          No leido\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          );\r\n        } else {\r\n          return (\r\n          <div style = {{ height: '100%' }}>\r\n            <div style = {{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'  }}>\r\n              <h1>No tienes propuestas</h1>\r\n            </div>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contenido-page\" style={{ height: \"100vh\" }}>\r\n      <div style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }}>\r\n        <NavBar />\r\n\r\n        { isLoading ? (\r\n          <div style={{ height: \"100%\", backgroundColor: '#F0F1F1' }} >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <Spinner\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                style={{ width: \"5rem\", height: \"5rem\" }}\r\n              />\r\n              <h1>Cargando....</h1>\r\n            </div>\r\n          </div>\r\n\r\n        ) : null }\r\n        {renderList()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, propuesta } = state;\r\n\r\n  return {\r\n    auth: auth.user,\r\n    propuestas: propuesta.propuestasByUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetPropuesta: (id, callbackFunction) => {\r\n      dispatch(getPropuestas(id, callbackFunction));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPropuestas);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\chatPage.js",["321","322","323","324","325","326","327"],"/* React importaciones */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useParams,\r\n  useRef,\r\n} from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport { Button, Form, Container, Col, Row, ListGroup } from \"react-bootstrap\";\r\n\r\nimport { getChat, pushMessage, getChatsByUser, pushLastMessage, cleanChat, pushChatIfNotExist } from \"../actions/chatActions\";\r\n\r\nimport \"../styles/PageStyles/chatPage.css\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPaperPlane,\r\n  faTimes,\r\n  faArrowLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet socket;\r\n\r\nconst ChatPage = (props) => {\r\n  const scroll = useRef(null);\r\n  const otherUser = useRef(null)\r\n  const chatsUser = useRef([])\r\n\r\n  const [valor, setValor] = useState(\"\");\r\n\r\n  const [, forceUpdate] = useState(0)\r\n\r\n  // const [otherUser, setOtherUser] = useState(\"\");\r\n\r\n  const scrollAbajo = () => {\r\n    if (scroll.current !== null) {\r\n      scroll.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    props.onGetChatsByUser(props.auth.user.username_freelancer)\r\n\r\n    if (props.match.params.id !== undefined) {\r\n\r\n      return () => {\r\n        socket.emit(\"desconectar\");\r\n        socket.off();\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  useEffect (() => {\r\n\r\n    return () => {\r\n      props.onCleanChat()\r\n    }\r\n\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (props.match.params.id !== undefined) {\r\n      props.onGetChatInfo(props.match.params.id);\r\n      \r\n       socket = io(\"\");\r\n\r\n      /* El back va a estar escuchando esto */\r\n      socket.emit(\"join\", { room: props.match.params.id });\r\n\r\n      socket.on(\"message\", (message) => {\r\n        \r\n        props.onSendMessage(message);\r\n        \r\n          let checkIfExist = chatsUser.current.find(value => value.chat_id === props.match.params.id)\r\n\r\n          if (!!!checkIfExist) {\r\n            props.onPushChatIfNotExist({\r\n              chat_id : props.match.params.id,\r\n              username_freelancer_one : props.auth.user.username_freelancer,\r\n              username_freelancer_two : otherUser.current,\r\n              lastMessage : message\r\n            })\r\n          }\r\n        \r\n        props.onPushLastMessage(props.match.params.id)\r\n        setValor(\"\");\r\n        scrollAbajo();\r\n      }); \r\n    }\r\n  }, [props.match.params.id])\r\n\r\n  useEffect(() => {\r\n    if (props.chat.chatInfo !== undefined) {\r\n      otherUser.current = props.auth.user.username_freelancer ===\r\n      props.chat.chatInfo.username_freelancer_one\r\n      ? props.chat.chatInfo.username_freelancer_two\r\n      : props.chat.chatInfo.username_freelancer_one\r\n\r\n      /* Funcion para forzar el re-renderizado */\r\n      forceUpdate(n => !n)\r\n\r\n      setTimeout(() => {\r\n        scrollAbajo();\r\n      }, 500);\r\n    }\r\n  }, [props.chat.chatInfo]);\r\n\r\n  useEffect(() => {\r\n\r\n    chatsUser.current = props.chat.chatsUser\r\n\r\n  }, [props.chat.chatsUser])\r\n\r\n  const enviarMensaje = () => {\r\n    socket.emit(\"sendMessage\", {\r\n      texto: valor,\r\n      room: props.match.params.id,\r\n      username: props.auth.user.username_freelancer,\r\n      toUser: otherUser.current,\r\n    });\r\n  };\r\n\r\n  const handleEnter = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      enviarMensaje()\r\n    }\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    if (props.chat.messages) {\r\n      if (otherUser.current !== null) {\r\n        return props.chat.messages.map((v, i) => {\r\n          return (\r\n            <div\r\n              key = {i}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent:\r\n                  v.username_freelancer === otherUser.current ? \"flex-start\" : \"flex-end\",\r\n                marginTop: \"10px\",\r\n                marginBottom:\r\n                  i === props.chat.messages.length - 1 ? \"10px\" : null,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  maxWidth: \"40%\",\r\n                  marginLeft: v.username_freelancer === otherUser.current ? \"20px\" : null,\r\n                  marginRight:\r\n                    v.username_freelancer !== otherUser.current ? \"10px\" : null,\r\n                  padding: \"10px\",\r\n                  wordBreak: \"break-word\",\r\n                  backgroundColor:\r\n                    v.username_freelancer === otherUser.current ? \"#91AD9D\" : \"#14A824\",\r\n                  color: \"white\",\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <label style={{ display: \"flex\" }}>{v.texto}</label>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderChatsUser = () => {\r\n     \r\n    if (props.chat.chatsUser) {\r\n        \r\n        return props.chat.chatsUser.map((value, i) => {\r\n            return (\r\n                <ListGroup key = {i}>\r\n                   <ListGroup.Item onClick = { () => props.history.push(`/chat/${value.chat_id}`) }>\r\n                       <h4>{ value.username_freelancer_one !== props.auth.user.username_freelancer ? value.username_freelancer_one : value.username_freelancer_two  }</h4>\r\n                       <label> { value.lastMessage.username_freelancer === props.auth.user.username_freelancer ? \"Tu\" : value.lastMessage.username_freelancer } : { value.lastMessage.texto  }</label>\r\n                   </ListGroup.Item>\r\n                </ListGroup>\r\n            )\r\n        })\r\n         \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowX: \"hidden\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n      <Row style={{ height: \"100%\" }}>\r\n        <Col className = \"col-chat\"\r\n          lg={4}\r\n          style={{ maxHeight: \"100%\", paddingRight: 0, \r\n          borderRightColor: \"black\",\r\n          borderRightWidth: \"2px\",\r\n          borderRightStyle: \"solid\" ,\r\n        }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"10%\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#ededed\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            {/* Este es el header */}\r\n            <FontAwesomeIcon\r\n              onClick={() => props.auth.user.isbussines ? props.history.push(\"/mispublicaciones\") : props.history.push(\"/usuariopropuestas\")  }\r\n              icon={faArrowLeft}\r\n              style={{ marginLeft: \"10%\", fontSize: \"30px\" }}\r\n            />\r\n            <h4 style={{ marginRight: \"10%\" }}>\r\n              {props.auth.user.username_freelancer}\r\n            </h4>\r\n          </div>\r\n\r\n          {renderChatsUser()}\r\n        </Col>\r\n\r\n        <Col lg={8} style={{ paddingLeft: \"0\", height: \"100%\" }}>\r\n          {props.match.params.id === undefined ? (\r\n            <div\r\n              style={{ height: \"100%\", display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <h1 style={{ textAlign: \"center\" }}>\r\n                No tienes alguna conversacion abierta actualmente\r\n              </h1>\r\n            </div>\r\n          ) : (\r\n            <div style={{ height: \"100%\" }}>\r\n              <div\r\n                style={{\r\n                  height: \"10%\",\r\n                  backgroundColor: \"#ededed\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-around\",\r\n                }}\r\n              >\r\n                {/* Este es el header */}\r\n                <h4 style={{ marginRight: \"20%\" }}>{otherUser.current}</h4>\r\n                <FontAwesomeIcon\r\n                  onClick={() => props.history.push(\"/chat\")}\r\n                  icon={faTimes}\r\n                  style={{ marginLeft: \"20%\", fontSize: \"30px\" }}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                style={{ height: \"75%\" }}\r\n                className=\"chat-container\"\r\n                id=\"chat-cont\"\r\n              >\r\n                {renderMessages()}\r\n                <div ref={scroll} />\r\n              </div>\r\n\r\n              <div  \r\n                style={{\r\n                  height: \"15%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  backgroundColor: \"#f0f0f0\",\r\n                  justifyContent: \"space-around\",\r\n                  \r\n                }}\r\n              >\r\n                <div style={{ width: \"90%\" }}>\r\n                  <Form.Control\r\n                    className=\"input-mensaje\"\r\n                    style={{ borderRadius: \"15px\" }}\r\n                    value={valor}\r\n                    onKeyDown = {(e) => handleEnter(e)}\r\n                    placeholder=\"Escribir mensaje\"\r\n                    onChange={(e) => setValor(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    disabled={valor === \"\" ? true : false}\r\n                    style={{ height: \"40px\", borderRadius: \"20px\" }}\r\n                    onClick={(e) => enviarMensaje(e)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPaperPlane} />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, chat } = state;\r\n  return {\r\n    auth,\r\n    chat,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetChatInfo: (id) => {\r\n      dispatch(getChat(id));\r\n    },\r\n    onSendMessage: (message) => {\r\n      dispatch(pushMessage(message));\r\n    },\r\n    onGetChatsByUser : (id) => {\r\n        dispatch(getChatsByUser(id))\r\n    },\r\n    onPushLastMessage: (chat_id) => {\r\n      dispatch(pushLastMessage(chat_id))\r\n    },\r\n    onCleanChat: () => {\r\n      dispatch(cleanChat())\r\n    },\r\n    onPushChatIfNotExist: (chatInfo) => {\r\n      dispatch(pushChatIfNotExist(chatInfo))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\miPerfil.js",["328","329","330"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MiPerfil = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Mi Perfil</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth } = state\r\n\r\n    return {\r\n        auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (MiPerfil)\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\propuestaPage.js",["331","332","333","334","335","336","337","338"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Button, ListGroup, Modal, Badge , Spinner } from \"react-bootstrap\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport NavBar from \"../components/navBar\";\r\n\r\nimport { getPropuestaByAnuncio, updatePropuesta, cleanUpdate, cleanPropuestaByAnuncio } from \"../actions/propuestaActions\";\r\n\r\nimport \"../styles/PageStyles/propuestaPage.css\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { cleanUserInfo, getUserInfo } from \"../actions/userInfoActions\";\r\nimport { changeNotification } from \"../actions/anunciosActions\";\r\nimport { createChat } from \"../actions/chatActions\"\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nconst PropuestaPage = ({\r\n  onGetByAnuncio,\r\n  propuestas,\r\n  onGetUserInfo,\r\n  userInfo,\r\n  onCleanUserInfo,\r\n  onUpdatePropuesta,\r\n  isUpdated,\r\n  onCleanUpdate,\r\n  onChangeNotification,\r\n  onCleanPropuestaByAnuncio,\r\n  history,\r\n  onCreateChat,\r\n  chat,\r\n  msg,\r\n  propuestaLoad\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [v, setV] = useState(\"\")\r\n\r\n  const [isLoading , setIsLoading] = useState(true)\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    onGetByAnuncio(id, setIsLoading);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userInfo !== null) {\r\n      setShow(true);\r\n    }\r\n  }, [userInfo]);\r\n\r\n  useEffect(() => {\r\n    if(isUpdated) {\r\n      onGetUserInfo(v.user_prop);\r\n      onCleanUpdate()\r\n    }\r\n  }, [isUpdated, v])\r\n\r\n  useEffect(() => {\r\n      return () => {\r\n        onCleanPropuestaByAnuncio()\r\n      }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n    if(chat !== null) {\r\n      history.push(`/chat/${chat}`) \r\n    }\r\n  }, [chat, msg])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    return () => {\r\n      setShow(false)\r\n      onCleanUserInfo()\r\n    }\r\n\r\n  }, [])\r\n  \r\n  const openModal = (v) => {\r\n    setV(v)\r\n    onUpdatePropuesta(v.propuesta_id)\r\n  };\r\n\r\n  const cleanUserInfo = () => {\r\n    setShow(false)\r\n    onCleanUserInfo()\r\n    \r\n    const check = propuestas.find(v => v.user_prop ===  userInfo.username_freelancer).isread\r\n    \r\n    if(!check) {\r\n      onChangeNotification()\r\n    }\r\n\r\n    onGetByAnuncio(id, setIsLoading);\r\n  }\r\n\r\n  const createChat = () => {\r\n\r\n    /* En el back ya está el usuario logeado */\r\n    onCreateChat({\r\n      username_freelancer_two: userInfo.username_freelancer\r\n    })\r\n\r\n  }\r\n  \r\n  const renderModal = () => {\r\n    if (show) {\r\n      return (\r\n        <Modal show={show} onHide={() => cleanUserInfo()}>\r\n          <Modal.Header closeButton>\r\n            <h3 style={{ textAlign: \"center\", display: \"inline\" }}>\r\n              Informacion de {userInfo.username_freelancer}\r\n            </h3>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"flex-container\">\r\n              <div className=\"flex-child-container\">\r\n                <h4> Nombre: {userInfo.username_nombre}</h4>\r\n                <h4> Estado: {userInfo.estado}</h4>\r\n              </div>\r\n              <div className = \"flex-download\">\r\n                Descargar curriculum\r\n                <div>\r\n                  <a\r\n                    style={{ color: \"black\" }}\r\n                    download=\"FileName\"\r\n                    href={userInfo.pdf_url}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"8px\" }}\r\n                      icon={faDownload}\r\n                    />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h4 style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n              Areas que maneja {userInfo.username_nombre}\r\n            </h4>\r\n            <ListGroup>\r\n              {userInfo.area_info.map((area, i) => {\r\n                return (\r\n                  <ListGroup.Item key = {i}>\r\n                    <label style={{ display: \"block\" }}>\r\n                      Area: {area.nombre_area}\r\n                    </label>\r\n                    <label>Experiencia: {area.experiencia}</label>\r\n                  </ListGroup.Item>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\">Guardar en favoritos</Button>\r\n            <Button variant = \"primary\" onClick = { () => createChat() }>Iniciar Conversacion</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderList = () => {\r\n\r\n    if (propuestaLoad) {\r\n\r\n      return(\r\n        <div style = {{ height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n        <Spinner animation=\"border\" role=\"status\" />\r\n        <h1>Cargando...</h1>\r\n        </div>\r\n      )\r\n\r\n    } else {\r\n     \r\n      if (!!propuestas) {\r\n\r\n        if (propuestas.length === 0) {\r\n          return (\r\n          <div style  = {{ height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <h1>No hay propuestas..</h1>\r\n          </div>\r\n          )\r\n        } else {\r\n          return (\r\n            <ListGroup className=\"list-group-container\">\r\n              {propuestas.map((propuesta) => {\r\n                return (\r\n                  <ListGroup.Item\r\n                    style={{ marginTop: \"20px\", width: \"80%\" }}\r\n                    className=\"listgroup-description\"\r\n                  >\r\n                    <h1 style={{ textAlign: \"center\" }}>Descripcion</h1>\r\n                    <div className = \"description-container\">\r\n    \r\n                    <div style={{ marginBottom: \"10px\", marginTop: \"20px\" }}>\r\n                      {propuesta.descripcion}\r\n                    </div>\r\n    \r\n                    <div style = {{ marginRight: '40px' }}>\r\n                      { propuesta.isread ? <Badge style = {{ padding: '5px' }} variant=\"success\">Leido</Badge> : <Badge style = {{ padding: '5px' }} variant=\"warning\">No leido</Badge>  }\r\n                    </div>\r\n    \r\n                    </div>\r\n                    <div className=\"footer-container\">\r\n                      <label>Enviado por: {propuesta.user_prop} </label>\r\n                      <Button onClick={() => openModal(propuesta)}>\r\n                        Ver informacion de {propuesta.user_prop}\r\n                      </Button>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          )\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style = {{ height: '100vh' }}>\r\n      <div style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }} >\r\n      <NavBar />\r\n      {renderList()}\r\n      {renderModal()}\r\n      <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { propuesta, userInfo, chat } = state;\r\n  return {\r\n    isUpdated: propuesta.updated,\r\n    propuestas: propuesta.propuestaByAnuncio,\r\n    userInfo: userInfo.userInfo,\r\n    chat: chat.chatId,\r\n    msg: chat.msg,\r\n    propuestaLoad : propuesta.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetByAnuncio: (id, setIsLoading) => {\r\n      dispatch(getPropuestaByAnuncio(id, setIsLoading));\r\n    },\r\n    onGetUserInfo: (id) => {\r\n      dispatch(getUserInfo(id));\r\n    },\r\n    onCleanUserInfo: () => {\r\n      dispatch(cleanUserInfo())\r\n    },\r\n    onUpdatePropuesta: (id) => {\r\n      dispatch(updatePropuesta(id))\r\n    },\r\n    onCleanUpdate: () => {\r\n      dispatch(cleanUpdate())\r\n    },\r\n    onChangeNotification: () => {\r\n      dispatch(changeNotification())\r\n    },\r\n    onCleanPropuestaByAnuncio: () => {\r\n      dispatch(cleanPropuestaByAnuncio())\r\n    },\r\n    onCreateChat: (info) => {\r\n      dispatch(createChat(info))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PropuestaPage);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\rubroReducer.js",["339"],"import { GET_RUBROS, GET_RUBRO_INFO, GET_RUBROS_LOADING } from '../actions/types'\r\n\r\nconst initialState = {\r\n    rubros: null,\r\n    rubroInfo: null,\r\n    isLoading: false\r\n};\r\n  \r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_RUBROS: \r\n        return {\r\n            rubros: action.payload\r\n        }\r\n        case GET_RUBRO_INFO:\r\n        return {\r\n            ...state,\r\n            rubroInfo: action.payload,\r\n            isLoading: false\r\n        }\r\n        case GET_RUBROS_LOADING:\r\n        return {\r\n            ...state,\r\n            isLoading: true\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\isRenderReducer.js",["340"],"import { SET_RENDER } from '../actions/types'\r\n\r\nconst initialState = {\r\n    firstRender : true\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_RENDER:\r\n            return {\r\n                ...state, \r\n                firstRender : false\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\errorReducer.js",["341"],"import { CLEAR_ERRORS, GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        mgs: {},\r\n        status: null,\r\n        id: null,\r\n      };\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\anunciosUser.js",["342"],"import { GET_ANUNCIO_BY_USER, LOADING_ANUNCIO_BY_USER, DELETE_ANUNCIO_BY_ID, UPDATE_ANUNCIO_BY_ID, CLEAR_MESSAGE, SAVE_ANUNCIO } from '../actions/types'\r\n\r\nconst initialState = {\r\n    userAnuncios: null,\r\n    isLoading: false,\r\n    msg: ''\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANUNCIO_BY_USER: \r\n        return {\r\n            userAnuncios: action.payload,\r\n            isLoading: false\r\n        }\r\n        case LOADING_ANUNCIO_BY_USER:\r\n            return {\r\n                ...state,\r\n                isLoading: true  \r\n            }\r\n        case DELETE_ANUNCIO_BY_ID:\r\n            return {\r\n                ...state,\r\n                userAnuncios : state.userAnuncios.filter(v => v.anuncio_id !== action.payload.id ),\r\n                msg: action.payload.message\r\n            }\r\n        case UPDATE_ANUNCIO_BY_ID:\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            }\r\n        case CLEAR_MESSAGE: \r\n            return {\r\n                ...state,\r\n                msg: ''\r\n            }\r\n        case SAVE_ANUNCIO:\r\n            return {\r\n                ...state,\r\n                msg: action.payload,\r\n                userAnuncios: [...state.userAnuncios ]\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n} ","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\anunciosReducer.js",["343"],"import { GET_ANUNCIOS, LOADING_ANUNCIOS, CHANGE_NOTIFICATION } from '../actions/types'\r\n\r\nconst initialState = {\r\n    anuncios: [],\r\n    isLoading: false,\r\n    notificationsPropuestas : 0\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANUNCIOS: \r\n        return {\r\n            anuncios: action.payload.anuncios,\r\n            isLoading: false,\r\n            notificationsPropuestas: action.payload.notificationsPropuestas\r\n        }\r\n        case LOADING_ANUNCIOS:\r\n            return {\r\n                ...state,\r\n                isLoading: true  \r\n            }\r\n        case CHANGE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notificationsPropuestas: state.notificationsPropuestas - 1\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\propuestaReducer.js",["344"],"import { SEND_PROPUESTA, CLEAN_PROPUESTA, GET_PROPUESTAS, GET_PROPUESTA_BY_ANUNCIO, UPDATED_PROPUESTA, CLEAN_UPDATED, CLEAN_PROPUESTA_BY_ANUNCIO, LOAD_PROPUESTA } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: null,\r\n  propuestasByUser: null,\r\n  propuestaByAnuncio: null,\r\n  updated: false,\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEND_PROPUESTA:\r\n      return {\r\n        ...state,\r\n        msg: action.payload\r\n      };\r\n    case CLEAN_PROPUESTA: \r\n      return {\r\n          ...state,\r\n          msg: null\r\n      }\r\n    case GET_PROPUESTAS:\r\n        return {\r\n            ...state,\r\n            propuestasByUser: action.payload,\r\n            loading: true\r\n        }\r\n    case GET_PROPUESTA_BY_ANUNCIO:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          propuestaByAnuncio: action.payload\r\n        }\r\n    case UPDATED_PROPUESTA:\r\n        return {\r\n          ...state,\r\n          updated: true\r\n        }\r\n    case CLEAN_UPDATED:\r\n        return {\r\n          ...state,\r\n          updated: false\r\n        }\r\n    case CLEAN_PROPUESTA_BY_ANUNCIO:\r\n        return {\r\n          ...state,\r\n          propuestaByAnuncio: null\r\n        }\r\n    case LOAD_PROPUESTA:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        }\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\userInfoReducer.js",["345"],"import { GET_USER_INFO, CLEAN_USER_INFO, GET_USERINFO_LOGGED, UPDATE_USERINFO_LOGGED, UPLOAD_FILE } from '../actions/types'\r\n\r\nconst initialState = {\r\n    userInfo: null,\r\n    userLoggedInfo: null,\r\n    isLoading: false\r\n};\r\n  \r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_USER_INFO: \r\n        return {\r\n            ...state,\r\n            userInfo: action.payload\r\n        }\r\n        case CLEAN_USER_INFO:\r\n            return {\r\n                ...state,\r\n                userInfo: null\r\n            }\r\n        case GET_USERINFO_LOGGED:\r\n            return {\r\n                ...state,\r\n                userLoggedInfo: action.payload\r\n            }\r\n        case UPDATE_USERINFO_LOGGED:\r\n            return {\r\n                ...state, \r\n                isLoading: false,\r\n                userLoggedInfo: {\r\n                    ...state.userLoggedInfo,\r\n                    result: {\r\n                        ...state.userLoggedInfo.result,\r\n                        pdf_url: action.payload\r\n                    }\r\n                }\r\n            }\r\n        case UPLOAD_FILE:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        default: \r\n            return state\r\n\r\n    }\r\n\r\n\r\n} ","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\areaReducer.js",["346"],"import { GET_AREAS, SEND_AREAS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    areas: '',\r\n    resp: '',\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_AREAS: \r\n        return {\r\n            areas: action.payload\r\n        }\r\n        case SEND_AREAS:\r\n            return {\r\n                ...state,\r\n                resp: action.payload.msg\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\chatsReducer.js",["347"],"import { CREATE_CHAT, GET_CHAT_BY_ID, GET_MESSAGES, SEND_MESSAGE, GET_CHATS_BY_USER, PUSH_LAST_MESSAGE, CLEAN_CHAT, PUSH_CHAT_IF_NOT_EXIST } from '../actions/types'\r\n\r\nconst initialState = {\r\n    chatId: null,\r\n    messages: null,\r\n    chatsUser: null,\r\n    msg: null\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case CREATE_CHAT: {\r\n            return {\r\n                chatId: action.payload\r\n            }\r\n        }\r\n        case GET_CHAT_BY_ID: \r\n            return {\r\n                ...state,\r\n                chatInfo: action.payload.chat,\r\n                messages: action.payload.messages\r\n            }\r\n        case GET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: action.payload\r\n            }\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload]\r\n            }\r\n        case GET_CHATS_BY_USER:\r\n            return {\r\n                ...state,\r\n                chatsUser: action.payload\r\n            }\r\n        case PUSH_LAST_MESSAGE:\r\n            if (state.chatsUser[action.payload.index] !== undefined) {\r\n                state.chatsUser[action.payload.index].lastMessage = action.payload.value.lastMessage\r\n            }\r\n            return {\r\n                ...state\r\n            }\r\n        case CLEAN_CHAT:\r\n            return {\r\n            chatId: null,\r\n            messages: null,\r\n            chatsUser: null,\r\n            msg: null  \r\n            }\r\n        case PUSH_CHAT_IF_NOT_EXIST:\r\n            return {\r\n                ...state,\r\n                chatsUser : [action.payload, ...state.chatsUser]\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\reducers\\authReducer.js",["348"],"import {USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL  } from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: JSON.parse(localStorage.getItem(\"user\")) === null ? null : true,\r\n    isLoading: false, \r\n    user: JSON.parse(localStorage.getItem(\"user\"))\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                // user: action.payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload.user\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                isAuthenticated: false, \r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state\r\n        \r\n\r\n    }\r\n}","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\types.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\rubroActions.js",["349"],"import axios from 'axios'\r\n\r\nimport { GET_RUBROS, GET_RUBRO_INFO, LOADING_DONE_RUBRO, GET_RUBROS_LOADING } from './types'\r\n\r\nexport const getRubros = () => async dispatch => {\r\n\r\n        const resp = await axios.get('/rubros')\r\n\r\n        dispatch({type: GET_RUBROS, payload: resp.data.rubros })\r\n}\r\n\r\nexport const getRubroInfo  = (id) => async dispatch => {\r\n\r\n        dispatch({ type : GET_RUBROS_LOADING })\r\n\r\n        const resp = await axios.get(`/rubroinfo/${id}`)\r\n\r\n        dispatch({type : GET_RUBRO_INFO , payload: resp.data})\r\n\r\n}\r\n\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\authAction.js",["350"],"import axios from \"axios\";\r\n\r\n/* Tipos */\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADING,\r\n  NOT_USER,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  LOGOUT_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nimport { storage } from \"../firebase/index\";\r\n\r\n/*** Funcion que realizara el login en comunicacion con el reducer */\r\nexport const login = (username, password, history) => async (dispatch) => {\r\n  let body = JSON.stringify({ username, password });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    let res = await axios.post(\"/login\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"user\",\r\n      JSON.stringify({\r\n        ...res.data.user,\r\n      })\r\n    );\r\n\r\n    history.push(\"/home?b0=0&\");\r\n  } catch (err) {\r\n    if (err.response.data.message === \"Usuario no existente\") {\r\n      dispatch(returnErrors(err.response.data, err.response.status, NOT_USER));\r\n      dispatch({ type: AUTH_ERROR });\r\n    } else {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, LOGIN_FAIL)\r\n      );\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  }\r\n};\r\n\r\nexport const register = (user, history) => async (dispatch) => {\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  if (user.isBussines) {\r\n    let body = JSON.stringify(user);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      let res = await axios.post(\"/registro\", body, config);\r\n\r\n      localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          ...res.data.user,\r\n        })\r\n      );\r\n\r\n      dispatch({ type: USER_LOADED });\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      if (user.isBussines) {\r\n        history.push(\"/home?b0=0&\");\r\n      } else {\r\n        history.push(\"/registro/postregister\");\r\n      }\r\n    } catch (err) {\r\n      if (err.response.data.message === \"Usuario ya existente\") {\r\n        dispatch(\r\n          returnErrors(err.response.data, err.response.status, REGISTER_FAIL)\r\n        );\r\n        dispatch({ type: AUTH_ERROR });\r\n      }\r\n    }\r\n  } else {\r\n    const uploadTask = storage\r\n      .ref(`pdf/${user.username}${user.pdf_url.name}`)\r\n      .put(user.pdf_url);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"pdf\")\r\n          .child(user.username + user.pdf_url.name)\r\n          .getDownloadURL()\r\n          .then(async (url) => {\r\n            let body = {\r\n              ...user,\r\n              pdf_url: url,\r\n            };\r\n\r\n            body = JSON.stringify(body);\r\n            const config = {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            };\r\n\r\n            try {\r\n              let res = await axios.post(\"/registro\", body, config);\r\n\r\n              localStorage.setItem(\r\n                \"user\",\r\n                JSON.stringify({\r\n                  ...res.data.user,\r\n                })\r\n              );\r\n\r\n              dispatch({ type: USER_LOADED });\r\n\r\n              dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data,\r\n              });\r\n\r\n              if (user.isBussines) {\r\n                history.push(\"/home\");\r\n              } else {\r\n                history.push(\"/registro/postregister\");\r\n              }\r\n            } catch (err) {\r\n              if (err.response.data.message === \"Usuario ya existente\") {\r\n                dispatch(\r\n                  returnErrors(\r\n                    err.response.data,\r\n                    err.response.status,\r\n                    REGISTER_FAIL\r\n                  )\r\n                );\r\n                dispatch({ type: AUTH_ERROR });\r\n              }\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nexport const logOut = (history) => async (dispatch) => {\r\n  let resp = await axios.get(\"/logout\");\r\n\r\n  dispatch({ type: LOGOUT_SUCCESS });\r\n\r\n  localStorage.removeItem(\"user\");\r\n};\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\firebase\\index.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\chatActions.js",["351"],"import axios from \"axios\";\r\n\r\nimport { CREATE_CHAT, GET_CHAT_BY_ID, SEND_MESSAGE, GET_CHATS_BY_USER, PUSH_LAST_MESSAGE, CLEAN_CHAT , PUSH_CHAT_IF_NOT_EXIST } from \"./types\";\r\n\r\nexport const createChat = (data) => async (dispatch) => {\r\n\r\n   const res = await axios.post('/createChat', data)\r\n\r\n       dispatch({\r\n           type: CREATE_CHAT,\r\n           payload : res.data.chatId\r\n       })\r\n}\r\n\r\nexport const getChat = (id) => async (dispatch) => {\r\n\r\n    const res = await axios.get(`/chatback/${id}`)\r\n\r\n    const messages = await axios.get(`/messages/${id}`)\r\n\r\n    dispatch({\r\n        type: GET_CHAT_BY_ID,\r\n        payload: { ...res.data, ...messages.data  }\r\n    })\r\n}\r\n\r\nexport const pushMessage = message => {\r\n\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        payload: message\r\n    }\r\n}\r\n\r\nexport const getChatsByUser = (id) => async (dispatch) => {\r\n   \r\n     \r\n    const resp = await axios.get(`/chatuser`)\r\n\r\n    dispatch({\r\n        type: GET_CHATS_BY_USER,\r\n        payload: resp.data.mensajeInfo\r\n    })\r\n\r\n}\r\n\r\nexport const pushLastMessage = (chat_id) => (dispatch, getState) => {\r\n\r\n\r\n    let index = getState().chat.chatsUser.findIndex(valor => valor.chat_id == chat_id)\r\n\r\n    let value = { lastMessage: getState().chat.messages[ getState().chat.messages.length - 1 ] }\r\n\r\n    delete value.chat_id\r\n\r\n    dispatch({\r\n        type: PUSH_LAST_MESSAGE,\r\n        payload: { index , value  }\r\n    })\r\n}\r\n\r\nexport const cleanChat  = () => {\r\n    return {\r\n        type: CLEAN_CHAT\r\n    }\r\n}\r\n\r\nexport const pushChatIfNotExist = (chatInfo) => {\r\n\r\n    console.log(\"CHAT INFO\", chatInfo)\r\n\r\n    return {\r\n        type : PUSH_CHAT_IF_NOT_EXIST,\r\n        payload: chatInfo\r\n    }\r\n    \r\n}\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\areasActions.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\anunciosActions.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\userInfoActions.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\propuestaActions.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\anuncioUser.js",[],"C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\rightSide.js",["352"],"import React, { useState } from \"react\";\r\n\r\nimport { Image, Container } from \"react-bootstrap\";\r\n\r\nconst RightSide = ({ src, imgWidth, imgHeight }) => {\r\n\r\n    return (\r\n        <Container style = {{ padding: 0}} >\r\n            <Image style = {{ width: imgWidth, height: imgHeight }} src = {src} />\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default RightSide","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\navBar.js",["353","354","355","356"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* React boostrap */\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Button,\r\n  Overlay,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Badge\r\n} from \"react-bootstrap\";\r\n\r\n/* Router */\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport { logOut } from \"../actions/authAction\";\r\n\r\nconst Navigation = ({ type, auth, onLogOut, anuncios }) => {\r\n\r\n  const location = useLocation()\r\n\r\n  const logOut = () => {\r\n    onLogOut();\r\n  };\r\n\r\n  const renderName = () => {\r\n    if (auth.user !== null) {\r\n        return auth.user.username_freelancer\r\n    }\r\n  }\r\n\r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title style={{ textAlign: \"center\" }} as=\"h3\">\r\n        {renderName()}\r\n      </Popover.Title>\r\n      <Popover.Content>\r\n        <Container>\r\n          <Row>\r\n            <  Col>\r\n              {\" \"}\r\n              { auth.user && !auth.user.isbussines ? <Link to=\"/micuenta\"> Mi cuenta</Link> : null}\r\n            </Col>\r\n          </Row>\r\n          <div>\r\n            { auth.user && !auth.user.isbussines ? (<hr/>): null }\r\n          </div>\r\n          <Row>\r\n            <label\r\n              style={{ width: \"100%\", textAlign: \"center\" }}\r\n              onClick={() => logOut()}\r\n            >\r\n              Cerrar Sesion\r\n            </label>\r\n          </Row>\r\n        </Container>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  const render = () => {\r\n    if (type === \"home\") {\r\n      return (\r\n        <Navbar className=\"bg-success\">\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Nav>\r\n              <Nav.Item style={{ marginRight: \"50px\" }}>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/login\" style={{ color: \"white\" }}>\r\n                    Iniciar Sesion\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Button\r\n                  style={{ borderColor: \"black\", borderWidth: \"2px\" }}\r\n                  variant=\"success\"\r\n                >\r\n                  {\" \"}\r\n                  <Link to=\"/registro\" style={{ color: \"white\" }}>\r\n                    Registrarse\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      );\r\n    } else {\r\n      return (\r\n        <Navbar className=\"bg-success\">\r\n          <Navbar.Collapse>\r\n            <Nav>\r\n\r\n              { location.pathname === \"/home\" ? null : (\r\n\r\n              <Nav.Item>\r\n                <Button variant=\"success\">\r\n                  <Link to = \"/home?b0=0&\" style={{ color: \"white\" }}>\r\n                    Menu Principal\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n\r\n              ) }\r\n\r\n\r\n              {  auth.user.isbussines ? (\r\n              <Nav.Item>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/mispublicaciones\" style={{ color: \"white\" }}>\r\n                    Mis publicaciones\r\n                    <Badge variant = \"light\" style = {{ marginLeft: '5px' }}>{ anuncios }</Badge>\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n              ) : (\r\n                <Nav.Item>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/usuariopropuestas\" style={{ color: \"white\" }}>\r\n                    Mis Propuestas\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n              )  }\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Nav style={{ marginRight: \"100px\" }}>\r\n              <Nav.Item style={{ marginRight: \"50px\" }}>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/chat\" style={{ color: \"white\" }}>\r\n                    Conversaciones\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  placement=\"bottom\"\r\n                  overlay={popover}\r\n                >\r\n                  <Button variant=\"success\">\r\n                    {\" \"}\r\n                    {/* <Link to=\"/registro\" style={{ color: \"white\" }}> */}\r\n                    Cuenta\r\n                    {/* </Link> */}\r\n                  </Button>\r\n                </OverlayTrigger>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{render()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, anuncios } = state;\r\n\r\n  return {\r\n    auth,\r\n    anuncios: anuncios.notificationsPropuestas\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogOut: (history) => {\r\n      dispatch(logOut(history));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\footer.js",["357","358","359"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\r\n\r\nimport \"../styles/ComponentsStyles/footer.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone, faEnvelope, faInfo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container className=\"footer-container\">\r\n        <Row>\r\n          <Col lg = {4} sm = {6}>\r\n            <div className=\"content-1\">\r\n              <label className=\"label-style\">Contactanos</label>\r\n              <label className=\"label-style\">\r\n                {\" \"}\r\n                <FontAwesomeIcon\r\n                  icon={faPhone}\r\n                  color=\"white\"\r\n                  className=\"icon\"\r\n                />{\" \"}\r\n                +58 4120055000\r\n              </label>\r\n              <label className=\"label-style\">\r\n                {\" \"}\r\n                <FontAwesomeIcon\r\n                  icon={faEnvelope}\r\n                  color=\"white\"\r\n                  className=\"icon\"\r\n                />{\" \"}\r\n                TuWork@gmail.com\r\n              </label>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col lg = {4} sm = {6}>\r\n            <div className=\"content-1\">\r\n              <label className=\"label-style\">\r\n                {\" \"}\r\n                <FontAwesomeIcon\r\n                  icon={faInfo}\r\n                  color=\"white\"\r\n                  style={{ marginRight: \"6px\" }}\r\n                />{\" \"}\r\n                Sobre nosotros\r\n              </label>\r\n              <label className=\"label-style\">\r\n                Somos una empresa encargada del acercamiento de servicios profesionales\r\n              </label>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col lg = {4} sm = {6}>\r\n            <div style = {{ marginLeft: \"100px\" }}>\r\n              <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label style = {{ color: 'white' }}>Danos tu opninion</Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} />\r\n                </Form.Group>\r\n              </Form>\r\n              <div className = \"boton-container\"> \r\n              <Button variant=\"success\">Enviar</Button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <div className=\"bg-success footer-final\">\r\n        <label style={{ display: \"block\", textAlign: \"center\", color: 'white' }}>\r\n          Copyright &copy; 2021. Todos los derechos reservados\r\n        </label>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\components\\categories.js",["360","361"],"/* React importaciones  */\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\n\r\n/* React boostrap */\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n/* CSS */\r\nimport \"../styles/ComponentsStyles/Categories.css\";\r\n\r\nconst Categories = ({ content }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"card-style\" style = {{ height: '300px' }}>\r\n        <Card.Img variant=\"top\" src = {content.src} className = \"image\" />\r\n        <Card.Body>\r\n          <Card.Title style = {{ textAlign : 'center' }}>{content.titulo}</Card.Title>\r\n          <Card.Text style = {{ textAlign: 'center' }}>\r\n            { content.contenido  }\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\Pages\\cuenta.js",["362","363","364","365","366","367","368","369","370"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\n\r\nimport {  connect } from 'react-redux'\r\n\r\nimport { getUserInfoLogged, updateUrl, onLoadURL  } from \"../actions/userInfoActions\"\r\n\r\nimport { Container, Col, Row, Button, Form, Dropdown, Card, Spinner } from \"react-bootstrap\";\r\n\r\nimport { storage } from \"../firebase/index\"\r\n\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst Cuenta = ({ onGetInfoUserLogged, auth, userInfo, onUpdateUrl, onLoadUpdate }) => {\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n  const [pdf, setPdf] = useState('')\r\n\r\n  const [colors, setColors] = useState(['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', '#B3A2A2', \"#DB913D\", \"#DBD83D\", \"#6DDE39\", \"#7639DE\", \"#DE39AA\", \"#DE3952\"])\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n    const [selectedState, setSelectedState] = useState('')\r\n\r\n    const [data, setData] = useState({\r\n      labels: ['Propuestas enviadas', 'Propuestas leidas'],\r\n        datasets:[\r\n          {\r\n            label: ['Estadisticas de propuestas'],\r\n            data:[\r\n              0\r\n            ],\r\n            backgroundColor:[\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n            ]\r\n          }\r\n        ]\r\n    })\r\n\r\n    const [dataDognut, setDataDognut] = useState({\r\n      labels: [],\r\n        datasets:[\r\n          {\r\n            label:'Estadisticas de propuestas',\r\n            data:[\r\n              5,\r\n              1,\r\n              0\r\n            ],\r\n            backgroundColor:[\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n            ]\r\n          }\r\n        ]\r\n    })\r\n\r\n    const getColorsNotRepeated = (array) => {\r\n\r\n      let arreglo = array.map( _ =>  colors[Math.floor(Math.random() * 2) + 0 ] )\r\n\r\n     let checkTwo = arreglo.some(valor => {\r\n\r\n        return (arreglo.lastIndexOf(valor) - arreglo.indexOf(valor)) === 1 \r\n\r\n      })\r\n\r\n      if (!checkTwo) {\r\n        return arreglo\r\n      } else {\r\n        getColorsNotRepeated(userInfo.userLoggedInfo.finalData)\r\n      }\r\n\r\n    }\r\n  \r\n  useEffect(() => {\r\n\r\n    if (auth.user !== undefined) {\r\n      onGetInfoUserLogged()\r\n    }\r\n   \r\n  }, []  )\r\n\r\n  useEffect(() => {\r\n\r\n    if (userInfo.userLoggedInfo !== null) {\r\n\r\n      setSelectedState(userInfo.userLoggedInfo.result.estado)\r\n    \r\n\r\n      setData(oldData => ({\r\n        ...oldData,\r\n        datasets: [{\r\n          label: oldData.datasets[0].label,\r\n          data: [userInfo.userLoggedInfo.propuestasNumber, userInfo.userLoggedInfo.propuestasReadNumber, ...oldData.datasets[0].data, Math.floor(userInfo.userLoggedInfo.propuestasNumber * 1.5 )],\r\n          backgroundColor: oldData.datasets[0].backgroundColor\r\n        }]\r\n      }))\r\n\r\n      setDataDognut({\r\n        labels: [...userInfo.userLoggedInfo.finalData.map(value => value.nombre)],\r\n        datasets:[\r\n          {\r\n            label:'Areas pertenecientes a publicaciones',\r\n            data:[...userInfo.userLoggedInfo.finalData.map(value => value.veces)],\r\n            backgroundColor: userInfo.userLoggedInfo.finalData.map((_, i) => colors[i] )\r\n          }\r\n        ]\r\n      })\r\n\r\n    }\r\n\r\n\r\n  }, [userInfo.userLoggedInfo])\r\n\r\n  const uploadFile = (file) => {\r\n\r\n    setPdf(file[0])\r\n\r\n  }\r\n\r\n\r\n  const guardarPdf =  async () => {\r\n    \r\n    onLoadUpdate()\r\n\r\n    const updateTask = storage.refFromURL(userInfo.userLoggedInfo.result.pdf_url)\r\n\r\n    const uploadTask = storage.ref(`pdf/${auth.user.username_freelancer}${pdf.name}`).put(pdf);\r\n\r\n    updateTask.delete().then(valor => {\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {},\r\n        error => {\r\n          console.log(\"ERROR\", error)\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"pdf\")\r\n            .child(auth.user.username_freelancer+pdf.name)\r\n            .getDownloadURL()\r\n            .then( async newUrl => {\r\n              onUpdateUrl(newUrl)\r\n              setIsEditMode(false)\r\n            })\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderItems = () => {\r\n\r\n    if(isEditMode) {\r\n      return (\r\n        <div style = {{ marginTop: '20px' }}>\r\n          <input ref = {inputRef} id = \"files\" type = \"file\" onChange = { (e) => uploadFile(e.target.files)  } style = {{ display: 'none' }} /> \r\n          <Button onClick = { () => inputRef.current.click() }>Subir Curriculum</Button>\r\n          {  pdf === \"\" ? null : <Button onClick = { () => guardarPdf() } style = {{ marginLeft: '10px' }} >Guardar</Button>   }\r\n          <Button variant=\"danger\" onClick = { () => {setIsEditMode(false); setPdf(\"\")  } }  style = {{ marginLeft: '10px' }}  >Quitar modo editable</Button>\r\n        </div>\r\n      )\r\n    } else {\r\n      return(\r\n        <div style = {{ marginTop: '20px' }}>\r\n          <a href = { userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.pdf_url : null  } target=\"_blank\" ><Button variant=\"success\">Ver Curriculum</Button></a>\r\n          <Button variant=\"warning\" onClick = { () => setIsEditMode(true) } style = {{ marginLeft: '10px' }} >Editar</Button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row style = {{ marginRight: '0px', marginLeft: '0px' }}>\r\n        <Col lg = {7}>\r\n          <h1 style = {{ textAlign: 'center' }}>Informacion de cuenta</h1>\r\n\r\n          <div style = { { marginTop: '10%' } }>\r\n\r\n          <div style = {{ display: 'flex'  }}>\r\n\r\n          <div style = {{ flexGrow: '1' }}>\r\n          <Form.Label style = {{ textAlign: 'center', display: 'block' }}>Usuario</Form.Label>\r\n          <Form.Control value = {  userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.username_freelancer : '' } disabled={true} />\r\n          </div>\r\n\r\n          <div style = {{ flexGrow: '0.5' }}></div>\r\n\r\n          <div style = {{ flexGrow:'1' }}>\r\n          <Form.Label style = {{  textAlign: 'center', display: 'block' }}>Nombre</Form.Label>\r\n          <Form.Control value = {  userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.username_nombre : '' } disabled ={true} />\r\n          </div>\r\n\r\n          </div>\r\n\r\n          <div style = {{ display: 'flex' }}>\r\n\r\n            <div style = {{ flexGrow: '1' }}>\r\n\r\n          <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\", marginTop: '30px' }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n                disabled={true}\r\n              >\r\n                { userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.estado : null }\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                \r\n                {states.map((value, i) => (\r\n                  <Dropdown.Item key = {i} onClick={() => setSelectedState(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            </div>\r\n\r\n            <div style = {{ flexGrow: '0.5' }}>\r\n\r\n            </div>\r\n\r\n          <div style = {{ flexGrow: '1' }}>\r\n            \r\n          <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\", marginTop: '30px' }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n                disabled={true}\r\n              >\r\n                { userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.rubro : null }\r\n              </Dropdown.Toggle>\r\n\r\n            </Dropdown>\r\n\r\n          </div>\r\n\r\n          </div>\r\n\r\n          <div>\r\n\r\n            <Row>\r\n              { userInfo.userLoggedInfo !== null ?  userInfo.userLoggedInfo.result.area_info.map((valor, i) => {\r\n\r\n                return (\r\n                  <Col lg = {6} key = {i}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                          <label style = { { display: 'block' } }>Area: {valor.nombre_area}</label>\r\n                          <label>Experiencia: {valor.experiencia} </label>\r\n                        </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n\r\n              })  : null  }\r\n            </Row>\r\n\r\n\r\n          </div>\r\n\r\n          { renderItems() }\r\n          <div>\r\n\r\n              { userInfo.isLoading ?  (\r\n                <div style = {{ display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: '40px' }}>\r\n                  <Spinner\r\n                      animation=\"border\"\r\n                      variant=\"success\"\r\n                      style={{ width: \"40px\", height: \"40px\" }}\r\n                    >\r\n                    </Spinner>\r\n                    <label>Subiendo...</label>\r\n                </div>\r\n              ) : (\r\n                null\r\n              )  }\r\n              \r\n          </div>\r\n\r\n          </div>\r\n\r\n          \r\n\r\n\r\n        </Col>\r\n        <Col lg = {5} style = {{ padding: '0' }}>\r\n          <h1 style = {{ textAlign: 'center' }}>Estadisticas</h1>\r\n          \r\n          <Bar data={data} height={200}  />\r\n\r\n          <Doughnut data = {dataDognut}  />\r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, userInfo  } = state\r\n\r\n    return {\r\n      auth,\r\n      userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onGetInfoUserLogged: () => {\r\n      dispatch(getUserInfoLogged())\r\n    },\r\n    onUpdateUrl: (newUrl) => {\r\n      dispatch(updateUrl(newUrl))\r\n    },\r\n    onLoadUpdate : () => {\r\n      dispatch(onLoadURL())\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Cuenta)","C:\\Users\\start\\OneDrive\\Escritorio\\Tesis\\server\\client\\src\\actions\\errorActions.js",[],{"ruleId":"371","severity":1,"message":"372","line":1,"column":8,"nodeType":"373","messageId":"374","endLine":1,"endColumn":12},{"ruleId":"371","severity":1,"message":"375","line":4,"column":32,"nodeType":"373","messageId":"374","endLine":4,"endColumn":40},{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","replacedBy":"379"},{"ruleId":"371","severity":1,"message":"380","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":26},{"ruleId":"371","severity":1,"message":"381","line":11,"column":45,"nodeType":"373","messageId":"374","endLine":11,"endColumn":50},{"ruleId":"371","severity":1,"message":"382","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":17},{"ruleId":"371","severity":1,"message":"383","line":13,"column":3,"nodeType":"373","messageId":"374","endLine":13,"endColumn":12},{"ruleId":"371","severity":1,"message":"384","line":14,"column":3,"nodeType":"373","messageId":"374","endLine":14,"endColumn":6},{"ruleId":"371","severity":1,"message":"385","line":15,"column":3,"nodeType":"373","messageId":"374","endLine":15,"endColumn":6},{"ruleId":"371","severity":1,"message":"386","line":35,"column":10,"nodeType":"373","messageId":"374","endLine":35,"endColumn":16},{"ruleId":"387","severity":1,"message":"388","line":50,"column":6,"nodeType":"389","endLine":50,"endColumn":19,"suggestions":"390"},{"ruleId":"371","severity":1,"message":"391","line":55,"column":18,"nodeType":"373","messageId":"374","endLine":55,"endColumn":27},{"ruleId":"371","severity":1,"message":"392","line":93,"column":10,"nodeType":"373","messageId":"374","endLine":93,"endColumn":20},{"ruleId":"387","severity":1,"message":"393","line":108,"column":6,"nodeType":"389","endLine":108,"endColumn":8,"suggestions":"394"},{"ruleId":"395","severity":1,"message":"396","line":252,"column":53,"nodeType":"397","messageId":"398","endLine":252,"endColumn":55},{"ruleId":"395","severity":1,"message":"396","line":287,"column":52,"nodeType":"397","messageId":"398","endLine":287,"endColumn":54},{"ruleId":"371","severity":1,"message":"399","line":10,"column":3,"nodeType":"373","messageId":"374","endLine":10,"endColumn":14},{"ruleId":"371","severity":1,"message":"400","line":33,"column":10,"nodeType":"373","messageId":"374","endLine":33,"endColumn":18},{"ruleId":"371","severity":1,"message":"401","line":44,"column":10,"nodeType":"373","messageId":"374","endLine":44,"endColumn":21},{"ruleId":"371","severity":1,"message":"402","line":44,"column":23,"nodeType":"373","messageId":"374","endLine":44,"endColumn":37},{"ruleId":"371","severity":1,"message":"403","line":50,"column":22,"nodeType":"373","messageId":"374","endLine":50,"endColumn":35},{"ruleId":"387","severity":1,"message":"404","line":103,"column":6,"nodeType":"389","endLine":103,"endColumn":8,"suggestions":"405"},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"407","line":7,"column":3,"nodeType":"373","messageId":"374","endLine":7,"endColumn":8},{"ruleId":"371","severity":1,"message":"408","line":36,"column":3,"nodeType":"373","messageId":"374","endLine":36,"endColumn":16},{"ruleId":"371","severity":1,"message":"409","line":70,"column":10,"nodeType":"373","messageId":"374","endLine":70,"endColumn":23},{"ruleId":"371","severity":1,"message":"410","line":70,"column":25,"nodeType":"373","messageId":"374","endLine":70,"endColumn":41},{"ruleId":"395","severity":1,"message":"396","line":82,"column":26,"nodeType":"397","messageId":"398","endLine":82,"endColumn":28},{"ruleId":"387","severity":1,"message":"411","line":86,"column":6,"nodeType":"389","endLine":86,"endColumn":8,"suggestions":"412"},{"ruleId":"387","severity":1,"message":"413","line":101,"column":6,"nodeType":"389","endLine":101,"endColumn":8,"suggestions":"414"},{"ruleId":"387","severity":1,"message":"415","line":132,"column":6,"nodeType":"389","endLine":132,"endColumn":25,"suggestions":"416"},{"ruleId":"417","severity":1,"message":"418","line":142,"column":25,"nodeType":"419","messageId":"420","endLine":142,"endColumn":27},{"ruleId":"387","severity":1,"message":"421","line":164,"column":6,"nodeType":"389","endLine":164,"endColumn":13,"suggestions":"422"},{"ruleId":"387","severity":1,"message":"423","line":174,"column":6,"nodeType":"389","endLine":174,"endColumn":21,"suggestions":"424"},{"ruleId":"417","severity":1,"message":"418","line":221,"column":25,"nodeType":"419","messageId":"420","endLine":221,"endColumn":27},{"ruleId":"425","severity":1,"message":"426","line":339,"column":15,"nodeType":"427","endLine":339,"endColumn":48},{"ruleId":"371","severity":1,"message":"386","line":28,"column":10,"nodeType":"373","messageId":"374","endLine":28,"endColumn":16},{"ruleId":"395","severity":1,"message":"396","line":38,"column":20,"nodeType":"397","messageId":"398","endLine":38,"endColumn":22},{"ruleId":"371","severity":1,"message":"428","line":46,"column":9,"nodeType":"373","messageId":"374","endLine":46,"endColumn":14},{"ruleId":"387","severity":1,"message":"429","line":53,"column":6,"nodeType":"389","endLine":53,"endColumn":8,"suggestions":"430"},{"ruleId":"387","severity":1,"message":"431","line":60,"column":6,"nodeType":"389","endLine":60,"endColumn":8,"suggestions":"432"},{"ruleId":"395","severity":1,"message":"396","line":73,"column":17,"nodeType":"397","messageId":"398","endLine":73,"endColumn":19},{"ruleId":"395","severity":1,"message":"396","line":73,"column":35,"nodeType":"397","messageId":"398","endLine":73,"endColumn":37},{"ruleId":"395","severity":1,"message":"396","line":77,"column":17,"nodeType":"397","messageId":"398","endLine":77,"endColumn":19},{"ruleId":"371","severity":1,"message":"433","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"387","severity":1,"message":"388","line":19,"column":8,"nodeType":"389","endLine":19,"endColumn":10,"suggestions":"434"},{"ruleId":"371","severity":1,"message":"381","line":21,"column":3,"nodeType":"373","messageId":"374","endLine":21,"endColumn":8},{"ruleId":"371","severity":1,"message":"435","line":22,"column":3,"nodeType":"373","messageId":"374","endLine":22,"endColumn":8},{"ruleId":"371","severity":1,"message":"436","line":23,"column":3,"nodeType":"373","messageId":"374","endLine":23,"endColumn":13},{"ruleId":"371","severity":1,"message":"399","line":24,"column":3,"nodeType":"373","messageId":"374","endLine":24,"endColumn":14},{"ruleId":"371","severity":1,"message":"400","line":32,"column":3,"nodeType":"373","messageId":"374","endLine":32,"endColumn":11},{"ruleId":"387","severity":1,"message":"388","line":43,"column":6,"nodeType":"389","endLine":43,"endColumn":8,"suggestions":"437"},{"ruleId":"371","severity":1,"message":"438","line":61,"column":23,"nodeType":"373","messageId":"374","endLine":61,"endColumn":37},{"ruleId":"387","severity":1,"message":"439","line":92,"column":6,"nodeType":"389","endLine":92,"endColumn":13,"suggestions":"440"},{"ruleId":"371","severity":1,"message":"441","line":98,"column":18,"nodeType":"373","messageId":"374","endLine":98,"endColumn":27},{"ruleId":"387","severity":1,"message":"442","line":118,"column":6,"nodeType":"389","endLine":118,"endColumn":16,"suggestions":"443"},{"ruleId":"371","severity":1,"message":"433","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"380","line":2,"column":27,"nodeType":"373","messageId":"374","endLine":2,"endColumn":36},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"444","line":13,"column":8,"nodeType":"373","messageId":"374","endLine":13,"endColumn":16},{"ruleId":"371","severity":1,"message":"383","line":11,"column":3,"nodeType":"373","messageId":"374","endLine":11,"endColumn":12},{"ruleId":"371","severity":1,"message":"384","line":12,"column":3,"nodeType":"373","messageId":"374","endLine":12,"endColumn":6},{"ruleId":"371","severity":1,"message":"385","line":13,"column":3,"nodeType":"373","messageId":"374","endLine":13,"endColumn":6},{"ruleId":"371","severity":1,"message":"386","line":33,"column":10,"nodeType":"373","messageId":"374","endLine":33,"endColumn":16},{"ruleId":"371","severity":1,"message":"445","line":42,"column":10,"nodeType":"373","messageId":"374","endLine":42,"endColumn":17},{"ruleId":"387","severity":1,"message":"388","line":59,"column":6,"nodeType":"389","endLine":59,"endColumn":19,"suggestions":"446"},{"ruleId":"387","severity":1,"message":"388","line":66,"column":6,"nodeType":"389","endLine":66,"endColumn":8,"suggestions":"447"},{"ruleId":"371","severity":1,"message":"391","line":71,"column":18,"nodeType":"373","messageId":"374","endLine":71,"endColumn":27},{"ruleId":"371","severity":1,"message":"392","line":122,"column":10,"nodeType":"373","messageId":"374","endLine":122,"endColumn":20},{"ruleId":"395","severity":1,"message":"396","line":281,"column":53,"nodeType":"397","messageId":"398","endLine":281,"endColumn":55},{"ruleId":"395","severity":1,"message":"396","line":316,"column":52,"nodeType":"397","messageId":"398","endLine":316,"endColumn":54},{"ruleId":"371","severity":1,"message":"433","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"435","line":42,"column":3,"nodeType":"373","messageId":"374","endLine":42,"endColumn":8},{"ruleId":"395","severity":1,"message":"396","line":123,"column":38,"nodeType":"397","messageId":"398","endLine":123,"endColumn":40},{"ruleId":"387","severity":1,"message":"388","line":128,"column":6,"nodeType":"389","endLine":128,"endColumn":8,"suggestions":"448"},{"ruleId":"387","severity":1,"message":"388","line":142,"column":6,"nodeType":"389","endLine":142,"endColumn":30,"suggestions":"449"},{"ruleId":"387","severity":1,"message":"388","line":150,"column":6,"nodeType":"389","endLine":150,"endColumn":21,"suggestions":"450"},{"ruleId":"387","severity":1,"message":"388","line":161,"column":6,"nodeType":"389","endLine":161,"endColumn":16,"suggestions":"451"},{"ruleId":"425","severity":1,"message":"426","line":481,"column":17,"nodeType":"427","endLine":481,"endColumn":51},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"452","line":2,"column":55,"nodeType":"373","messageId":"374","endLine":2,"endColumn":64},{"ruleId":"371","severity":1,"message":"453","line":10,"column":10,"nodeType":"373","messageId":"374","endLine":10,"endColumn":16},{"ruleId":"371","severity":1,"message":"454","line":10,"column":29,"nodeType":"373","messageId":"374","endLine":10,"endColumn":34},{"ruleId":"387","severity":1,"message":"455","line":20,"column":6,"nodeType":"389","endLine":20,"endColumn":8,"suggestions":"456"},{"ruleId":"371","severity":1,"message":"406","line":5,"column":3,"nodeType":"373","messageId":"374","endLine":5,"endColumn":18},{"ruleId":"371","severity":1,"message":"452","line":6,"column":3,"nodeType":"373","messageId":"374","endLine":6,"endColumn":12},{"ruleId":"371","severity":1,"message":"383","line":14,"column":24,"nodeType":"373","messageId":"374","endLine":14,"endColumn":33},{"ruleId":"387","severity":1,"message":"388","line":58,"column":6,"nodeType":"389","endLine":58,"endColumn":8,"suggestions":"457"},{"ruleId":"387","severity":1,"message":"388","line":66,"column":6,"nodeType":"389","endLine":66,"endColumn":8,"suggestions":"458"},{"ruleId":"387","severity":1,"message":"388","line":97,"column":6,"nodeType":"389","endLine":97,"endColumn":29,"suggestions":"459"},{"ruleId":"387","severity":1,"message":"460","line":113,"column":6,"nodeType":"389","endLine":113,"endColumn":27,"suggestions":"461"},{"ruleId":"371","severity":1,"message":"433","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"380","line":2,"column":27,"nodeType":"373","messageId":"374","endLine":2,"endColumn":36},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"462","line":23,"column":26,"nodeType":"373","messageId":"374","endLine":23,"endColumn":31},{"ruleId":"371","severity":1,"message":"463","line":49,"column":10,"nodeType":"373","messageId":"374","endLine":49,"endColumn":19},{"ruleId":"387","severity":1,"message":"464","line":55,"column":6,"nodeType":"389","endLine":55,"endColumn":8,"suggestions":"465"},{"ruleId":"387","severity":1,"message":"466","line":68,"column":6,"nodeType":"389","endLine":68,"endColumn":20,"suggestions":"467"},{"ruleId":"387","severity":1,"message":"468","line":74,"column":6,"nodeType":"389","endLine":74,"endColumn":8,"suggestions":"469"},{"ruleId":"387","severity":1,"message":"470","line":81,"column":6,"nodeType":"389","endLine":81,"endColumn":17,"suggestions":"471"},{"ruleId":"387","severity":1,"message":"472","line":91,"column":6,"nodeType":"389","endLine":91,"endColumn":8,"suggestions":"473"},{"ruleId":"474","severity":1,"message":"475","line":10,"column":1,"nodeType":"476","endLine":34,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":7,"column":1,"nodeType":"476","endLine":21,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":9,"column":1,"nodeType":"476","endLine":26,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":9,"column":1,"nodeType":"476","endLine":48,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":9,"column":1,"nodeType":"476","endLine":34,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":11,"column":1,"nodeType":"476","endLine":58,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":10,"column":1,"nodeType":"476","endLine":52,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":8,"column":1,"nodeType":"476","endLine":26,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":10,"column":1,"nodeType":"476","endLine":64,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":9,"column":1,"nodeType":"476","endLine":50,"endColumn":2},{"ruleId":"371","severity":1,"message":"477","line":3,"column":38,"nodeType":"373","messageId":"374","endLine":3,"endColumn":56},{"ruleId":"371","severity":1,"message":"478","line":172,"column":7,"nodeType":"373","messageId":"374","endLine":172,"endColumn":11},{"ruleId":"395","severity":1,"message":"396","line":50,"column":76,"nodeType":"397","messageId":"398","endLine":50,"endColumn":78},{"ruleId":"371","severity":1,"message":"433","line":1,"column":17,"nodeType":"373","messageId":"374","endLine":1,"endColumn":25},{"ruleId":"371","severity":1,"message":"433","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"380","line":2,"column":27,"nodeType":"373","messageId":"374","endLine":2,"endColumn":36},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"479","line":10,"column":3,"nodeType":"373","messageId":"374","endLine":10,"endColumn":10},{"ruleId":"371","severity":1,"message":"433","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"380","line":2,"column":27,"nodeType":"373","messageId":"374","endLine":2,"endColumn":36},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"433","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"406","line":2,"column":27,"nodeType":"373","messageId":"374","endLine":2,"endColumn":42},{"ruleId":"371","severity":1,"message":"406","line":2,"column":38,"nodeType":"373","messageId":"374","endLine":2,"endColumn":53},{"ruleId":"371","severity":1,"message":"383","line":8,"column":10,"nodeType":"373","messageId":"374","endLine":8,"endColumn":19},{"ruleId":"371","severity":1,"message":"441","line":23,"column":18,"nodeType":"373","messageId":"374","endLine":23,"endColumn":27},{"ruleId":"371","severity":1,"message":"391","line":25,"column":18,"nodeType":"373","messageId":"374","endLine":25,"endColumn":27},{"ruleId":"371","severity":1,"message":"480","line":51,"column":12,"nodeType":"373","messageId":"374","endLine":51,"endColumn":25},{"ruleId":"371","severity":1,"message":"481","line":100,"column":9,"nodeType":"373","messageId":"374","endLine":100,"endColumn":29},{"ruleId":"387","severity":1,"message":"482","line":111,"column":6,"nodeType":"389","endLine":111,"endColumn":8,"suggestions":"483"},{"ruleId":"387","severity":1,"message":"484","line":143,"column":6,"nodeType":"389","endLine":143,"endColumn":31,"suggestions":"485"},{"ruleId":"486","severity":1,"message":"487","line":195,"column":107,"nodeType":"427","endLine":195,"endColumn":122},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["488"],"no-negated-in-lhs",["489"],"'useEffect' is defined but never used.","'Alert' is defined but never used.","'storage' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Spring' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["490"],"'setStates' is assigned a value but never used.","'stateError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'states'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCopyStates' needs the current value of 'states'.",["491"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControl' is defined but never used.","'faSearch' is defined but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.","'setCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetRubros'. Either include it or remove the dependency array. If 'onGetRubros' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["492"],"'useLayoutEffect' is defined but never used.","'Toast' is defined but never used.","'faCheckCircle' is defined but never used.","'isFirstRender' is assigned a value but never used.","'setIsFirstRender' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history.action'. Either include it or remove the dependency array.",["493"],"React Hook useEffect has missing dependencies: 'auth.user.username_freelancer', 'onGetPropuestas', 'onGetRubros', 'propuesta', and 'rubros.rubros'. Either include them or remove the dependency array. If 'onGetPropuestas' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["494"],"React Hook useEffect has a missing dependency: 'auth.user.username_freelancer'. Either include it or remove the dependency array.",["495"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'history' and 'onGetAnuncios'. Either include them or remove the dependency array. If 'onGetAnuncios' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["496"],"React Hook useEffect has missing dependencies: 'auth.user.username_freelancer', 'onCleanPropuesta', and 'onGetPropuestas'. Either include them or remove the dependency array. If 'onCleanPropuesta' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["497"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'items' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'auth.isAuthenticated' and 'history'. Either include them or remove the dependency array.",["498"],"React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array. If 'clearErrors' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["499"],"'useState' is defined but never used.",["500"],"'Image' is defined but never used.","'InputGroup' is defined but never used.",["501"],"'setExperiencia' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'estadoChip' and 'experienciaTemp'. Either include them or remove the dependency array.",["502"],"'setColors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'send'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["503"],"'MiPerfil' is defined but never used.","'country' is assigned a value but never used.",["504"],["505"],["506"],["507"],["508"],["509"],"'useParams' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.username_freelancer' and 'onGetPropuesta'. Either include them or remove the dependency array. If 'onGetPropuesta' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["510"],["511"],["512"],["513"],"React Hook useEffect has a missing dependency: 'props.auth.user.username_freelancer'. Either include it or remove the dependency array.",["514"],"'toast' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'onGetByAnuncio'. Either include them or remove the dependency array. If 'onGetByAnuncio' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["515"],"React Hook useEffect has missing dependencies: 'onCleanUpdate' and 'onGetUserInfo'. Either include them or remove the dependency array. If 'onGetUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["516"],"React Hook useEffect has a missing dependency: 'onCleanPropuestaByAnuncio'. Either include it or remove the dependency array. If 'onCleanPropuestaByAnuncio' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["517"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["518"],"React Hook useEffect has a missing dependency: 'onCleanUserInfo'. Either include it or remove the dependency array. If 'onCleanUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["519"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'LOADING_DONE_RUBRO' is defined but never used.","'resp' is assigned a value but never used.","'Overlay' is defined but never used.","'selectedState' is assigned a value but never used.","'getColorsNotRepeated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.user' and 'onGetInfoUserLogged'. Either include them or remove the dependency array. If 'onGetInfoUserLogged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["520"],"React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDataDognut' needs the current value of 'colors'.",["521"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"542","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"522","fix":"549"},{"desc":"542","fix":"550"},{"desc":"542","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"542","fix":"560"},{"desc":"542","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},"Update the dependencies array to be: [props, props.error]",{"range":"580","text":"581"},"Update the dependencies array to be: [states]",{"range":"582","text":"583"},"Update the dependencies array to be: [onGetRubros]",{"range":"584","text":"585"},"Update the dependencies array to be: [history.action]",{"range":"586","text":"587"},"Update the dependencies array to be: [auth.user.username_freelancer, onGetPropuestas, onGetRubros, propuesta, rubros.rubros]",{"range":"588","text":"589"},"Update the dependencies array to be: [anuncios.anuncios, auth.user.username_freelancer]",{"range":"590","text":"591"},"Update the dependencies array to be: [chips, history, onGetAnuncios]",{"range":"592","text":"593"},"Update the dependencies array to be: [auth.user.username_freelancer, onCleanPropuesta, onGetPropuestas, propuesta.msg]",{"range":"594","text":"595"},"Update the dependencies array to be: [auth.isAuthenticated, history]",{"range":"596","text":"597"},"Update the dependencies array to be: [clearErrors]",{"range":"598","text":"599"},"Update the dependencies array to be: [props]",{"range":"600","text":"601"},{"range":"602","text":"601"},"Update the dependencies array to be: [chips, estadoChip, experienciaTemp]",{"range":"603","text":"604"},"Update the dependencies array to be: [infoUser, props, send]",{"range":"605","text":"606"},{"range":"607","text":"581"},{"range":"608","text":"601"},{"range":"609","text":"601"},"Update the dependencies array to be: [props, props.useranuncios.msg]",{"range":"610","text":"611"},"Update the dependencies array to be: [props, selectedRubro]",{"range":"612","text":"613"},"Update the dependencies array to be: [postInfo, props]",{"range":"614","text":"615"},"Update the dependencies array to be: [auth.username_freelancer, onGetPropuesta]",{"range":"616","text":"617"},{"range":"618","text":"601"},{"range":"619","text":"601"},"Update the dependencies array to be: [props, props.match.params.id]",{"range":"620","text":"621"},"Update the dependencies array to be: [props.auth.user.username_freelancer, props.chat.chatInfo]",{"range":"622","text":"623"},"Update the dependencies array to be: [id, onGetByAnuncio]",{"range":"624","text":"625"},"Update the dependencies array to be: [isUpdated, onCleanUpdate, onGetUserInfo, v]",{"range":"626","text":"627"},"Update the dependencies array to be: [onCleanPropuestaByAnuncio]",{"range":"628","text":"629"},"Update the dependencies array to be: [chat, history, msg]",{"range":"630","text":"631"},"Update the dependencies array to be: [onCleanUserInfo]",{"range":"632","text":"633"},"Update the dependencies array to be: [auth.user, onGetInfoUserLogged]",{"range":"634","text":"635"},"Update the dependencies array to be: [colors, userInfo.userLoggedInfo]",{"range":"636","text":"637"},[1042,1055],"[props, props.error]",[2348,2350],"[states]",[2644,2646],"[onGetRubros]",[1971,1973],"[history.action]",[2369,2371],"[auth.user.username_freelancer, onGetPropuestas, onGetRubros, propuesta, rubros.rubros]",[3060,3079],"[anuncios.anuncios, auth.user.username_freelancer]",[3599,3606],"[chips, history, onGetAnuncios]",[3798,3813],"[auth.user.username_freelancer, onCleanPropuesta, onGetPropuestas, propuesta.msg]",[1464,1466],"[auth.isAuthenticated, history]",[1581,1583],"[clearErrors]",[522,524],"[props]",[868,870],[2124,2131],"[chips, estadoChip, experienciaTemp]",[2579,2589],"[infoUser, props, send]",[1301,1314],[1392,1394],[2937,2939],[3347,3371],"[props, props.useranuncios.msg]",[3549,3564],"[props, selectedRubro]",[3695,3705],"[postInfo, props]",[606,608],"[auth.username_freelancer, onGetPropuesta]",[1344,1346],[1437,1439],[2382,2405],"[props, props.match.params.id]",[2862,2883],"[props.auth.user.username_freelancer, props.chat.chatInfo]",[1479,1481],"[id, onGetByAnuncio]",[1700,1714],"[isUpdated, onCleanUpdate, onGetUserInfo, v]",[1813,1815],"[onCleanPropuestaByAnuncio]",[1918,1929],"[chat, history, msg]",[2040,2042],"[onCleanUserInfo]",[2676,2678],"[auth.user, onGetInfoUserLogged]",[3654,3679],"[colors, userInfo.userLoggedInfo]"]