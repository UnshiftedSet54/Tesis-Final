[{"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\index.js":"1","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\App.js":"3","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rootReducer.js":"4","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\areaReducer.js":"5","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\authReducer.js":"6","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosReducer.js":"7","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rubroReducer.js":"8","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\isRenderReducer.js":"9","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\errorReducer.js":"10","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosUser.js":"11","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\types.js":"12","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouterRegister.js":"13","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouter.js":"14","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\isLoggedIn.js":"15","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\login.js":"16","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\homeProfesional.js":"17","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\register.js":"18","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\principal.js":"19","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerProfesional.js":"20","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerBusiness.js":"21","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\rubroPage.js":"22","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\postRegisterPage.js":"23","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\dashboard.js":"24","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\publicaciones.js":"25","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\proyectos.js":"26","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miPerfil.js":"27","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\chatPage.js":"28","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miCuenta.js":"29","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\authAction.js":"30","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\rubroActions.js":"31","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anunciosActions.js":"32","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\areasActions.js":"33","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\cuenta.js":"34","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anuncioUser.js":"35","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\rightSide.js":"36","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\navBar.js":"37","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\footer.js":"38","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\categories.js":"39","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\errorActions.js":"40","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\firebase\\index.js":"41","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\propuestaActions.js":"42","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\propuestaReducer.js":"43","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\propuestaPage.js":"44","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\userInfoActions.js":"45","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\userInfoReducer.js":"46","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\userPropuestas.js":"47","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\chatActions.js":"48","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\chatsReducer.js":"49"},{"size":1032,"mtime":1607394888910,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1607393063424,"results":"52","hashOfConfig":"51"},{"size":2690,"mtime":1609018702030,"results":"53","hashOfConfig":"51"},{"size":795,"mtime":1608352430772,"results":"54","hashOfConfig":"51"},{"size":493,"mtime":1605672602035,"results":"55","hashOfConfig":"51"},{"size":1456,"mtime":1605672602036,"results":"56","hashOfConfig":"51"},{"size":865,"mtime":1609027903699,"results":"57","hashOfConfig":"51"},{"size":343,"mtime":1608846720153,"results":"58","hashOfConfig":"51"},{"size":381,"mtime":1605672602036,"results":"59","hashOfConfig":"51"},{"size":529,"mtime":1604171768318,"results":"60","hashOfConfig":"51"},{"size":1357,"mtime":1607915121159,"results":"61","hashOfConfig":"51"},{"size":2256,"mtime":1609801859822,"results":"62","hashOfConfig":"51"},{"size":651,"mtime":1605672601977,"results":"63","hashOfConfig":"51"},{"size":624,"mtime":1604728197130,"results":"64","hashOfConfig":"51"},{"size":639,"mtime":1605672601977,"results":"65","hashOfConfig":"51"},{"size":7152,"mtime":1609786287822,"results":"66","hashOfConfig":"51"},{"size":14640,"mtime":1609031049391,"results":"67","hashOfConfig":"51"},{"size":1854,"mtime":1604982827178,"results":"68","hashOfConfig":"51"},{"size":9322,"mtime":1609784616760,"results":"69","hashOfConfig":"51"},{"size":12310,"mtime":1609017958465,"results":"70","hashOfConfig":"51"},{"size":12579,"mtime":1608928718162,"results":"71","hashOfConfig":"51"},{"size":11364,"mtime":1608694642978,"results":"72","hashOfConfig":"51"},{"size":2916,"mtime":1608694642978,"results":"73","hashOfConfig":"51"},{"size":1053,"mtime":1605672601985,"results":"74","hashOfConfig":"51"},{"size":15847,"mtime":1609800411439,"results":"75","hashOfConfig":"51"},{"size":747,"mtime":1605828851464,"results":"76","hashOfConfig":"51"},{"size":474,"mtime":1605672601997,"results":"77","hashOfConfig":"51"},{"size":9102,"mtime":1609797632733,"results":"78","hashOfConfig":"51"},{"size":976,"mtime":1605672601996,"results":"79","hashOfConfig":"51"},{"size":4305,"mtime":1608952271375,"results":"80","hashOfConfig":"51"},{"size":247,"mtime":1608953504910,"results":"81","hashOfConfig":"51"},{"size":486,"mtime":1609031049391,"results":"82","hashOfConfig":"51"},{"size":702,"mtime":1608785807676,"results":"83","hashOfConfig":"51"},{"size":9470,"mtime":1609039922210,"results":"84","hashOfConfig":"51"},{"size":1623,"mtime":1608955479400,"results":"85","hashOfConfig":"51"},{"size":360,"mtime":1604882945244,"results":"86","hashOfConfig":"51"},{"size":5052,"mtime":1609691058353,"results":"87","hashOfConfig":"51"},{"size":2716,"mtime":1609784944049,"results":"88","hashOfConfig":"51"},{"size":742,"mtime":1608921903305,"results":"89","hashOfConfig":"51"},{"size":343,"mtime":1604171768277,"results":"90","hashOfConfig":"51"},{"size":629,"mtime":1607894005810,"results":"91","hashOfConfig":"51"},{"size":1452,"mtime":1609644727243,"results":"92","hashOfConfig":"51"},{"size":1202,"mtime":1608262397943,"results":"93","hashOfConfig":"51"},{"size":6950,"mtime":1609805195460,"results":"94","hashOfConfig":"51"},{"size":779,"mtime":1608955427632,"results":"95","hashOfConfig":"51"},{"size":715,"mtime":1608509697387,"results":"96","hashOfConfig":"51"},{"size":3510,"mtime":1609646320135,"results":"97","hashOfConfig":"51"},{"size":1735,"mtime":1609801859806,"results":"98","hashOfConfig":"51"},{"size":1561,"mtime":1609801859806,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"apiyp4",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"102"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"102"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"102"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"102"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\index.js",[],["225","226"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\App.js",["227","228"],"import logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\n\n/* CSS */\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* HOC */\nimport PrivateRoute from './Hoc/PrivateRouter'\nimport PrivateRouteRegister from './Hoc/PrivateRouterRegister'\nimport PrivateRouteLoggedIn from './Hoc/isLoggedIn'\n\n/* Pages */\nimport Login from './Pages/login'\nimport Register from './Pages/register'\nimport HomeProfesional from './Pages/homeProfesional'\nimport Principal from './Pages/principal'\nimport RegisterProfesional from './Pages/registerProfesional'\nimport RegistroBusiness from './Pages/registerBusiness'\nimport PostRegister from './Pages/postRegisterPage'\nimport Rubro from './Pages/rubroPage'\nimport Dashboard from './Pages/dashboard'\nimport MiCuenta from './Pages/miCuenta'\nimport MiPerfil from './Pages/miPerfil'\nimport Publicaciones from \"./Pages/publicaciones\";\nimport Proyectos from \"./Pages/proyectos\";\nimport ChatPage from \"./Pages/chatPage\"\nimport PropuestaPage from \"./Pages/propuestaPage\"\nimport UserPropuestas from \"./Pages/userPropuestas\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        { console.log(\"USER\", JSON.parse(localStorage.getItem(\"user\"))) }\n\n        <PrivateRouteLoggedIn exact path = \"/\" component = {Principal} />\n\n        {/* <Route exact path = \"/\" component = {Principal} /> */}\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/registro\" component={Register} />\n        \n        <Route path = \"/registro/profesional\" component = {RegisterProfesional} />\n        <Route path = \"/registro/empresa\" component = {RegistroBusiness} />\n\n        <Route path = '/chat/:id?' component = {ChatPage} />\n\n        <PrivateRouteRegister path = \"/registro/postregister\" component={PostRegister} />\n        <PrivateRouteRegister  path = \"/registro/rubro\" component={Rubro}  />\n        <PrivateRoute path = \"/dashboard\" component={Dashboard} />\n\n        <PrivateRoute path = \"/mispublicaciones\" component={Publicaciones} />\n        <PrivateRoute path = \"/misproyectos\" component={Proyectos} />\n\n        {/* <Route path = \"/registro/postregister\" component = {PostRegister} />\n        <Route path = \"/registro/rubro\" component = {Rubro} /> */}\n        <PrivateRoute path = \"/home\" component={HomeProfesional} />\n        <PrivateRoute path = \"/micuenta\" component={MiCuenta} />\n        <PrivateRoute path = \"/miperfil\" component={MiPerfil} />\n        <PrivateRoute path = \"/propuesta/:id\" component={PropuestaPage} />\n        <PrivateRoute path = \"/usuariopropuestas\" component={UserPropuestas} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\areaReducer.js",["229"],"import { GET_AREAS, SEND_AREAS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    areas: '',\r\n    resp: '',\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_AREAS: \r\n        return {\r\n            areas: action.payload\r\n        }\r\n        case SEND_AREAS:\r\n            return {\r\n                ...state,\r\n                resp: action.payload.msg\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\authReducer.js",["230"],"import {USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL  } from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: JSON.parse(localStorage.getItem(\"user\")) === null ? null : true,\r\n    isLoading: false, \r\n    user: JSON.parse(localStorage.getItem(\"user\"))\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                // user: action.payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload.user\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                isAuthenticated: false, \r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state\r\n        \r\n\r\n    }\r\n}","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosReducer.js",["231"],"import { GET_ANUNCIOS, LOADING_ANUNCIOS, CHANGE_NOTIFICATION } from '../actions/types'\r\n\r\nconst initialState = {\r\n    anuncios: [],\r\n    isLoading: false,\r\n    notificationsPropuestas : 0\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANUNCIOS: \r\n        return {\r\n            anuncios: action.payload.anuncios,\r\n            isLoading: false,\r\n            notificationsPropuestas: action.payload.notificationsPropuestas\r\n        }\r\n        case LOADING_ANUNCIOS:\r\n            return {\r\n                ...state,\r\n                isLoading: true  \r\n            }\r\n        case CHANGE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notificationsPropuestas: state.notificationsPropuestas - 1\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rubroReducer.js",["232"],"import { GET_RUBROS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    rubros: null\r\n};\r\n  \r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_RUBROS: \r\n        return {\r\n            rubros: action.payload\r\n        }\r\n        default: \r\n            return state\r\n\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\isRenderReducer.js",["233"],"import { SET_RENDER } from '../actions/types'\r\n\r\nconst initialState = {\r\n    firstRender : true\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_RENDER:\r\n            return {\r\n                ...state, \r\n                firstRender : false\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\errorReducer.js",["234"],"import { CLEAR_ERRORS, GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        mgs: {},\r\n        status: null,\r\n        id: null,\r\n      };\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosUser.js",["235"],"import { GET_ANUNCIO_BY_USER, LOADING_ANUNCIO_BY_USER, DELETE_ANUNCIO_BY_ID, UPDATE_ANUNCIO_BY_ID, CLEAR_MESSAGE, SAVE_ANUNCIO } from '../actions/types'\r\n\r\nconst initialState = {\r\n    userAnuncios: null,\r\n    isLoading: false,\r\n    msg: ''\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANUNCIO_BY_USER: \r\n        return {\r\n            userAnuncios: action.payload,\r\n            isLoading: false\r\n        }\r\n        case LOADING_ANUNCIO_BY_USER:\r\n            return {\r\n                ...state,\r\n                isLoading: true  \r\n            }\r\n        case DELETE_ANUNCIO_BY_ID:\r\n            return {\r\n                ...state,\r\n                userAnuncios : state.userAnuncios.filter(v => v.anuncio_id !== action.payload.id ),\r\n                msg: action.payload.message\r\n            }\r\n        case UPDATE_ANUNCIO_BY_ID:\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            }\r\n        case CLEAR_MESSAGE: \r\n            return {\r\n                ...state,\r\n                msg: ''\r\n            }\r\n        case SAVE_ANUNCIO:\r\n            return {\r\n                ...state,\r\n                msg: action.payload,\r\n                userAnuncios: [...state.userAnuncios ]\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\types.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouterRegister.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouter.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\isLoggedIn.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\login.js",["236","237","238","239","240","241","242","243"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\homeProfesional.js",["244","245","246","247","248","249","250","251","252","253","254","255","256"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Toast,\r\n  Carousel,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Spinner,\r\n  Button,\r\n  Modal\r\n} from \"react-bootstrap\";\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/home.css\";\r\n// import \"../styles/PageStyles/homeProfesional.css\"\r\n\r\n/* Componentes */\r\nimport NavBar from \"../components/navBar\";\r\n\r\n/* Acciones */\r\nimport { getRubros } from \"../actions/rubroActions\";\r\nimport { getAnuncios } from \"../actions/anunciosActions\";\r\nimport { getAreaById } from '../actions/areasActions'\r\nimport { sendPropuesta, cleanPropuesta, getPropuestas  } from \"../actions/propuestaActions\"\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faSearch,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst HomeProfesional = ({\r\n  auth,\r\n  history,\r\n  onGetRubros,\r\n  rubros,\r\n  anuncios,\r\n  onGetAnuncios,\r\n  onGetAreaById,\r\n  onSendPropuesta,\r\n  propuesta,\r\n  onCleanPropuesta,\r\n  onGetPropuestas\r\n}) => {\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [rubrosState, setRubrosState] = useState([]);\r\n\r\n  const [valueInput, setValueInput] = useState(\"\");\r\n\r\n  const [anunciosUsers, setAnunciosUsers] = useState([])\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [descripcion, setDescripcion] = useState(\"\")\r\n\r\n  const [currentSelected, setCurrentSelected] = useState(\"\")\r\n\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setToast(false);\r\n  //   }, 6000);\r\n  // }, []);\r\n\r\n  /* Cuando abandona la view */\r\n  useEffect(() => {\r\n    return () => {\r\n      if (history.action == \"POP\") {\r\n        window.location.href = \"/home\";\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    onGetAnuncios();\r\n    onGetPropuestas(auth.user.username_freelancer)\r\n\r\n    /* Hacer peticion si aun no tenemos los rubros en redux */\r\n    if (rubros.rubros == null) {\r\n      onGetRubros();\r\n    }\r\n\r\n    setChips((oldValues) => [...oldValues, { value: \"Todas las categorias\", id: 0 }]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (rubros.rubros !== null) {\r\n      let newValue = rubros.rubros.map((v) => {\r\n        return {\r\n          nombre: v.nombre,\r\n          isChecked: false,\r\n          id: v.rubro_id\r\n        };\r\n      });\r\n\r\n      newValue.unshift({ nombre: \"Todas las categorias\", isChecked: true, id : 0 });\r\n\r\n      setRubrosState(newValue);\r\n    }\r\n  }, [rubros.rubros]);\r\n\r\n  /* Use Effect solo para escuchar a anuncios */\r\n  useEffect(() => {\r\n\r\n    console.log(anuncios.anuncios, \"ANUNCIOS ANUNCIOS PRIMERO\")\r\n\r\n    if(anuncios.anuncios !== undefined) {\r\n\r\n      console.log(anuncios.anuncios, \"ANUNCIOS ANUNCIOS\")\r\n\r\n      let anunciosFilter = anuncios.anuncios.filter(v => v.username_freelancer !== auth.user.username_freelancer  )\r\n\r\n      setAnunciosUsers(anunciosFilter)\r\n\r\n    }\r\n\r\n  }, [anuncios.anuncios]  )\r\n\r\n  useEffect(() => {\r\n\r\n    let query = \"?\"\r\n      \r\n    if(chips.length > 0) {\r\n\r\n      chips.map( (v, i) => {\r\n        query += \"b\"  +i + \"=\" + v.id + \"&\"\r\n      })\r\n\r\n      history.push(({\r\n        pathname: '/home',\r\n        search: query\r\n      }))\r\n\r\n      onGetAnuncios(query)\r\n\r\n    } else {\r\n      history.push({\r\n        patname: '/home',\r\n        search: ''\r\n      })\r\n\r\n      onGetAnuncios(\"\")\r\n    } \r\n\r\n  }, [chips])\r\n\r\n  useEffect(() => {\r\n\r\n    if(propuesta.msg !== null) {\r\n      toast.success(propuesta.msg)\r\n      onCleanPropuesta()\r\n      onGetPropuestas(auth.user.username_freelancer)\r\n    }\r\n\r\n  }, [propuesta.msg])\r\n\r\n\r\n  const getRubroByAnuncio = (rubroId) => {\r\n    return (\r\n      <div>\r\n        { rubros.rubros !== null ? rubros.rubros.find(v => v.rubro_id == rubroId).nombre : null} \r\n      </div>\r\n    )\r\n  }\r\n\r\n  const changeCombo = (v, index, evento) => {\r\n\r\n    if (evento.target.checked) {\r\n      // if(chips.length > 2) {\r\n      //   toast.error(\"Solo puedes Seleccionar 3 Categorias\")\r\n      // } else {\r\n      let values = [...rubrosState];\r\n      values[index].isChecked = evento.target.checked;\r\n      setRubrosState(values);\r\n      setChips((oldValues) => [...oldValues, { value: v.nombre, id: v.id }]);\r\n      // }\r\n    } else {\r\n      let valor = [...rubrosState];\r\n      valor[index].isChecked = evento.target.checked;\r\n      setRubrosState(valor);\r\n      let newValue = chips.filter((value) => value.value !== v.nombre);\r\n      setChips(newValue);\r\n    }\r\n  };\r\n\r\n  const onSearch = () => {\r\n\r\n    if (chips.length <= 0 && valueInput === \"\") {\r\n      toast.warn(\"Ingrese algun filtro\");\r\n    } else {\r\n\r\n      // history.push({\r\n      //   patname: '/home',\r\n      //   search: history.location.search + \"value=\"+ valueInput\r\n      // })\r\n\r\n      let query = \"?\"\r\n      \r\n\r\n      chips.map( (v, i) => {\r\n        query += \"b\"  +i + \"=\" + v.id + \"&\"\r\n      })\r\n\r\n      history.push(({\r\n        pathname: '/home',\r\n        search: query + \"value=\" + valueInput\r\n      }))\r\n\r\n      onGetAnuncios(history.location.search)\r\n\r\n    }\r\n  };\r\n\r\n  const deleteChip = (value, index) => {\r\n    setChips(chips.filter((v, i) => i !== index));\r\n\r\n    let getRubroIndex = rubrosState.findIndex((v) => v.nombre === value.value);\r\n\r\n    let updateState = [...rubrosState];\r\n\r\n    updateState[getRubroIndex].isChecked = false;\r\n\r\n    setRubrosState(updateState);\r\n\r\n  };\r\n\r\n  const sendPropuesta = (valor = currentSelected) => {\r\n\r\n    onSendPropuesta({\r\n      anuncio_id: valor.anuncio_id,\r\n      username_freelancer: valor.username_freelancer,\r\n      descripcion,\r\n      user_prop: auth.user.username_freelancer\r\n    })\r\n\r\n    setShow(false)\r\n\r\n  }\r\n\r\n  const modal = (v) => {\r\n\r\n    setShow(true)\r\n\r\n    setCurrentSelected(v)\r\n\r\n  }\r\n\r\n  const renderBoton = (v) => {\r\n\r\n    if (!auth.user.isbussines) {\r\n      if (propuesta.propuestasByUser !== null) {\r\n\r\n        const checkIfSend = propuesta.propuestasByUser.find(valor => valor.anuncio_id === v.anuncio_id )\r\n\r\n        if(checkIfSend) {\r\n          return null\r\n        } else {\r\n          return <Button variant=\"success\" style = {{ borderRadius: '30px', height: '38px' }} onClick = { () => modal(v) } >Enviar Propuesta</Button>\r\n        }\r\n      }\r\n\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <NavBar />\r\n      <header>\r\n        <Carousel fade={true}>\r\n          <Carousel.Item interval={5000}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"https://menaalliances.com/wp-content/uploads/2016/04/03-Notebook.jpg\"\r\n              alt=\"First slide\"\r\n              style={{ height: \"80vh\" }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>Consigue trabajo</h3>\r\n              <p>Sin necesidad de ir al lugar</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={5000}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"https://images.unsplash.com/photo-1601129490376-e24f32ed8024?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\"\r\n              alt=\"Third slide\"\r\n              style={{ height: \"80vh\" }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>Trabaja</h3>\r\n              <p>De una forma rapida y segura.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"https://ak.picdn.net/shutterstock/videos/12015494/thumb/1.jpg\"\r\n              alt=\"Third slide\"\r\n              style={{ height: \"80vh\" }}\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>Aumenta tu reputacion</h3>\r\n              <p>Con una mejor reputacion podras conseguir mas trabajos.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </header>\r\n\r\n      <Container style={{ marginTop: \"40px\", height: \"100vh\" }}>\r\n        <Row>\r\n          <Col lg={4}>\r\n            <Card\r\n              className=\"shadow p-3 mb-5 bg-white rounded\"\r\n              style={{ width: \"18rem\" }}\r\n              className=\"card-home-profesional\"\r\n            >\r\n              {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n              <Card.Body>\r\n                {rubros.rubros !== null\r\n                  ? rubrosState.map((v, i) => {\r\n                      return (\r\n                        <div\r\n                          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                        >\r\n                          <label>\r\n                            {\" \"}\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={v.isChecked}\r\n                              onChange={(e) => changeCombo(v, i, e)}\r\n                            />{\" \"}\r\n                            {v.nombre}\r\n                          </label>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={8} style={{ height: \"100vh\" }}>\r\n            <InputGroup className=\"mb-3 shadow\">\r\n              <FormControl\r\n                placeholder=\"Busca trabajo\"\r\n                onChange={(e) => setValueInput(e.target.value)}\r\n              />\r\n              <InputGroup.Append onClick={() => onSearch()}>\r\n                <InputGroup.Text id=\"basic-addon2\">\r\n                  {anuncios.isLoading ? (\r\n                    <Spinner\r\n                      animation=\"border\"\r\n                      variant=\"success\"\r\n                      style={{ width: \"20px\", height: \"20px\" }}\r\n                    >\r\n                      {\" \"}\r\n                    </Spinner>\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                  )}\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n\r\n            {/* <Row style = {{ marginTop: '30px' }}> */}\r\n\r\n            {chips.length > 0 ? (\r\n              <div className=\"chips-home-user\">\r\n                {chips.map((v, i) => {\r\n                  return (\r\n                    <div\r\n                      className=\"chips-container-home-user\"\r\n                      style={{ backgroundColor: \"#18D735\" }}\r\n                    >\r\n                      <div className=\"chip-element-user\">\r\n                        <label>{v.value}</label>\r\n                        <FontAwesomeIcon\r\n                          className=\"icon-rubro-container\"\r\n                          icon={faTimesCircle}\r\n                          onClick={() => deleteChip(v, i)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null }\r\n            {/* </Row> */}\r\n              \r\n            {  /* Aqui ira el mapeo de los anuncios */ }   \r\n            { anunciosUsers.length > 0 ?  ( \r\n              anunciosUsers.map((v, i) => {\r\n                return (\r\n                  \r\n              <Card style = {{ marginTop: '30px', borderColor: 'green', borderWidth: '3px' }} className = \"shadow\">\r\n              <Card.Body>\r\n                <div className = \"titulo-container\">\r\n                <Card.Title style = {{ width : '60%' }}>{ v.titulo }</Card.Title>\r\n                {   renderBoton(v) }\r\n                </div>\r\n                <Card.Text style = {{ marginTop: '10px'}}>\r\n                  { v.descripcion }\r\n                </Card.Text>\r\n                \r\n                <div className=\"chips-home-user\">\r\n                \r\n                { v.area_Info.map(area => {\r\n                  return (\r\n                    <div\r\n                      className=\"chips-container-post-user\"\r\n                      style={{ backgroundColor: \"#18D735\" }}\r\n                    >\r\n                      <div className=\"chip-element-user\">\r\n                        <label>{area.nombre}</label>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                }) }\r\n                </div>\r\n\r\n                <div style = {{ display: 'flex', flexDirection: 'row',  marginTop: '25px' }}>\r\n                <label style = {{ marginRight: '5px' }}> \r\n                <strong>Categoria: </strong>\r\n                </label> \r\n                <label>{getRubroByAnuncio(v.rubro_id)} </label>\r\n                </div>\r\n                \r\n               \r\n                <label style = {{ marginTop: '15px', display: 'block' }} ><strong>Disponibilidad:</strong> { v.disponibilidad } </label>\r\n                <label style = {{ marginTop: '15px', display: 'block' }} ><strong>Publicado por:</strong> {v.username_freelancer}</label>\r\n                \r\n\r\n\r\n                {/* <Button variant=\"primary\">Go somewhere</Buttonn> */}\r\n              </Card.Body>\r\n            </Card>\r\n                )\r\n              })\r\n\r\n              ) : <h1 style = {{ textAlign: 'center', marginTop: '20%' }}>No hay anuncios disponibles</h1> }\r\n            \r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal\r\n        show={show}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Ingresa una descripcion de tu propuesta</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <FormControl as = \"textarea\" placeholder=\"Descripcion\" onChange = { (e) => setDescripcion(e.target.value)  }  />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\">\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick = { () => sendPropuesta() }>Enviar</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, rubros, anuncios, propuesta } = state;\r\n\r\n  return {\r\n    auth,\r\n    rubros,\r\n    anuncios,\r\n    propuesta\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetRubros: () => {\r\n      dispatch(getRubros());\r\n    },\r\n    onGetAnuncios: (query) => {\r\n      dispatch(getAnuncios(query));\r\n    },\r\n    onGetAreaById: (id) => {\r\n      dispatch(getAreaById(id))\r\n    },\r\n    onSendPropuesta: (data) => {\r\n      dispatch(sendPropuesta(data))\r\n    },\r\n    onCleanPropuesta: () => {\r\n      dispatch(cleanPropuesta())\r\n    },\r\n    onGetPropuestas: (id) => {\r\n      dispatch(getPropuestas(id))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeProfesional);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\register.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\principal.js",["257","258","259"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerProfesional.js",["260","261","262","263","264","265","266","267","268","269"],"/* React importaciones */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { storage } from \"../firebase/index\"\r\n\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUser,\r\n  faAddressBook,\r\n  faEye,\r\n  faEyeSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/PageStyles/registerProfesional.css\";\r\n\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\nimport { register } from \"../actions/authAction\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst RegisterProfesional = (props) => {\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"PROPS\", props)\r\n\r\n    if (props.error.id != null) {\r\n      console.log(\"ERROR\", props.error)\r\n      toast.error(props.error.msg.message)\r\n      props.clearErrors()\r\n    }\r\n\r\n  }, [props.error])\r\n\r\n  const [isShowPass1, setIsShowPass1] = useState(true);\r\n  const [isShowPass2, setIsShowPass2] = useState(true);\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [disableButton, setDisableButto] = useState(true);\r\n\r\n  const [selectedState, setSelectedState] = useState(\"Selecciona tu estado\");\r\n\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const [usernameError, setUsernameError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [stateError, setStateError] = useState(null);\r\n\r\n  const [pdfError, setPdfError] = useState(null);\r\n\r\n\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\r\n\r\n  let copyStates = [...states]\r\n\r\n  const [pdf, setPdf] = useState(\"\")\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    state: \"\",\r\n    isBussines: false,\r\n  });\r\n\r\n\r\n  const stateChange = (v) => {\r\n    setSelectedState(v);\r\n    setUserInfo({ ...userInfo, state: v });\r\n  };\r\n\r\n  const checkForm = () => {\r\n    if (userInfo.name === \"\") {\r\n      errorHandler(setNameError, \"Por favor, ingrese un nombre\");\r\n    }\r\n    else if (userInfo.username === \"\") {\r\n      errorHandler(setUsernameError, \"Por favor, ingrese un nombre de usuario\");\r\n    }\r\n    else if (userInfo.password === \"\") {\r\n      errorHandler(setPasswordError, \"Por favor, ingrese una contraseña\");\r\n    }\r\n    else if (userInfo.state === \"\") {\r\n      errorHandler(setStateError, \"Por favor, ingrese una fecha\");\r\n    }\r\n    else if (userInfo.password !== confirmPassword && userInfo.password.length > 0) {\r\n      errorHandler(setConfirmPasswordError, \"Contraseñas no coinciden\");\r\n    } else if (pdf === \"\") {\r\n      errorHandler(setPdfError, \"Por favor, ingrese un curriculum\")\r\n    } else if (pdf.type !== \"application/pdf\") {\r\n      errorHandler(setPdfError, \"Por favor, ingrese un curriculum en pdf\")\r\n    } else {\r\n      props.onRegister({ ...userInfo,  pdf_url: pdf  }, props.history)\r\n    }\r\n  };\r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const registrarse = () => {\r\n\r\n    checkForm();\r\n  };\r\n\r\n  const uplodadFile = async (files) => {\r\n\r\n    setPdf(files[0])\r\n\r\n  } \r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"card-continer-profesional\">\r\n        <Card className=\"card-profesional\">\r\n          <Card.Body>\r\n            <Card.Title style={{ textAlign: \"center\" }}>\r\n              Crear cuenta\r\n            </Card.Title>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faAddressBook} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, name: e.target.value })\r\n                }\r\n                placeholder=\"Nombre Completo\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={nameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{nameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, username: e.target.value })\r\n                }\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={usernameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{usernameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass1(!isShowPass1)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass1 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, password: e.target.value });\r\n                  setConfirmPassword(e.target.value == \"\" ? \"\" : null);\r\n                }}\r\n                placeholder=\"Contraseña\"\r\n                type={isShowPass1 ? \"password\" : null}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass2(!isShowPass2)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass2 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={userInfo.password.length == 0}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirmar Contraseña\"\r\n                type={isShowPass2 ? \"password\" : null}\r\n                value={confirmPassword}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={confirmPasswordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{confirmPasswordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedState}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese ciudad\"\r\n                onChange={ (e) => setStates(states.filter( (v) => v.includes(e.target.value) ) )  }\r\n              />\r\n                </div>\r\n                {states.map((value) => (\r\n                  <Dropdown.Item onClick={() => stateChange(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <div style = {{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\r\n            <input type = \"file\" ref = {inputRef} onChange = { (e) =>  uplodadFile(e.target.files) } style = {{ marginBottom: '10px', display: 'none' }} />\r\n\r\n            <Button onClick = {() => inputRef.current.click()} variant=\"success\">Subir curriculum</Button>\r\n\r\n            </div>\r\n              \r\n            <Transition\r\n              items={pdfError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{pdfError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n            \r\n            <label style={{ fontSize: \"14px\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => setDisableButto(!disableButton)}\r\n              />{\" \"}\r\n              Al crear tu cuenta aceptas los terminos de servicio y politica de\r\n              seguridad\r\n            </label>\r\n\r\n            <Button\r\n              disabled={disableButton}\r\n              style={{ width: \"100%\" }}\r\n              variant=\"success\"\r\n              onClick={() => registrarse()}\r\n            >\r\n              Registrarse\r\n            </Button>\r\n            <ToastContainer />\r\n\r\n\r\n            <hr />\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>\r\n                Ya estas registrado?{\" \"}\r\n              </label>{\" \"}\r\n              <Link to=\"/login\" style={{ marginLeft: \"3px\" }}>\r\n                Ingresa\r\n              </Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, error } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegister: (user, history) => {\r\n      dispatch(register(user, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( RegisterProfesional );\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerBusiness.js",["270","271","272","273","274","275","276","277","278","279"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUser,\r\n  faAddressBook,\r\n  faEye,\r\n  faEyeSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/PageStyles/registerProfesional.css\";\r\n\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\nimport { register } from \"../actions/authAction\";\r\nimport { getRubros } from \"../actions/rubroActions\"\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n\r\nconst RegisterBusiness = (props) => {\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"PROPS\", props)\r\n\r\n    if (props.error.id != null) {\r\n      console.log(\"ERROR\", props.error)\r\n      toast.error(props.error.msg.message)\r\n      props.clearErrors()\r\n    }\r\n\r\n  }, [props.error])\r\n\r\n  useEffect(() => {\r\n\r\n    props.onGetRubros()\r\n\r\n  }, [])\r\n\r\n  const [isShowPass1, setIsShowPass1] = useState(true);\r\n  const [isShowPass2, setIsShowPass2] = useState(true);\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    state: \"\",\r\n    isBussines: true\r\n  });\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [disableButton, setDisableButto] = useState(true);\r\n\r\n  const [selectedState, setSelectedState] = useState(\"Selecciona tu estado\");\r\n\r\n  const [selectedRubro, setSelectedRubro] = useState({\r\n    id: 0,\r\n    nombre: \"Selecciona un rubro\"\r\n  })\r\n\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const [usernameError, setUsernameError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [stateError, setStateError] = useState(null);\r\n\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\r\n\r\n  let copyStates = [...states]\r\n\r\n  const stateChange = (v) => {\r\n    setSelectedState(v);\r\n    setUserInfo({ ...userInfo, state: v });\r\n  };\r\n\r\n  const checkForm = () => {\r\n    if (userInfo.name === \"\") {\r\n      errorHandler(setNameError, \"Por favor, ingrese un nombre\");\r\n      console.log(\"User vacio\");\r\n    }\r\n    else if (userInfo.username === \"\") {\r\n      errorHandler(setUsernameError, \"Por favor, ingrese un nombre de usuario\");\r\n      console.log(\"Username vacio\");\r\n    }\r\n    else if (userInfo.password === \"\") {\r\n      errorHandler(setPasswordError, \"Por favor, ingrese una contraseña\");\r\n      console.log(\"Password vacio\");\r\n    }\r\n    else if (userInfo.state === \"\") {\r\n      errorHandler(setStateError, \"Por favor, ingrese una fecha\");\r\n    }\r\n    else if (userInfo.password !== confirmPassword && userInfo.password.length > 0) {\r\n      errorHandler(setConfirmPasswordError, \"Contraseñas no coinciden\");\r\n    } else {\r\n      props.onRegister(userInfo, props.history)\r\n    }\r\n  };\r\n\r\n  const rubros = () => {\r\n    if (props.rubros.rubros !== null ) {\r\n      return props.rubros.rubros.map((value) => (\r\n       <Dropdown.Item onClick={() => changeRubro(value)}>\r\n         {value.nombre}\r\n       </Dropdown.Item>\r\n     ))\r\n    }\r\n  }\r\n\r\n  const changeRubro = (rubro) => {\r\n\r\n    setSelectedRubro(rubro)\r\n    setUserInfo({ ...userInfo, rubro_id: rubro.rubro_id });\r\n\r\n  }\r\n  \r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const registrarse = () => {\r\n\r\n    checkForm();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"card-continer-profesional\">\r\n        <Card className=\"card-profesional\">\r\n          <Card.Body>\r\n            <Card.Title style={{ textAlign: \"center\" }}>\r\n              Crear cuenta empresarial\r\n            </Card.Title>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faAddressBook} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, name: e.target.value })\r\n                }\r\n                placeholder=\"Nombre Completo\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={nameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{nameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, username: e.target.value })\r\n                }\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={usernameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{usernameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass1(!isShowPass1)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass1 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, password: e.target.value });\r\n                  setConfirmPassword(e.target.value == \"\" ? \"\" : null);\r\n                }}\r\n                placeholder=\"Contraseña\"\r\n                type={isShowPass1 ? \"password\" : null}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass2(!isShowPass2)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass2 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={userInfo.password.length == 0}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirmar Contraseña\"\r\n                type={isShowPass2 ? \"password\" : null}\r\n                value={confirmPassword}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={confirmPasswordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{confirmPasswordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n            \r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedState}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese rubro\"\r\n                onChange={ (e) => setStates(states.filter( (v) => v.includes(e.target.value) ) )  }\r\n              />\r\n                </div>\r\n                {states.map((value) => (\r\n                  <Dropdown.Item onClick={() => stateChange(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            \r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedRubro.nombre}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese ciudad\"\r\n                onChange={ (e) => setStates(states.filter( (v) => v.includes(e.target.value) ) )  }\r\n              />\r\n                </div>\r\n                {rubros()}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <label style={{ fontSize: \"14px\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => setDisableButto(!disableButton)}\r\n              />{\" \"}\r\n              Al crear tu cuenta aceptas los terminos de servicio y politica de\r\n              seguridad\r\n            </label>\r\n\r\n            <Button\r\n              disabled={disableButton}\r\n              style={{ width: \"100%\" }}\r\n              variant=\"success\"\r\n              onClick={() => registrarse()}\r\n            >\r\n              Registrarse\r\n            </Button>\r\n            <ToastContainer />\r\n\r\n\r\n            <hr />\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>\r\n                Ya estas registrado?{\" \"}\r\n              </label>{\" \"}\r\n              <Link to=\"/login\" style={{ marginLeft: \"3px\" }}>\r\n                Ingresa\r\n              </Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, error, rubros } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n    rubros\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegister: (user, history) => {\r\n      dispatch(register(user, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n    onGetRubros : () => {\r\n      dispatch(getRubros())\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( RegisterBusiness );\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\rubroPage.js",["280","281","282","283","284","285","286","287","288","289"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Actions */\r\nimport { getRubros } from '../actions/rubroActions'\r\nimport {  getAreas } from '../actions/areasActions'\r\nimport { sendAreas } from '../actions/areasActions'\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/rubro.css\";\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Image,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faSearch,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* Otros */\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nconst Rubro = (props) => {\r\n\r\n  useEffect(() => {\r\n   props.onGetRubros()    \r\n  }, [])\r\n\r\n  // /* Peticion a la base de datos */\r\n  // const [rubros, setRubros] = useState([\r\n  //   \"Programacion y tecnologia\",\r\n  //   \"Diseño y multimedia\",\r\n  //   \"Redaccion y traduccion\",\r\n  //   \"Marketing digital y ventas\",\r\n  //   \"Soporte administrativo\",\r\n  //   \"Legal\",\r\n  //   \"Finanzas y Negocios\",\r\n  //   \"Ingenieria y Arquitectura\",\r\n  // ]);\r\n\r\n  const [rubroIndex, setRubroIndex] = useState(null);\r\n\r\n  const [rubroValue, setRubroValue] = useState(null)\r\n\r\n  const [experiencia, setExperiencia] = useState([\r\n    \"menos de 1 año\",\r\n    \"entre 1 y 3 años\",\r\n    \"4 a 6 años\",\r\n    \"mas de 7 años\",\r\n  ]);\r\n\r\n  const [experienciaSelected, setExperienciaSelected] = useState(\"Experiencia\")\r\n\r\n  const[experienciaTemp, setExperienciaTemp] = useState(\"\")\r\n\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [estadoChip, setEstadoChip] = useState(\"new\")\r\n\r\n  const [send, setSend] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n    if( chips.length > 0 && estadoChip === \"new\") {\r\n\r\n      let value = {\r\n        area: chips[chips.length-1].value,\r\n        experiencia: experienciaTemp,\r\n        id: chips[chips.length-1].id\r\n      }\r\n\r\n      setInfoUser(oldValues =>  ( { ...oldValues, info : [...oldValues.info, value] } ))\r\n\r\n    }\r\n\r\n  }, [chips])\r\n\r\n  // const[textInput, setTextInput] = useState(\"\")\r\n\r\n  const [disableButton, setDisableButton] = useState(false);\r\n\r\n  const [colors, setColors] = useState([\r\n    \"#1878D7\",\r\n    \"#D71843\",\r\n    \"#B418D7\",\r\n    \"#18D735\",\r\n  ]);\r\n\r\n  const [infoUser, setInfoUser] = useState({\r\n    rubro: \"\",\r\n    info: []\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    if(send) {\r\n\r\n      console.log(\"INFO USER\", infoUser)\r\n      props.onSendAreas(infoUser, props.auth, props.history)\r\n      \r\n    }\r\n\r\n  }, [infoUser])\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const rubroSelected = (rubro, index) => {\r\n\r\n    setChips([])\r\n\r\n    setRubroIndex(index);\r\n    setRubroValue(rubro)\r\n\r\n    /* Consulta al back */\r\n    props.onGetAreas(rubro.rubro_id)\r\n    \r\n\r\n  };\r\n\r\n  const addTag = () => {\r\n\r\n    setEstadoChip(\"new\")\r\n\r\n    setExperienciaTemp(experienciaSelected)\r\n\r\n    if (chips.length >= 3) {\r\n      setDisableButton(true);\r\n    }\r\n\r\n    let checkIfExist = chips.find((v) => v.value === value)\r\n\r\n    \r\n    let id_current = props.areas.find((v) => v.nombre === value )\r\n    \r\n\r\n    if (!checkIfExist) {\r\n      \r\n      setChips((oldArray) => [\r\n        ...oldArray,\r\n        { value, colors: colors[Math.floor(Math.random() * 4) + 0], id: id_current.area_id},\r\n      ]);\r\n  \r\n  \r\n      setValue(\"\")\r\n      setExperienciaSelected(\"Experiencia\")\r\n    }\r\n\r\n\r\n  };  \r\n\r\n  const onSaveUser =  () => {\r\n\r\n    setSend(true)\r\n\r\n    /* Llevar a Redux */\r\n    setInfoUser(oldValue =>  ( {...oldValue, rubro: rubroValue } ) )\r\n\r\n  }\r\n\r\n  const deleteChip = (i) => {\r\n\r\n    setEstadoChip(\"edit\")\r\n\r\n    // estadoChip = \"edit\"\r\n\r\n    setChips(chips.filter((v, index) => index !== i));\r\n\r\n    setInfoUser(oldValues => ({ info: oldValues.info.filter((v, index) =>  index !== i )  }) )\r\n\r\n\r\n\r\n    if (chips.length < 5) {\r\n      setDisableButton(false);\r\n    }\r\n  };\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : props.areas.filter(\r\n          (lang) => lang.nombre.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.nombre;\r\n\r\n  const renderSuggestion = (suggestion) => <div>{suggestion.nombre}</div>;\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Ingrese su area\",\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"rubro-page-style\">\r\n        <Card className=\"card-rubro\">\r\n          <Card.Body>\r\n            <h1>{props.auth !== null ? props.auth.nombre_completo : null }, listo para trabajar?</h1>\r\n            <label>Indicanos cuales son tus habilidades.</label>\r\n            <br />\r\n            <label>\r\n              Recuerda! Mientras mas informacion proporciones, mas facil te\r\n              encontraran\r\n            </label>\r\n            <label style={{ display: \"block\" }}>\r\n              En que rubro te especializas?\r\n            </label>\r\n            <Container>\r\n              <Row>\r\n                {/* Aqui iria un mapeo de forma dinamica, traido desde el back */}\r\n\r\n                {  props.rubros ? props.rubros.map((v, i) => {\r\n                  return (\r\n                    <Col style={{ marginTop: \"20px\" }} lg={3}>\r\n                      <Card\r\n                        style={{ padding: \"10px\" }}\r\n                        className={i === rubroIndex ? \"selected\" : null}\r\n                        onClick={() => rubroSelected(v, i)}\r\n                      >\r\n                        <div className=\"rubro-container\">\r\n                          <label className=\"label-rubro\">{v.nombre}</label>\r\n\r\n                          {i === rubroIndex ? (\r\n                            <div className=\"style-icon-rubro\">\r\n                              <FontAwesomeIcon icon={faCheckCircle} />\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  );\r\n                }) : null }\r\n              </Row>\r\n\r\n              {rubroIndex !== null ? (\r\n                <div>\r\n                  <h3 style={{ marginTop: \"30px\" }}>\r\n                    Cuales son las areas en las que te especializas\r\n                  </h3>\r\n\r\n                  <Row>\r\n                    <Col lg={7}>\r\n                      {/* <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                          placeholder=\"Buscar Area\"\r\n                          className=\"input-rubro\"\r\n                          onChange={(e) => onChangeText(e.target.value)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                      </InputGroup> */}\r\n\r\n                      <Autosuggest\r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={\r\n                          onSuggestionsFetchRequested\r\n                        }\r\n                        onSuggestionsClearRequested={\r\n                          onSuggestionsClearRequested\r\n                        }\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col lg={5}>\r\n                      <div className=\"right-rubro\">\r\n                        <Dropdown style={{ width: \"60%\" }}>\r\n                          <Dropdown.Toggle\r\n                            variant=\"success\"\r\n                            id=\"dropdown-basic\"\r\n                            style={{ width: \"100%\" }}\r\n                          >\r\n                            {experienciaSelected}\r\n                          </Dropdown.Toggle>\r\n\r\n                          <Dropdown.Menu>\r\n                            {experiencia.map((v) => {\r\n                              return <Dropdown.Item onClick = { () => setExperienciaSelected(v) } >{v}</Dropdown.Item>;\r\n                            })}\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Button\r\n                          className=\"button-rubro\"\r\n                          disabled={disableButton || value === \"\" || experienciaSelected === \"Experiencia\" }\r\n                          onClick={() => addTag()}\r\n                        >\r\n                          Agregar\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              ) : null}\r\n              \r\n\r\n              {chips.length > 0 ? (\r\n                <div className=\"chips-rubro\">\r\n                  {chips.map((v, i) => {\r\n                    return (\r\n                      <div\r\n                        className=\"chips-container\"\r\n                        style={{ backgroundColor: v.colors }}\r\n                      >\r\n                        <div className=\"chip-element-rubro\">\r\n                          <label>{v.value}</label>\r\n                          <FontAwesomeIcon\r\n                            className=\"icon-rubro-container\"\r\n                            icon={faTimesCircle}\r\n                            onClick={() => deleteChip(i)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"buttons-rubro\">\r\n                <Button\r\n                  onClick={() => props.history.push(\"/registro/postregister\")}\r\n                  className=\"button-rubro\"\r\n                >\r\n                  Anterior\r\n                </Button>\r\n                <Button\r\n                  disabled={chips.length <= 0 ? true : false}\r\n                  className=\"button-rubro\"\r\n                  onClick = {() => onSaveUser() }\r\n                >\r\n                  Siguiente\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { rubros, areas, auth } = state\r\n\r\n  return {\r\n    rubros: rubros.rubros,\r\n    areas: areas.areas,\r\n    auth: auth.user\r\n  }\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onGetRubros: () => {\r\n      dispatch(getRubros())\r\n    },\r\n    onGetAreas: (rubro_id) => {\r\n      dispatch(getAreas(rubro_id))\r\n    },\r\n    onSendAreas : (data, user, history) => {\r\n      dispatch(sendAreas(data, user, history))\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Rubro);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\postRegisterPage.js",["290","291"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/postRegister.css\";\r\n\r\n/* React Boostrap */\r\nimport { Card, Button, Container, Row, Col, Alert, Image } from \"react-bootstrap\";\r\n\r\n\r\nconst PostRegister = (props) => {\r\n\r\n    const [isDisable, setIsDisable] = useState(true)\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"content-container\">\r\n        <Card className = \"card-style-post\">\r\n          <Card.Body>\r\n            <Container>\r\n              <Row>\r\n                <Col lg={8} md = {12} className = \"left-content-post\" >\r\n                  <h3 style = {{ textAlign: 'center' }}>Hola {  props.auth !== null ? props.auth.nombre_completo : null  } bienvenido a (Nombre pagina)</h3>\r\n                  <label style = {{ marginTop: '10px' }}>\r\n                    Aqui te ayudaremos a crear tu perfil como freelancer para\r\n                    que consigas tu primer proyecto. Sigue estos pasos, y llena\r\n                    toda la informacion posible para que aumenten tus\r\n                    posibilidades de conseguir empleo.\r\n                    <br />\r\n                    <br />\r\n                    Ten en cuenta que un perfil con poca informacion es un\r\n                    perfil sin transparencia, por ende tus posibilidades de\r\n                    conseguir trabajo se veran afectadas de manera directa\r\n                  </label>\r\n                  <br />\r\n                  <br />\r\n                  <label className = \"checkbox-container\">\r\n                    <input\r\n                      name=\"isGoing\"\r\n                      type=\"checkbox\"\r\n                      style = {{ marginRight: '5px' }}\r\n                      className = \"checkbox-style\"\r\n                      onChange={ () => setIsDisable(!isDisable)   }\r\n                    />\r\n                    Entendido\r\n                  </label>\r\n                </Col>\r\n                <Col lg={4} md = {12} className = \"right-content-post\">\r\n                    <Image className = \"img-container-post\" src=\"https://consejos-de.com/wp-content/uploads/2018/05/working-3406785_640-compressor.jpg\" fluid />     \r\n                    <div className = \"boton-contenedor\">    \r\n                    <Button onClick = { () => props.history.push('/registro/rubro')  } style = {{ marginTop: '10%', borderRadius: '20px' }} variant=\"success\" disabled = {isDisable}>Comenzar</Button>\r\n                    </div>   \r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\r\n  const {  auth  } = state\r\n\r\n  return {\r\n    auth: auth.user\r\n  }\r\n\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n\r\n\r\n\r\n// }\r\n\r\nexport default connect(mapStateToProps, null) (PostRegister);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\dashboard.js",["292","293","294"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from '../components/navBar'\r\n\r\nimport { SET_RENDER } from '../actions/types'\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    useEffect (() => {\r\n      if(props.isFirstRender.firstRender) {\r\n        toast.success(\"Bienvenido \" + props.auth.user.nombre_completo )\r\n        props.onFistRenderChange()\r\n      }\r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n        <NavBar />\r\n      <h1>Dashboard</h1>\r\n      {  }\r\n      <ToastContainer type = \"logeado\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth, isFirstRender } = state\r\n\r\n    return {\r\n        auth,\r\n        isFirstRender\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onFistRenderChange: () => {\r\n      dispatch({type: SET_RENDER })\r\n    }\r\n\r\n  }\r\n   \r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Dashboard)\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\publicaciones.js",["295","296","297","298","299","300","301","302","303"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\proyectos.js",["304","305"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from '../components/navBar'\r\n\r\n\r\nconst Proyectos = (props) => {\r\n\r\n    useEffect (() => {\r\n     \r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n        <NavBar />\r\n        <h1>Proyectos</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth, isFirstRender } = state\r\n\r\n    return {\r\n        auth,\r\n        isFirstRender\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n\r\n//   return {\r\n//     onFistRenderChange: () => {\r\n//       dispatch({type: SET_RENDER })\r\n//     }\r\n\r\n//   }\r\n   \r\n\r\n// }\r\n\r\nexport default connect(mapStateToProps, null) (Proyectos)\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miPerfil.js",["306","307","308"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MiPerfil = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Mi Perfil</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth } = state\r\n\r\n    return {\r\n        auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (MiPerfil)\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\chatPage.js",["309","310","311","312","313","314"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miCuenta.js",["315","316","317"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Componentes */\r\nimport NavBar from \"../components/navBar\";\r\n\r\n/* React Boostrap */\r\nimport { Tab , Tabs } from \"react-bootstrap\";\r\n\r\n/* Pages */\r\nimport MiPerfil from '../Pages/miPerfil'\r\nimport Cuenta from '../Pages/cuenta'\r\n\r\nconst MiCuenta = (props) => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Tabs style = {{ justifyContent: 'center' }} defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"home\" title=\"Home\">\r\n          <Cuenta />\r\n        </Tab>\r\n        <Tab eventKey=\"profile\" title=\"Profile\">\r\n          <MiPerfil />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n\r\n  return {\r\n    auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiCuenta);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\authAction.js",["318"],"import axios from \"axios\";\r\n\r\n/* Tipos */\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADING,\r\n  NOT_USER,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  LOGOUT_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nimport { storage } from \"../firebase/index\";\r\n\r\n/*** Funcion que realizara el login en comunicacion con el reducer */\r\nexport const login = (username, password, history) => async (dispatch) => {\r\n  let body = JSON.stringify({ username, password });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    let res = await axios.post(\"/login\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"user\",\r\n      JSON.stringify({\r\n        ...res.data.user,\r\n      })\r\n    );\r\n\r\n    history.push(\"/home?b0=0&\");\r\n  } catch (err) {\r\n    if (err.response.data.message === \"Usuario no existente\") {\r\n      dispatch(returnErrors(err.response.data, err.response.status, NOT_USER));\r\n      dispatch({ type: AUTH_ERROR });\r\n    } else {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, LOGIN_FAIL)\r\n      );\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  }\r\n};\r\n\r\nexport const register = (user, history) => async (dispatch) => {\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  if (user.isBussines) {\r\n    let body = JSON.stringify(user);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      let res = await axios.post(\"/registro\", body, config);\r\n\r\n      localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          ...res.data.user,\r\n        })\r\n      );\r\n\r\n      dispatch({ type: USER_LOADED });\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      if (user.isBussines) {\r\n        history.push(\"/home?b0=0&\");\r\n      } else {\r\n        history.push(\"/registro/postregister\");\r\n      }\r\n    } catch (err) {\r\n      if (err.response.data.message === \"Usuario ya existente\") {\r\n        dispatch(\r\n          returnErrors(err.response.data, err.response.status, REGISTER_FAIL)\r\n        );\r\n        dispatch({ type: AUTH_ERROR });\r\n      }\r\n    }\r\n  } else {\r\n    const uploadTask = storage\r\n      .ref(`pdf/${user.username}${user.pdf_url.name}`)\r\n      .put(user.pdf_url);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"pdf\")\r\n          .child(user.username + user.pdf_url.name)\r\n          .getDownloadURL()\r\n          .then(async (url) => {\r\n            let body = {\r\n              ...user,\r\n              pdf_url: url,\r\n            };\r\n\r\n            body = JSON.stringify(body);\r\n            const config = {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            };\r\n\r\n            try {\r\n              let res = await axios.post(\"/registro\", body, config);\r\n\r\n              localStorage.setItem(\r\n                \"user\",\r\n                JSON.stringify({\r\n                  ...res.data.user,\r\n                })\r\n              );\r\n\r\n              dispatch({ type: USER_LOADED });\r\n\r\n              dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data,\r\n              });\r\n\r\n              if (user.isBussines) {\r\n                history.push(\"/home\");\r\n              } else {\r\n                history.push(\"/registro/postregister\");\r\n              }\r\n            } catch (err) {\r\n              if (err.response.data.message === \"Usuario ya existente\") {\r\n                dispatch(\r\n                  returnErrors(\r\n                    err.response.data,\r\n                    err.response.status,\r\n                    REGISTER_FAIL\r\n                  )\r\n                );\r\n                dispatch({ type: AUTH_ERROR });\r\n              }\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nexport const logOut = (history) => async (dispatch) => {\r\n  let resp = await axios.get(\"/logout\");\r\n\r\n  dispatch({ type: LOGOUT_SUCCESS });\r\n\r\n  localStorage.removeItem(\"user\");\r\n};\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\rubroActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anunciosActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\areasActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\cuenta.js",["319","320","321","322","323","324","325","326","327","328"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\n\r\nimport {  connect } from 'react-redux'\r\n\r\nimport { getUserInfoLogged, updateUrl  } from \"../actions/userInfoActions\"\r\n\r\nimport { Container, Col, Row, Button, Form, Dropdown, Card } from \"react-bootstrap\";\r\n\r\nimport { storage } from \"../firebase/index\"\r\n\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst MiCuenta = ({ onGetInfoUserLogged, auth, userInfo, onUpdateUrl }) => {\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n  const [pdf, setPdf] = useState('')\r\n\r\n  const [colors, setColors] = useState(['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', '#B3A2A2', \"#DB913D\", \"#DBD83D\", \"#6DDE39\", \"#7639DE\", \"#DE39AA\", \"#DE3952\"])\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n    const [selectedState, setSelectedState] = useState('')\r\n\r\n    const [data, setData] = useState({\r\n      labels: ['Propuestas enviadas', 'Propuestas leidas'],\r\n        datasets:[\r\n          {\r\n            label: ['Estadisticas de propuestas'],\r\n            data:[\r\n              0\r\n            ],\r\n            backgroundColor:[\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n            ]\r\n          }\r\n        ]\r\n    })\r\n\r\n    const [dataDognut, setDataDognut] = useState({\r\n      labels: [],\r\n        datasets:[\r\n          {\r\n            label:'Estadisticas de propuestas',\r\n            data:[\r\n              5,\r\n              1,\r\n              0\r\n            ],\r\n            backgroundColor:[\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n            ]\r\n          }\r\n        ]\r\n    })\r\n\r\n    const getColorsNotRepeated = (array) => {\r\n\r\n      let arreglo = array.map( _ =>  colors[Math.floor(Math.random() * 2) + 0 ] )\r\n\r\n     let checkTwo = arreglo.some(valor => {\r\n\r\n        return (arreglo.lastIndexOf(valor) - arreglo.indexOf(valor)) === 1 \r\n\r\n      })\r\n\r\n      if (!checkTwo) {\r\n        return arreglo\r\n      } else {\r\n        getColorsNotRepeated(userInfo.userLoggedInfo.finalData)\r\n      }\r\n\r\n    }\r\n  \r\n  useEffect(() => {\r\n\r\n    if (auth.user !== undefined) {\r\n      onGetInfoUserLogged()\r\n    }\r\n   \r\n  }, []  )\r\n\r\n  useEffect(() => {\r\n\r\n    if (userInfo.userLoggedInfo !== null) {\r\n\r\n      setSelectedState(userInfo.userLoggedInfo.result.estado)\r\n    \r\n\r\n      setData(oldData => ({\r\n        ...oldData,\r\n        datasets: [{\r\n          label: oldData.datasets[0].label,\r\n          data: [userInfo.userLoggedInfo.propuestasNumber, userInfo.userLoggedInfo.propuestasReadNumber, ...oldData.datasets[0].data, Math.floor(userInfo.userLoggedInfo.propuestasNumber * 1.5 )],\r\n          backgroundColor: oldData.datasets[0].backgroundColor\r\n        }]\r\n      }))\r\n\r\n      setDataDognut({\r\n        labels: [...userInfo.userLoggedInfo.finalData.map(value => value.nombre)],\r\n        datasets:[\r\n          {\r\n            label:'Areas pertenecientes a publicaciones',\r\n            data:[...userInfo.userLoggedInfo.finalData.map(value => value.veces)],\r\n            backgroundColor: userInfo.userLoggedInfo.finalData.map((_, i) => colors[i] )\r\n          }\r\n        ]\r\n      })\r\n\r\n    }\r\n\r\n\r\n  }, [userInfo.userLoggedInfo])\r\n\r\n  const uploadFile = (file) => {\r\n\r\n    setPdf(file[0])\r\n\r\n  }\r\n\r\n\r\n  const guardarPdf =  async () => {\r\n\r\n    const updateTask = storage.refFromURL(userInfo.userLoggedInfo.result.pdf_url)\r\n\r\n    const uploadTask = storage.ref(`pdf/${auth.username_freelancer}${pdf.name}`).put(pdf);\r\n\r\n    updateTask.delete().then(valor => {\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {},\r\n        error => {\r\n          console.log(error)\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"pdf\")\r\n            .child(auth.username_freelancer+pdf.name)\r\n            .getDownloadURL()\r\n            .then( async newUrl => {\r\n              onUpdateUrl(newUrl)\r\n            })\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderItems = () => {\r\n\r\n    if(isEditMode) {\r\n      return (\r\n        <div style = {{ marginTop: '20px' }}>\r\n          <input ref = {inputRef} id = \"files\" type = \"file\" onChange = { (e) => uploadFile(e.target.files)  } style = {{ display: 'none' }} /> \r\n          <Button onClick = { () => inputRef.current.click() }>Subir Curriculum</Button>\r\n          {  pdf === \"\" ? null : <Button onClick = { () => guardarPdf() } style = {{ marginLeft: '10px' }} >Guardar</Button>   }\r\n          <Button variant=\"danger\" onClick = { () => {setIsEditMode(false); setPdf(\"\")  } }  style = {{ marginLeft: '10px' }}  >Quitar modo editable</Button>\r\n        </div>\r\n      )\r\n    } else {\r\n      return(\r\n        <div style = {{ marginTop: '20px' }}>\r\n          <a href = { userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.pdf_url : null  } target=\"_blank\" ><Button variant=\"success\">Ver Curriculum</Button></a>\r\n          <Button variant=\"warning\" onClick = { () => setIsEditMode(true) } style = {{ marginLeft: '10px' }} >Editar</Button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n  }\r\n\r\n  const renderGraph = () => {\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row style = {{ marginRight: '0px', marginLeft: '0px' }}>\r\n        <Col lg = {7}>\r\n          <h1 style = {{ textAlign: 'center' }}>Informacion de cuenta</h1>\r\n\r\n          <div style = { { marginTop: '10%' } }>\r\n\r\n          <div style = {{ display: 'flex'  }}>\r\n\r\n          <div style = {{ flexGrow: '1' }}>\r\n          <Form.Label style = {{ textAlign: 'center', display: 'block' }}>Usuario</Form.Label>\r\n          <Form.Control value = {  userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.username_freelancer : null } disabled={true} />\r\n          </div>\r\n\r\n          <div style = {{ flexGrow: '0.5' }}></div>\r\n\r\n          <div style = {{ flexGrow:'1' }}>\r\n          <Form.Label style = {{  textAlign: 'center', display: 'block' }}>Nombre</Form.Label>\r\n          <Form.Control value = {  userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.username_nombre : null } disabled ={true} />\r\n          </div>\r\n\r\n          </div>\r\n\r\n          <div style = {{ display: 'flex' }}>\r\n\r\n            <div style = {{ flexGrow: '1' }}>\r\n\r\n          <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\", marginTop: '30px' }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n                disabled={true}\r\n              >\r\n                { userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.estado : null }\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                \r\n                {states.map((value) => (\r\n                  <Dropdown.Item onClick={() => setSelectedState(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            </div>\r\n\r\n            <div style = {{ flexGrow: '0.5' }}>\r\n\r\n            </div>\r\n\r\n          <div style = {{ flexGrow: '1' }}>\r\n            \r\n          <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\", marginTop: '30px' }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n                disabled={true}\r\n              >\r\n                { userInfo.userLoggedInfo !== null ? userInfo.userLoggedInfo.result.rubro : null }\r\n              </Dropdown.Toggle>\r\n\r\n            </Dropdown>\r\n\r\n          </div>\r\n\r\n          </div>\r\n\r\n          <div>\r\n\r\n            <Row>\r\n              { userInfo.userLoggedInfo !== null ?  userInfo.userLoggedInfo.result.area_info.map(valor => {\r\n\r\n                return (\r\n                  <Col lg = {6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                          <label style = { { display: 'block' } }>Area: {valor.nombre_area}</label>\r\n                          <label>Experiencia: {valor.experiencia} </label>\r\n                        </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n\r\n              })  : null  }\r\n            </Row>\r\n\r\n\r\n          </div>\r\n\r\n          { renderItems() }\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </Col>\r\n        <Col lg = {5} style = {{ padding: '0' }}>\r\n          <h1 style = {{ textAlign: 'center' }}>Estadisticas</h1>\r\n          \r\n          <Bar data={data} height={200}  />\r\n\r\n          <Doughnut data = {dataDognut}  />\r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, userInfo  } = state\r\n\r\n    return {\r\n      auth,\r\n      userInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onGetInfoUserLogged: () => {\r\n      dispatch(getUserInfoLogged())\r\n    },\r\n    onUpdateUrl: (newUrl) => {\r\n      dispatch(updateUrl(newUrl))\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (MiCuenta)","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anuncioUser.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\rightSide.js",["329"],"import React, { useState } from \"react\";\r\n\r\nimport { Image, Container } from \"react-bootstrap\";\r\n\r\nconst RightSide = ({ src, imgWidth, imgHeight }) => {\r\n\r\n    return (\r\n        <Container style = {{ padding: 0}} >\r\n            <Image style = {{ width: imgWidth, height: imgHeight }} src = {src} />\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default RightSide","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\navBar.js",["330","331","332","333"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\footer.js",["334","335","336"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\categories.js",["337","338"],"/* React importaciones  */\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\n\r\n/* React boostrap */\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n/* CSS */\r\nimport \"../styles/ComponentsStyles/Categories.css\";\r\n\r\nconst Categories = ({ content }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"card-style\" style = {{ height: '300px' }}>\r\n        <Card.Img variant=\"top\" src = {content.src} className = \"image\" />\r\n        <Card.Body>\r\n          <Card.Title style = {{ textAlign : 'center' }}>{content.titulo}</Card.Title>\r\n          <Card.Text style = {{ textAlign: 'center' }}>\r\n            { content.contenido  }\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\firebase\\index.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\propuestaActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\propuestaReducer.js",["339"],"import { SEND_PROPUESTA, CLEAN_PROPUESTA, GET_PROPUESTAS, GET_PROPUESTA_BY_ANUNCIO, UPDATED_PROPUESTA, CLEAN_UPDATED, CLEAN_PROPUESTA_BY_ANUNCIO } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: null,\r\n  propuestasByUser: null,\r\n  propuestaByAnuncio: null,\r\n  updated: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEND_PROPUESTA:\r\n      return {\r\n        ...state,\r\n        msg: action.payload\r\n      };\r\n    case CLEAN_PROPUESTA: \r\n      return {\r\n          ...state,\r\n          msg: null\r\n      }\r\n    case GET_PROPUESTAS:\r\n        return {\r\n            ...state,\r\n            propuestasByUser: action.payload\r\n        }\r\n    case GET_PROPUESTA_BY_ANUNCIO:\r\n        return {\r\n          ...state,\r\n          propuestaByAnuncio: action.payload\r\n        }\r\n    case UPDATED_PROPUESTA:\r\n        return {\r\n          ...state,\r\n          updated: true\r\n        }\r\n    case CLEAN_UPDATED:\r\n        return {\r\n          ...state,\r\n          updated: false\r\n        }\r\n    case CLEAN_PROPUESTA_BY_ANUNCIO:\r\n        return {\r\n          ...state,\r\n          propuestaByAnuncio: null\r\n        }\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\propuestaPage.js",["340","341","342","343","344"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\userInfoActions.js",["345"],"import axios from \"axios\";\r\n\r\nimport {  GET_USER_INFO, CLEAN_USER_INFO, GET_USERINFO_LOGGED  } from \"./types\";\r\n\r\nexport const getUserInfo = (id) => async (dispatch) => {\r\n\r\n\r\n    const resp = await axios.get(`/userinfo/${id}`)\r\n\r\n    dispatch({\r\n        type: GET_USER_INFO,\r\n        payload: resp.data.result\r\n    })\r\n}\r\n\r\nexport const cleanUserInfo = () => {\r\n\r\n    return {\r\n        type: CLEAN_USER_INFO\r\n    }\r\n\r\n}\r\n\r\nexport const getUserInfoLogged = () => async (dispatch) => {\r\n\r\n\r\n    const resp = await axios.get(`/getuserinfologged`)\r\n\r\n\r\n    dispatch({\r\n        type: GET_USERINFO_LOGGED,\r\n        payload: resp.data\r\n    })\r\n}\r\n\r\nexport const updateUrl = (newUrl) => async (dispatch) => {\r\n\r\n\r\n    const resp = await axios.put('/getuserinfologged', {  newUrl })\r\n\r\n}","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\userInfoReducer.js",["346"],"import { GET_USER_INFO, CLEAN_USER_INFO, GET_USERINFO_LOGGED } from '../actions/types'\r\n\r\nconst initialState = {\r\n    userInfo: null,\r\n    userLoggedInfo: null\r\n};\r\n  \r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_USER_INFO: \r\n        return {\r\n            ...state,\r\n            userInfo: action.payload\r\n        }\r\n        case CLEAN_USER_INFO:\r\n            return {\r\n                ...state,\r\n                userInfo: null\r\n            }\r\n        case GET_USERINFO_LOGGED:\r\n            return {\r\n                ...state,\r\n                userLoggedInfo: action.payload\r\n            }\r\n        default: \r\n            return state\r\n\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\userPropuestas.js",["347","348","349","350","351"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect, useParams } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from \"../components/navBar\";\r\n\r\nimport { getPropuestas } from \"../actions/propuestaActions\";\r\n\r\nimport { Button, ListGroup, Modal, Badge, Spinner } from \"react-bootstrap\";\r\n\r\nimport \"../styles/PageStyles/userPropuestas.css\";\r\n\r\nconst UserPropuestas = ({ auth, onGetPropuesta, propuestas }) => {\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    onGetPropuesta(auth.username_freelancer, setIsLoading);\r\n  }, []);\r\n\r\n  const renderList = () => {\r\n    if (propuestas !== null) {\r\n      if (!isLoading) {\r\n        if (propuestas.length > 0) {\r\n          return (\r\n            <ListGroup>\r\n              {propuestas.map((v) => (\r\n                <ListGroup.Item>\r\n                  <div className=\"propuestas-container\">\r\n                    <div>\r\n                      <h3>{v.descripcion}</h3>\r\n                      <label>Enviado a: {v.username_freelancer}</label>\r\n                    </div>\r\n                    <div className=\"bagde-container\">\r\n                      {v.isread ? (\r\n                        <Badge\r\n                          style={{ height: \"20px\", marginRight: \"50px\" }}\r\n                          variant=\"success\"\r\n                        >\r\n                          Leido\r\n                        </Badge>\r\n                      ) : (\r\n                        <Badge\r\n                          style={{ height: \"20px\", marginRight: \"50px\" }}\r\n                          variant=\"warning\"\r\n                        >\r\n                          No leido\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          );\r\n        } else {\r\n          return (\r\n          <div style = {{ height: '100%' }}>\r\n            <div style = {{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'  }}>\r\n              <h1>No tienes propuestas</h1>\r\n            </div>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contenido-page\" style={{ height: \"100vh\" }}>\r\n      <div style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }}>\r\n        <NavBar />\r\n\r\n        { isLoading ? (\r\n          <div style={{ height: \"100%\", backgroundColor: '#F0F1F1' }} >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <Spinner\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                style={{ width: \"5rem\", height: \"5rem\" }}\r\n              />\r\n              <h1>Cargando....</h1>\r\n            </div>\r\n          </div>\r\n\r\n        ) : null }\r\n        {renderList()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, propuesta } = state;\r\n\r\n  return {\r\n    auth: auth.user,\r\n    propuestas: propuesta.propuestasByUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetPropuesta: (id, callbackFunction) => {\r\n      dispatch(getPropuestas(id, callbackFunction));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPropuestas);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\chatActions.js",["352"],"import axios from \"axios\";\r\n\r\nimport { CREATE_CHAT, GET_CHAT_BY_ID, SEND_MESSAGE, GET_CHATS_BY_USER, PUSH_LAST_MESSAGE  } from \"./types\";\r\n\r\nexport const createChat = (data) => async (dispatch) => {\r\n\r\n   const res = await axios.post('/createChat', data)\r\n\r\n    dispatch({\r\n        type: CREATE_CHAT,\r\n        payload : res.data.chatId\r\n    })\r\n}\r\n\r\nexport const getChat = (id) => async (dispatch) => {\r\n\r\n    const res = await axios.get(`/chatback/${id}`)\r\n\r\n    const messages = await axios.get(`/messages/${id}`)\r\n\r\n    dispatch({\r\n        type: GET_CHAT_BY_ID,\r\n        payload: { ...res.data, ...messages.data  }\r\n    })\r\n}\r\n\r\nexport const pushMessage = message => {\r\n\r\n    console.log(\"MENSAJE\", message)\r\n\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        payload: message\r\n    }\r\n\r\n    // dispatch({\r\n    //     type: SEND_MESSAGE,\r\n    //     payload: \r\n    // })\r\n\r\n}\r\n\r\nexport const getChatsByUser = (id) => async (dispatch) => {\r\n   \r\n     \r\n    const resp = await axios.get(`/chatuser`)\r\n\r\n    console.log(\"RESP CHAT INFO\", resp.data)\r\n\r\n    dispatch({\r\n        type: GET_CHATS_BY_USER,\r\n        payload: resp.data.mensajeInfo\r\n    })\r\n\r\n}\r\n\r\nexport const pushLastMessage = (chat_id) => (dispatch, getState) => {\r\n\r\n\r\n    let index = getState().chat.chatsUser.findIndex(valor => valor.chat_id == chat_id)\r\n\r\n    let value = { lastMessage: getState().chat.messages[ getState().chat.messages.length - 1 ] }\r\n\r\n    delete value.chat_id\r\n\r\n    dispatch({\r\n        type: PUSH_LAST_MESSAGE,\r\n        payload: { index , value  }\r\n    })\r\n}\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\chatsReducer.js",["353"],{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":1,"column":8,"nodeType":"360","messageId":"361","endLine":1,"endColumn":12},{"ruleId":"358","severity":1,"message":"362","line":4,"column":32,"nodeType":"360","messageId":"361","endLine":4,"endColumn":40},{"ruleId":"363","severity":1,"message":"364","line":8,"column":1,"nodeType":"365","endLine":26,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":9,"column":1,"nodeType":"365","endLine":50,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":9,"column":1,"nodeType":"365","endLine":34,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":8,"column":1,"nodeType":"365","endLine":22,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":7,"column":1,"nodeType":"365","endLine":21,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":9,"column":1,"nodeType":"365","endLine":26,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":9,"column":1,"nodeType":"365","endLine":48,"endColumn":2},{"ruleId":"358","severity":1,"message":"366","line":28,"column":10,"nodeType":"360","messageId":"361","endLine":28,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":38,"column":20,"nodeType":"369","messageId":"370","endLine":38,"endColumn":22},{"ruleId":"358","severity":1,"message":"371","line":46,"column":9,"nodeType":"360","messageId":"361","endLine":46,"endColumn":14},{"ruleId":"372","severity":1,"message":"373","line":53,"column":6,"nodeType":"374","endLine":53,"endColumn":8,"suggestions":"375"},{"ruleId":"372","severity":1,"message":"376","line":60,"column":6,"nodeType":"374","endLine":60,"endColumn":8,"suggestions":"377"},{"ruleId":"367","severity":1,"message":"368","line":73,"column":17,"nodeType":"369","messageId":"370","endLine":73,"endColumn":19},{"ruleId":"367","severity":1,"message":"368","line":73,"column":35,"nodeType":"369","messageId":"370","endLine":73,"endColumn":37},{"ruleId":"367","severity":1,"message":"368","line":77,"column":17,"nodeType":"369","messageId":"370","endLine":77,"endColumn":19},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"379","line":7,"column":3,"nodeType":"360","messageId":"361","endLine":7,"endColumn":8},{"ruleId":"358","severity":1,"message":"380","line":36,"column":3,"nodeType":"360","messageId":"361","endLine":36,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":80,"column":26,"nodeType":"369","messageId":"370","endLine":80,"endColumn":28},{"ruleId":"372","severity":1,"message":"381","line":84,"column":6,"nodeType":"374","endLine":84,"endColumn":8,"suggestions":"382"},{"ruleId":"372","severity":1,"message":"383","line":97,"column":6,"nodeType":"374","endLine":97,"endColumn":8,"suggestions":"384"},{"ruleId":"372","severity":1,"message":"385","line":130,"column":6,"nodeType":"374","endLine":130,"endColumn":25,"suggestions":"386"},{"ruleId":"387","severity":1,"message":"388","line":138,"column":25,"nodeType":"389","messageId":"390","endLine":138,"endColumn":27},{"ruleId":"372","severity":1,"message":"391","line":158,"column":6,"nodeType":"374","endLine":158,"endColumn":13,"suggestions":"392"},{"ruleId":"372","severity":1,"message":"393","line":168,"column":6,"nodeType":"374","endLine":168,"endColumn":21,"suggestions":"394"},{"ruleId":"367","severity":1,"message":"368","line":174,"column":71,"nodeType":"369","messageId":"370","endLine":174,"endColumn":73},{"ruleId":"387","severity":1,"message":"388","line":213,"column":25,"nodeType":"389","messageId":"390","endLine":213,"endColumn":27},{"ruleId":"395","severity":1,"message":"396","line":331,"column":15,"nodeType":"397","endLine":331,"endColumn":48},{"ruleId":"358","severity":1,"message":"378","line":2,"column":27,"nodeType":"360","messageId":"361","endLine":2,"endColumn":42},{"ruleId":"358","severity":1,"message":"398","line":33,"column":10,"nodeType":"360","messageId":"361","endLine":33,"endColumn":21},{"ruleId":"358","severity":1,"message":"399","line":35,"column":22,"nodeType":"360","messageId":"361","endLine":35,"endColumn":35},{"ruleId":"358","severity":1,"message":"400","line":6,"column":10,"nodeType":"360","messageId":"361","endLine":6,"endColumn":17},{"ruleId":"358","severity":1,"message":"401","line":13,"column":3,"nodeType":"360","messageId":"361","endLine":13,"endColumn":12},{"ruleId":"358","severity":1,"message":"402","line":14,"column":3,"nodeType":"360","messageId":"361","endLine":14,"endColumn":6},{"ruleId":"358","severity":1,"message":"403","line":15,"column":3,"nodeType":"360","messageId":"361","endLine":15,"endColumn":6},{"ruleId":"358","severity":1,"message":"366","line":35,"column":10,"nodeType":"360","messageId":"361","endLine":35,"endColumn":16},{"ruleId":"372","severity":1,"message":"404","line":53,"column":6,"nodeType":"374","endLine":53,"endColumn":19,"suggestions":"405"},{"ruleId":"358","severity":1,"message":"406","line":96,"column":10,"nodeType":"360","messageId":"361","endLine":96,"endColumn":20},{"ruleId":"358","severity":1,"message":"407","line":103,"column":7,"nodeType":"360","messageId":"361","endLine":103,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":249,"column":53,"nodeType":"369","messageId":"370","endLine":249,"endColumn":55},{"ruleId":"367","severity":1,"message":"368","line":284,"column":52,"nodeType":"369","messageId":"370","endLine":284,"endColumn":54},{"ruleId":"358","severity":1,"message":"401","line":11,"column":3,"nodeType":"360","messageId":"361","endLine":11,"endColumn":12},{"ruleId":"358","severity":1,"message":"402","line":12,"column":3,"nodeType":"360","messageId":"361","endLine":12,"endColumn":6},{"ruleId":"358","severity":1,"message":"403","line":13,"column":3,"nodeType":"360","messageId":"361","endLine":13,"endColumn":6},{"ruleId":"358","severity":1,"message":"366","line":33,"column":10,"nodeType":"360","messageId":"361","endLine":33,"endColumn":16},{"ruleId":"372","severity":1,"message":"404","line":51,"column":6,"nodeType":"374","endLine":51,"endColumn":19,"suggestions":"408"},{"ruleId":"372","severity":1,"message":"409","line":57,"column":6,"nodeType":"374","endLine":57,"endColumn":8,"suggestions":"410"},{"ruleId":"358","severity":1,"message":"406","line":113,"column":10,"nodeType":"360","messageId":"361","endLine":113,"endColumn":20},{"ruleId":"358","severity":1,"message":"407","line":117,"column":7,"nodeType":"360","messageId":"361","endLine":117,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":263,"column":53,"nodeType":"369","messageId":"370","endLine":263,"endColumn":55},{"ruleId":"367","severity":1,"message":"368","line":298,"column":52,"nodeType":"369","messageId":"370","endLine":298,"endColumn":54},{"ruleId":"358","severity":1,"message":"411","line":21,"column":3,"nodeType":"360","messageId":"361","endLine":21,"endColumn":8},{"ruleId":"358","severity":1,"message":"412","line":22,"column":3,"nodeType":"360","messageId":"361","endLine":22,"endColumn":8},{"ruleId":"358","severity":1,"message":"413","line":23,"column":3,"nodeType":"360","messageId":"361","endLine":23,"endColumn":13},{"ruleId":"358","severity":1,"message":"414","line":24,"column":3,"nodeType":"360","messageId":"361","endLine":24,"endColumn":14},{"ruleId":"358","severity":1,"message":"415","line":32,"column":3,"nodeType":"360","messageId":"361","endLine":32,"endColumn":11},{"ruleId":"372","severity":1,"message":"409","line":43,"column":6,"nodeType":"374","endLine":43,"endColumn":8,"suggestions":"416"},{"ruleId":"358","severity":1,"message":"417","line":61,"column":23,"nodeType":"360","messageId":"361","endLine":61,"endColumn":37},{"ruleId":"372","severity":1,"message":"418","line":92,"column":6,"nodeType":"374","endLine":92,"endColumn":13,"suggestions":"419"},{"ruleId":"358","severity":1,"message":"420","line":98,"column":18,"nodeType":"360","messageId":"361","endLine":98,"endColumn":27},{"ruleId":"372","severity":1,"message":"421","line":119,"column":6,"nodeType":"374","endLine":119,"endColumn":16,"suggestions":"422"},{"ruleId":"358","severity":1,"message":"423","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":26},{"ruleId":"358","severity":1,"message":"411","line":11,"column":45,"nodeType":"360","messageId":"361","endLine":11,"endColumn":50},{"ruleId":"358","severity":1,"message":"424","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"372","severity":1,"message":"409","line":19,"column":8,"nodeType":"374","endLine":19,"endColumn":10,"suggestions":"425"},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"412","line":42,"column":3,"nodeType":"360","messageId":"361","endLine":42,"endColumn":8},{"ruleId":"367","severity":1,"message":"368","line":123,"column":38,"nodeType":"369","messageId":"370","endLine":123,"endColumn":40},{"ruleId":"372","severity":1,"message":"409","line":128,"column":6,"nodeType":"374","endLine":128,"endColumn":8,"suggestions":"426"},{"ruleId":"372","severity":1,"message":"409","line":142,"column":6,"nodeType":"374","endLine":142,"endColumn":30,"suggestions":"427"},{"ruleId":"372","severity":1,"message":"409","line":150,"column":6,"nodeType":"374","endLine":150,"endColumn":21,"suggestions":"428"},{"ruleId":"372","severity":1,"message":"409","line":161,"column":6,"nodeType":"374","endLine":161,"endColumn":16,"suggestions":"429"},{"ruleId":"367","severity":1,"message":"368","line":372,"column":32,"nodeType":"369","messageId":"370","endLine":372,"endColumn":34},{"ruleId":"395","severity":1,"message":"396","line":482,"column":17,"nodeType":"397","endLine":482,"endColumn":51},{"ruleId":"358","severity":1,"message":"424","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"424","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"358","severity":1,"message":"423","line":2,"column":27,"nodeType":"360","messageId":"361","endLine":2,"endColumn":36},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"378","line":5,"column":3,"nodeType":"360","messageId":"361","endLine":5,"endColumn":18},{"ruleId":"358","severity":1,"message":"430","line":6,"column":3,"nodeType":"360","messageId":"361","endLine":6,"endColumn":12},{"ruleId":"358","severity":1,"message":"401","line":14,"column":24,"nodeType":"360","messageId":"361","endLine":14,"endColumn":33},{"ruleId":"372","severity":1,"message":"409","line":54,"column":6,"nodeType":"374","endLine":54,"endColumn":8,"suggestions":"431"},{"ruleId":"372","severity":1,"message":"409","line":73,"column":6,"nodeType":"374","endLine":73,"endColumn":29,"suggestions":"432"},{"ruleId":"372","severity":1,"message":"433","line":87,"column":6,"nodeType":"374","endLine":87,"endColumn":27,"suggestions":"434"},{"ruleId":"358","severity":1,"message":"424","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"358","severity":1,"message":"423","line":2,"column":27,"nodeType":"360","messageId":"361","endLine":2,"endColumn":36},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"435","line":172,"column":7,"nodeType":"360","messageId":"361","endLine":172,"endColumn":11},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"401","line":8,"column":10,"nodeType":"360","messageId":"361","endLine":8,"endColumn":19},{"ruleId":"358","severity":1,"message":"420","line":23,"column":18,"nodeType":"360","messageId":"361","endLine":23,"endColumn":27},{"ruleId":"358","severity":1,"message":"436","line":25,"column":18,"nodeType":"360","messageId":"361","endLine":25,"endColumn":27},{"ruleId":"358","severity":1,"message":"437","line":51,"column":12,"nodeType":"360","messageId":"361","endLine":51,"endColumn":25},{"ruleId":"358","severity":1,"message":"438","line":100,"column":9,"nodeType":"360","messageId":"361","endLine":100,"endColumn":29},{"ruleId":"372","severity":1,"message":"439","line":111,"column":6,"nodeType":"374","endLine":111,"endColumn":8,"suggestions":"440"},{"ruleId":"372","severity":1,"message":"441","line":143,"column":6,"nodeType":"374","endLine":143,"endColumn":31,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":192,"column":107,"nodeType":"397","endLine":192,"endColumn":122},{"ruleId":"358","severity":1,"message":"445","line":200,"column":9,"nodeType":"360","messageId":"361","endLine":200,"endColumn":20},{"ruleId":"358","severity":1,"message":"424","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":25},{"ruleId":"358","severity":1,"message":"424","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"358","severity":1,"message":"423","line":2,"column":27,"nodeType":"360","messageId":"361","endLine":2,"endColumn":36},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"446","line":10,"column":3,"nodeType":"360","messageId":"361","endLine":10,"endColumn":10},{"ruleId":"358","severity":1,"message":"424","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"358","severity":1,"message":"423","line":2,"column":27,"nodeType":"360","messageId":"361","endLine":2,"endColumn":36},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"424","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"358","severity":1,"message":"378","line":2,"column":27,"nodeType":"360","messageId":"361","endLine":2,"endColumn":42},{"ruleId":"363","severity":1,"message":"364","line":10,"column":1,"nodeType":"365","endLine":50,"endColumn":2},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"372","severity":1,"message":"447","line":52,"column":6,"nodeType":"374","endLine":52,"endColumn":8,"suggestions":"448"},{"ruleId":"372","severity":1,"message":"449","line":65,"column":6,"nodeType":"374","endLine":65,"endColumn":20,"suggestions":"450"},{"ruleId":"372","severity":1,"message":"451","line":71,"column":6,"nodeType":"374","endLine":71,"endColumn":8,"suggestions":"452"},{"ruleId":"372","severity":1,"message":"453","line":80,"column":6,"nodeType":"374","endLine":80,"endColumn":17,"suggestions":"454"},{"ruleId":"358","severity":1,"message":"435","line":39,"column":11,"nodeType":"360","messageId":"361","endLine":39,"endColumn":15},{"ruleId":"363","severity":1,"message":"364","line":9,"column":1,"nodeType":"365","endLine":34,"endColumn":2},{"ruleId":"358","severity":1,"message":"378","line":2,"column":38,"nodeType":"360","messageId":"361","endLine":2,"endColumn":53},{"ruleId":"358","severity":1,"message":"430","line":2,"column":55,"nodeType":"360","messageId":"361","endLine":2,"endColumn":64},{"ruleId":"358","severity":1,"message":"455","line":10,"column":10,"nodeType":"360","messageId":"361","endLine":10,"endColumn":16},{"ruleId":"358","severity":1,"message":"456","line":10,"column":29,"nodeType":"360","messageId":"361","endLine":10,"endColumn":34},{"ruleId":"372","severity":1,"message":"457","line":20,"column":6,"nodeType":"374","endLine":20,"endColumn":8,"suggestions":"458"},{"ruleId":"367","severity":1,"message":"368","line":60,"column":76,"nodeType":"369","messageId":"370","endLine":60,"endColumn":78},{"ruleId":"363","severity":1,"message":"364","line":10,"column":1,"nodeType":"365","endLine":57,"endColumn":2},"no-native-reassign",["459"],"no-negated-in-lhs",["460"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Spring' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'items' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'auth.isAuthenticated' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["461"],"React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array. If 'clearErrors' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["462"],"'useLayoutEffect' is defined but never used.","'Toast' is defined but never used.","'faCheckCircle' is defined but never used.","React Hook useEffect has a missing dependency: 'history.action'. Either include it or remove the dependency array.",["463"],"React Hook useEffect has missing dependencies: 'auth.user.username_freelancer', 'onGetAnuncios', 'onGetPropuestas', 'onGetRubros', and 'rubros.rubros'. Either include them or remove the dependency array. If 'onGetAnuncios' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["464"],"React Hook useEffect has a missing dependency: 'auth.user.username_freelancer'. Either include it or remove the dependency array.",["465"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'history' and 'onGetAnuncios'. Either include them or remove the dependency array. If 'onGetAnuncios' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["466"],"React Hook useEffect has missing dependencies: 'auth.user.username_freelancer', 'onCleanPropuesta', and 'onGetPropuestas'. Either include them or remove the dependency array. If 'onCleanPropuesta' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["467"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'searchValue' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'storage' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["468"],"'stateError' is assigned a value but never used.","'copyStates' is assigned a value but never used.",["469"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["470"],"'Alert' is defined but never used.","'Image' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'faSearch' is defined but never used.",["471"],"'setExperiencia' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'estadoChip' and 'experienciaTemp'. Either include them or remove the dependency array.",["472"],"'setColors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'send'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["473"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["474"],["475"],["476"],["477"],["478"],"'useParams' is defined but never used.",["479"],["480"],"React Hook useEffect has a missing dependency: 'props.auth.user.username_freelancer'. Either include it or remove the dependency array. If 'setOtherUser' needs the current value of 'props.auth.user.username_freelancer', you can also switch to useReducer instead of useState and read 'props.auth.user.username_freelancer' in the reducer.",["481"],"'resp' is assigned a value but never used.","'setStates' is assigned a value but never used.","'selectedState' is assigned a value but never used.","'getColorsNotRepeated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.user' and 'onGetInfoUserLogged'. Either include them or remove the dependency array. If 'onGetInfoUserLogged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["482"],"React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDataDognut' needs the current value of 'colors'.",["483"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'renderGraph' is assigned a value but never used.","'Overlay' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'onGetByAnuncio'. Either include them or remove the dependency array. If 'onGetByAnuncio' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["484"],"React Hook useEffect has missing dependencies: 'onCleanUpdate' and 'onGetUserInfo'. Either include them or remove the dependency array. If 'onGetUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["485"],"React Hook useEffect has a missing dependency: 'onCleanPropuestaByAnuncio'. Either include it or remove the dependency array. If 'onCleanPropuestaByAnuncio' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["486"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["487"],"'Button' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.username_freelancer' and 'onGetPropuesta'. Either include them or remove the dependency array. If 'onGetPropuesta' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["488"],"no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"503","fix":"505"},{"desc":"506","fix":"507"},{"desc":"506","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"506","fix":"513"},{"desc":"506","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"506","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},"Update the dependencies array to be: [auth.isAuthenticated, history]",{"range":"540","text":"541"},"Update the dependencies array to be: [clearErrors]",{"range":"542","text":"543"},"Update the dependencies array to be: [history.action]",{"range":"544","text":"545"},"Update the dependencies array to be: [auth.user.username_freelancer, onGetAnuncios, onGetPropuestas, onGetRubros, rubros.rubros]",{"range":"546","text":"547"},"Update the dependencies array to be: [anuncios.anuncios, auth.user.username_freelancer]",{"range":"548","text":"549"},"Update the dependencies array to be: [chips, history, onGetAnuncios]",{"range":"550","text":"551"},"Update the dependencies array to be: [auth.user.username_freelancer, onCleanPropuesta, onGetPropuestas, propuesta.msg]",{"range":"552","text":"553"},"Update the dependencies array to be: [props, props.error]",{"range":"554","text":"555"},{"range":"556","text":"555"},"Update the dependencies array to be: [props]",{"range":"557","text":"558"},{"range":"559","text":"558"},"Update the dependencies array to be: [chips, estadoChip, experienciaTemp]",{"range":"560","text":"561"},"Update the dependencies array to be: [infoUser, props, send]",{"range":"562","text":"563"},{"range":"564","text":"558"},{"range":"565","text":"558"},"Update the dependencies array to be: [props, props.useranuncios.msg]",{"range":"566","text":"567"},"Update the dependencies array to be: [props, selectedRubro]",{"range":"568","text":"569"},"Update the dependencies array to be: [postInfo, props]",{"range":"570","text":"571"},{"range":"572","text":"558"},"Update the dependencies array to be: [props, props.match.params.id]",{"range":"573","text":"574"},"Update the dependencies array to be: [props.auth.user.username_freelancer, props.chat.chatInfo]",{"range":"575","text":"576"},"Update the dependencies array to be: [auth.user, onGetInfoUserLogged]",{"range":"577","text":"578"},"Update the dependencies array to be: [colors, userInfo.userLoggedInfo]",{"range":"579","text":"580"},"Update the dependencies array to be: [id, onGetByAnuncio]",{"range":"581","text":"582"},"Update the dependencies array to be: [isUpdated, onCleanUpdate, onGetUserInfo, v]",{"range":"583","text":"584"},"Update the dependencies array to be: [onCleanPropuestaByAnuncio]",{"range":"585","text":"586"},"Update the dependencies array to be: [chat, history, msg]",{"range":"587","text":"588"},"Update the dependencies array to be: [auth.username_freelancer, onGetPropuesta]",{"range":"589","text":"590"},[1464,1466],"[auth.isAuthenticated, history]",[1581,1583],"[clearErrors]",[1909,1911],"[history.action]",[2238,2240],"[auth.user.username_freelancer, onGetAnuncios, onGetPropuestas, onGetRubros, rubros.rubros]",[3053,3072],"[anuncios.anuncios, auth.user.username_freelancer]",[3500,3507],"[chips, history, onGetAnuncios]",[3699,3714],"[auth.user.username_freelancer, onCleanPropuesta, onGetPropuestas, propuesta.msg]",[1118,1131],"[props, props.error]",[1080,1093],[1153,1155],"[props]",[868,870],[2124,2131],"[chips, estadoChip, experienciaTemp]",[2621,2631],"[infoUser, props, send]",[522,524],[2937,2939],[3347,3371],"[props, props.useranuncios.msg]",[3549,3564],"[props, selectedRubro]",[3695,3705],"[postInfo, props]",[1203,1205],[1741,1764],"[props, props.match.params.id]",[2163,2184],"[props.auth.user.username_freelancer, props.chat.chatInfo]",[2644,2646],"[auth.user, onGetInfoUserLogged]",[3622,3647],"[colors, userInfo.userLoggedInfo]",[1382,1384],"[id, onGetByAnuncio]",[1603,1617],"[isUpdated, onCleanUpdate, onGetUserInfo, v]",[1716,1718],"[onCleanPropuestaByAnuncio]",[1871,1882],"[chat, history, msg]",[606,608],"[auth.username_freelancer, onGetPropuesta]"]