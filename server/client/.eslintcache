[{"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\index.js":"1","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\App.js":"3","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rootReducer.js":"4","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\areaReducer.js":"5","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\authReducer.js":"6","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosReducer.js":"7","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rubroReducer.js":"8","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\isRenderReducer.js":"9","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\errorReducer.js":"10","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosUser.js":"11","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\types.js":"12","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouterRegister.js":"13","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouter.js":"14","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\isLoggedIn.js":"15","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\login.js":"16","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\homeProfesional.js":"17","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\register.js":"18","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\principal.js":"19","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerProfesional.js":"20","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerBusiness.js":"21","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\rubroPage.js":"22","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\postRegisterPage.js":"23","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\dashboard.js":"24","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\publicaciones.js":"25","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\proyectos.js":"26","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miPerfil.js":"27","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\chatPage.js":"28","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miCuenta.js":"29","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\authAction.js":"30","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\rubroActions.js":"31","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anunciosActions.js":"32","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\areasActions.js":"33","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\cuenta.js":"34","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anuncioUser.js":"35","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\rightSide.js":"36","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\navBar.js":"37","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\footer.js":"38","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\categories.js":"39","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\errorActions.js":"40","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\firebase\\index.js":"41","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\propuestaActions.js":"42","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\propuestaReducer.js":"43","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\propuestaPage.js":"44","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\userInfoActions.js":"45","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\userInfoReducer.js":"46"},{"size":1032,"mtime":1607394888910,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1607393063424,"results":"49","hashOfConfig":"48"},{"size":2558,"mtime":1607992178480,"results":"50","hashOfConfig":"48"},{"size":729,"mtime":1608002578176,"results":"51","hashOfConfig":"48"},{"size":493,"mtime":1605672602035,"results":"52","hashOfConfig":"48"},{"size":1456,"mtime":1605672602036,"results":"53","hashOfConfig":"48"},{"size":548,"mtime":1605975396640,"results":"54","hashOfConfig":"48"},{"size":341,"mtime":1605672602038,"results":"55","hashOfConfig":"48"},{"size":381,"mtime":1605672602036,"results":"56","hashOfConfig":"48"},{"size":529,"mtime":1604171768318,"results":"57","hashOfConfig":"48"},{"size":1357,"mtime":1607915121159,"results":"58","hashOfConfig":"48"},{"size":1577,"mtime":1607999722405,"results":"59","hashOfConfig":"48"},{"size":651,"mtime":1605672601977,"results":"60","hashOfConfig":"48"},{"size":624,"mtime":1604728197130,"results":"61","hashOfConfig":"48"},{"size":639,"mtime":1605672601977,"results":"62","hashOfConfig":"48"},{"size":7355,"mtime":1607396055038,"results":"63","hashOfConfig":"48"},{"size":14487,"mtime":1607998433502,"results":"64","hashOfConfig":"48"},{"size":1854,"mtime":1604982827178,"results":"65","hashOfConfig":"48"},{"size":8696,"mtime":1607391092183,"results":"66","hashOfConfig":"48"},{"size":11965,"mtime":1607897602489,"results":"67","hashOfConfig":"48"},{"size":12580,"mtime":1607746035595,"results":"68","hashOfConfig":"48"},{"size":11406,"mtime":1605672602011,"results":"69","hashOfConfig":"48"},{"size":2986,"mtime":1605672602007,"results":"70","hashOfConfig":"48"},{"size":1053,"mtime":1605672601985,"results":"71","hashOfConfig":"48"},{"size":13145,"mtime":1607992467739,"results":"72","hashOfConfig":"48"},{"size":747,"mtime":1605828851464,"results":"73","hashOfConfig":"48"},{"size":474,"mtime":1605672601997,"results":"74","hashOfConfig":"48"},{"size":1638,"mtime":1607390055910,"results":"75","hashOfConfig":"48"},{"size":976,"mtime":1605672601996,"results":"76","hashOfConfig":"48"},{"size":2427,"mtime":1607796667980,"results":"77","hashOfConfig":"48"},{"size":295,"mtime":1605672601969,"results":"78","hashOfConfig":"48"},{"size":333,"mtime":1607916476321,"results":"79","hashOfConfig":"48"},{"size":701,"mtime":1607468958953,"results":"80","hashOfConfig":"48"},{"size":270,"mtime":1605672601983,"results":"81","hashOfConfig":"48"},{"size":1596,"mtime":1607823497845,"results":"82","hashOfConfig":"48"},{"size":360,"mtime":1604882945244,"results":"83","hashOfConfig":"48"},{"size":4448,"mtime":1607877683388,"results":"84","hashOfConfig":"48"},{"size":2669,"mtime":1604882945230,"results":"85","hashOfConfig":"48"},{"size":832,"mtime":1604797288968,"results":"86","hashOfConfig":"48"},{"size":343,"mtime":1604171768277,"results":"87","hashOfConfig":"48"},{"size":629,"mtime":1607894005810,"results":"88","hashOfConfig":"48"},{"size":914,"mtime":1607993570959,"results":"89","hashOfConfig":"48"},{"size":792,"mtime":1607997488929,"results":"90","hashOfConfig":"48"},{"size":3044,"mtime":1608002988964,"results":"91","hashOfConfig":"48"},{"size":448,"mtime":1608002609133,"results":"92","hashOfConfig":"48"},{"size":470,"mtime":1607999722406,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"apiyp4",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\index.js",[],["213","214"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\App.js",["215","216"],"import logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\n\n/* CSS */\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* HOC */\nimport PrivateRoute from './Hoc/PrivateRouter'\nimport PrivateRouteRegister from './Hoc/PrivateRouterRegister'\nimport PrivateRouteLoggedIn from './Hoc/isLoggedIn'\n\n/* Pages */\nimport Login from './Pages/login'\nimport Register from './Pages/register'\nimport HomeProfesional from './Pages/homeProfesional'\nimport Principal from './Pages/principal'\nimport RegisterProfesional from './Pages/registerProfesional'\nimport RegistroBusiness from './Pages/registerBusiness'\nimport PostRegister from './Pages/postRegisterPage'\nimport Rubro from './Pages/rubroPage'\nimport Dashboard from './Pages/dashboard'\nimport MiCuenta from './Pages/miCuenta'\nimport MiPerfil from './Pages/miPerfil'\nimport Publicaciones from \"./Pages/publicaciones\";\nimport Proyectos from \"./Pages/proyectos\";\nimport ChatPage from \"./Pages/chatPage\"\nimport PropuestaPage from \"./Pages/propuestaPage\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        { console.log(\"USER\", JSON.parse(localStorage.getItem(\"user\"))) }\n\n        <PrivateRouteLoggedIn exact path = \"/\" component = {Principal} />\n\n        {/* <Route exact path = \"/\" component = {Principal} /> */}\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/registro\" component={Register} />\n        \n        <Route path = \"/registro/profesional\" component = {RegisterProfesional} />\n        <Route path = \"/registro/empresa\" component = {RegistroBusiness} />\n\n        <Route path = '/chat/:id' component = {ChatPage} />\n\n        <PrivateRouteRegister path = \"/registro/postregister\" component={PostRegister} />\n        <PrivateRouteRegister  path = \"/registro/rubro\" component={Rubro}  />\n        <PrivateRoute path = \"/dashboard\" component={Dashboard} />\n\n        <PrivateRoute path = \"/mispublicaciones\" component={Publicaciones} />\n        <PrivateRoute path = \"/misproyectos\" component={Proyectos} />\n\n        {/* <Route path = \"/registro/postregister\" component = {PostRegister} />\n        <Route path = \"/registro/rubro\" component = {Rubro} /> */}\n        <PrivateRoute path = \"/home\" component={HomeProfesional} />\n        <PrivateRoute path = \"/micuenta\" component={MiCuenta} />\n        <PrivateRoute path = \"/miperfil\" component={MiPerfil} />\n        <PrivateRoute path = \"/propuesta/:id\" component={PropuestaPage} />\n\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\areaReducer.js",["217"],"import { GET_AREAS, SEND_AREAS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    areas: '',\r\n    resp: '',\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_AREAS: \r\n        return {\r\n            areas: action.payload\r\n        }\r\n        case SEND_AREAS:\r\n            return {\r\n                ...state,\r\n                resp: action.payload.msg\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\authReducer.js",["218"],"import {USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL  } from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: JSON.parse(localStorage.getItem(\"user\")) === null ? null : true,\r\n    isLoading: false, \r\n    user: JSON.parse(localStorage.getItem(\"user\"))\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                // user: action.payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload.user\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                isAuthenticated: false, \r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state\r\n        \r\n\r\n    }\r\n}","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosReducer.js",["219"],"import { GET_ANUNCIOS, LOADING_ANUNCIOS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    anuncios: [],\r\n    isLoading: false\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANUNCIOS: \r\n        return {\r\n            anuncios: action.payload,\r\n            isLoading: false\r\n        }\r\n        case LOADING_ANUNCIOS:\r\n            return {\r\n                ...state,\r\n                isLoading: true  \r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\rubroReducer.js",["220"],"import { GET_RUBROS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    rubros: ''\r\n};\r\n  \r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_RUBROS: \r\n        return {\r\n            rubros: action.payload\r\n        }\r\n        default: \r\n            return state\r\n\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\isRenderReducer.js",["221"],"import { SET_RENDER } from '../actions/types'\r\n\r\nconst initialState = {\r\n    firstRender : true\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_RENDER:\r\n            return {\r\n                ...state, \r\n                firstRender : false\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\errorReducer.js",["222"],"import { CLEAR_ERRORS, GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        mgs: {},\r\n        status: null,\r\n        id: null,\r\n      };\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\anunciosUser.js",["223"],"import { GET_ANUNCIO_BY_USER, LOADING_ANUNCIO_BY_USER, DELETE_ANUNCIO_BY_ID, UPDATE_ANUNCIO_BY_ID, CLEAR_MESSAGE, SAVE_ANUNCIO } from '../actions/types'\r\n\r\nconst initialState = {\r\n    userAnuncios: null,\r\n    isLoading: false,\r\n    msg: ''\r\n};\r\n  \r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANUNCIO_BY_USER: \r\n        return {\r\n            userAnuncios: action.payload,\r\n            isLoading: false\r\n        }\r\n        case LOADING_ANUNCIO_BY_USER:\r\n            return {\r\n                ...state,\r\n                isLoading: true  \r\n            }\r\n        case DELETE_ANUNCIO_BY_ID:\r\n            return {\r\n                ...state,\r\n                userAnuncios : state.userAnuncios.filter(v => v.anuncio_id !== action.payload.id ),\r\n                msg: action.payload.message\r\n            }\r\n        case UPDATE_ANUNCIO_BY_ID:\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            }\r\n        case CLEAR_MESSAGE: \r\n            return {\r\n                ...state,\r\n                msg: ''\r\n            }\r\n        case SAVE_ANUNCIO:\r\n            return {\r\n                ...state,\r\n                msg: action.payload,\r\n                userAnuncios: [...state.userAnuncios ]\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n} ","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\types.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouterRegister.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\PrivateRouter.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Hoc\\isLoggedIn.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\login.js",["224","225","226","227","228","229","230","231","232"],"/* React importaciones */\r\nimport React, { useState, useLayoutEffect, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/login.css\";\r\n\r\n/* Actions */\r\nimport { login } from \"../actions/authAction\";\r\nimport { NOT_USER } from \"../actions/types\";\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Otros */\r\nimport { loadProgressBar } from \"axios-progress-bar\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { faUser, faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\n\r\n/* CSS */\r\nimport \"axios-progress-bar/dist/nprogress.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Login = ({ onLogin, history, auth, error, clearErrors }) => {\r\n  /* Antes de renderizar la view */\r\n  useEffect(() => {\r\n    if (error.id != null) {\r\n      if (error.id == NOT_USER) {\r\n        toast.warn(error.msg.message);\r\n      } else {\r\n        toast.error(error.msg.message);\r\n      }\r\n    }\r\n  }, [error]);\r\n\r\n  const items = [1, 2, 34, 5, 6, 77];\r\n\r\n  /* Antes de que renderice en el dom */\r\n  useLayoutEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, []);\r\n\r\n  /* Cuando abandona la view */\r\n  useEffect(() => {\r\n    return () => {\r\n      clearErrors();\r\n    };\r\n  }, []);\r\n\r\n  const [usuario, setUsuario] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [userError, setUserError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [isShow, setIsShow] = useState(false);\r\n\r\n  const checkForm = () => {\r\n    if (usuario == \"\" && password == \"\") {\r\n      errorHandler(setUserError, \"Por favor, ingrese valores en el input\");\r\n      errorHandler(setPasswordError, \"Por favor ingrese valores en el input\");\r\n    }\r\n    if (usuario == \"\") {\r\n      errorHandler(setUserError, \"Por favor, ingrese valores en el input\");\r\n    } else if (usuario.length < 4) {\r\n      errorHandler(setUserError, \"Usuario muy corto\");\r\n    } else if (password == \"\") {\r\n      errorHandler(setPasswordError, \"Por favor, ingrese valores en el input\");\r\n    } else if (password.length < 4) {\r\n      errorHandler(setPasswordError, \"Contraseña muy corta\");\r\n    } else {\r\n      console.log(\"VER\")\r\n      onLogin(usuario, password, history);\r\n    }\r\n  };\r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <div className=\"page-container\">\r\n      {loadProgressBar()}\r\n      <KeyboardEventHandler\r\n        handleKeys={[\"enter\"]}\r\n        onKeyEvent={(key, e) => onLogin(usuario, password, history)}\r\n      />\r\n\r\n        <Card className=\"card-container\">\r\n          <Card.Body>\r\n            <Form.Label>Usuario</Form.Label>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={(e) => setUsuario(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n            {/* {userError !== null ? (\r\n              <div>\r\n                <Alert variant=\"danger\">{userError}</Alert>\r\n              </div>\r\n            ) : null} */}\r\n\r\n            <Transition\r\n              items={userError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{userError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <Form.Label>Contraseña</Form.Label>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShow(!isShow)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={isShow ? faEyeSlash : faEye} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                placeholder=\"Contraseña\"\r\n                type={isShow ? null : \"password\"}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n\r\n            {/* {passwordError !== null ? (\r\n              <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}>\r\n                {(props) => (\r\n                  <div style={props}>\r\n                    {\" \"}\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                )}\r\n              </Spring>\r\n            ) : null} */}\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            {/* <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}  >\r\n              {(props) => <div style={props}></div>}\r\n            </Spring> */}\r\n\r\n            {/* {passwordError !== null ? (\r\n              <div>\r\n                <Alert variant=\"danger\">{passwordError}</Alert>\r\n              </div>\r\n            ) : null} */}\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button\r\n                onClick={() => checkForm()}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"primary\"\r\n              >\r\n                Iniciar Sesion\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"2%\",\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={() => history.push(\"/registro\")}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n              >\r\n                Registrarse\r\n              </Button>\r\n              <ToastContainer />\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, error } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogin: (usuario, password, history) => {\r\n      dispatch(login(usuario, password, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\homeProfesional.js",["233","234","235","236","237","238","239","240","241","242","243","244","245"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\register.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\principal.js",["246","247","248"],"/* React importaciones */\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\n\r\n/* React boostrap */\r\nimport {\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Spinner,\r\n  Container,\r\n  Image,\r\n} from \"react-bootstrap\";\r\n\r\n/* Components */\r\nimport Navbar from \"../components/navBar\";\r\nimport Categories from \"../components/categories\";\r\nimport Footer from \"../components/footer\";\r\nimport RightSide from \"../components/rightSide\";\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/principal.css\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Principal = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const [categories, setCategories] = useState([\r\n    {\r\n      titulo: \"Programador\",\r\n      src:\r\n        \"https://cdn.computerhoy.com/sites/navi.axelspringer.es/public/styles/480/public/media/image/2020/02/lenguaje-programacion-1859691.jpg?itok=PSYEVgtj\",\r\n    },\r\n    {\r\n      titulo: \"Diseño\",\r\n      src:\r\n        \"https://ideakreativa.net/wp-content/uploads/2020/01/programas-para-dise%C3%B1o-2020-1024x576.jpg\",\r\n    },\r\n    {\r\n      titulo: \"Esritura\",\r\n      src:\r\n        \"https://i2.wp.com/www.infotecarios.com/wp-content/uploads/escritura.jpg?fit=770%2C410&ssl=1\",\r\n    },\r\n    {\r\n      titulo: \"Marketing\",\r\n      src:\r\n        \"https://www.estrategiaynegocios.net/csp/mediapool/sites/dt.common.streams.StreamServer.cls?STREAMOID=EJiZA3cUe78rpkwgKbdvRc$daE2N3K4ZzOUsqbU5sYt8QgJDrP6_oWgzQvrTXjLC6FB40xiOfUoExWL3M40tfzssyZqpeG_J0TFo7ZhRaDiHC9oxmioMlYVJD0A$3RbIiibgT65kY_CSDiCiUzvHvODrHApbd6ry6YGl5GGOZrs-&CONTENTTYPE=image/jpeg\",\r\n    },\r\n    {\r\n      titulo: \"Administracion\",\r\n      src:\r\n        \"https://www.grouphealth.ca/wp-content/uploads/2019/12/working-on-plan-administration.jpg\",\r\n    },\r\n    {\r\n      titulo : \"Ingenieria\",\r\n      src: 'https://blogs.ucontinental.edu.pe/wp-content/uploads/2017/05/arquitectura-ingenieria-civil.jpg'\r\n    },\r\n    {\r\n      titulo: 'Idiomas',\r\n      src: 'https://www.ecestaticos.com/image/clipping/39db19382aa7eb27f590d33dba6b1f11/opening.jpg'\r\n    },\r\n    {\r\n      titulo: 'Leyes',\r\n      src: 'https://www.caraotadigital.net/wp-content/uploads/2019/06/1487244022_000495_1487244627_noticia_normal.jpg'\r\n    }\r\n  ]);\r\n\r\n  const search = () => {\r\n    console.log(\"Searching....\");\r\n\r\n    setIsLoading(true);\r\n\r\n    //Peticion\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Main-page\">\r\n      <Navbar type = \"home\" />\r\n      <div className=\"bg-success\" style={{ paddingBottom: \"5%\" }}>\r\n        <div>\r\n          <Row className = \"main-container\">\r\n            <Col>\r\n            <div className = \"center-div\">\r\n\r\n                <div className = \"text-container\">\r\n\r\n                <h1 style={{ color: \"white\" }}>\r\n                  Encuentra el talento que <br></br> necesitas{\" \"}\r\n                </h1>\r\n                </div>\r\n\r\n                <InputGroup className=\"mb-3\" style={{ width: \"70%\" }}>\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    {isLoading ? (\r\n                      <Spinner\r\n                        animation=\"border\"\r\n                        variant=\"success\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      >\r\n                        {\" \"}\r\n                      </Spinner>\r\n                    ) : (\r\n                      <FontAwesomeIcon className=\"icon\" icon={faSearch} />\r\n                    )}\r\n                  </InputGroup.Text>\r\n\r\n                  <FormControl\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                    placeholder=\"¿Que desea buscar?\"\r\n                  />\r\n                  <InputGroup.Append style={{ marginLeft: \"5px\" }}>\r\n                    <Button variant=\"dark\" onClick={() => search()}>\r\n                      Button\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n            </div>\r\n            </Col>\r\n            <Col>\r\n              <div className = \"img-container\">\r\n                  \r\n              <Image src = '/work.svg' className = \"img\" />\r\n\r\n                \r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n\r\n      <Container>\r\n        <h1 style={{ margin: \"20px\" }}>Categorias</h1>\r\n\r\n        <Row>\r\n          {categories.map((v, i) => {\r\n            return (\r\n              <Col lg={3} sm={6}>\r\n                <Categories content={v} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n\r\n      <div style={{ background: \"#F2EEED\", paddingBottom: '30px', paddingTop: '30px' }}>\r\n        <h4 style={{ textAlign: \"center\" }}>Como funciona?</h4>\r\n        <Container style={{ marginTop: \"50px\" }}>\r\n          <Row>\r\n            <Col sm = {6} lg = {4} >\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <Image\r\n                    style={{ width: \"80px\", height: \"80px\"}}\r\n                    src=\"https://cdn0.iconfinder.com/data/icons/conceptual-communication-filled-outline/64/poster-advertisement-_placard-notice-posting-512.png\"\r\n                    roundedCircle\r\n                  />\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <label>Publica un trabajo</label>\r\n                  <label\r\n                    style={{ overflowWrap: \"break-word\", display: \"inline\" }}\r\n                  >\r\n                    asldnasdnasdniasdiasdasidnaindasndnaskdnasklndaklndklnakndkl\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm = {6} lg = {4}>\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <Image\r\n                    style={{ width: \"80px\", height: \"80px\" }}\r\n                    src=\"https://www.flaticon.com/svg/static/icons/svg/1803/1803330.svg\"\r\n                    roundedCircle\r\n                  />\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <label>Obten ofertas</label>\r\n                  <label\r\n                    style={{ overflowWrap: \"break-word\", display: \"inline\" }}\r\n                  >\r\n                    asldnasdnasdniasdiasdasidnaindasndnaskdnasklndaklndklnakndkl\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm = {6} lg = {4}>\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <Image\r\n                    style={{ width: \"80px\", height: \"80px\" }}\r\n                    src=\"https://www.silverkey.org/wp-content/uploads/2018/07/payment-icon-01.jpg\"\r\n                    roundedCircle\r\n                  />\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <label>Paga rapido y seguro</label>\r\n                  <label\r\n                    style={{ overflowWrap: \"break-word\", display: \"inline\" }}\r\n                  >\r\n                    asldnasdnasdniasdiasdasidnaindasndnaskdnasklndaklndklnakndkl\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      <Container style={{ marginTop: \"30px\", marginBottom: '30px' }}>\r\n        <Row className = \"row-container\">\r\n          <Col style = {{ marginBottom : '30px' }}>\r\n            <h1>Lo que ofrecemos</h1>\r\n\r\n            <label>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et at eu,\r\n              accumsan vel egestas nunc. Eget mattis accumsan nullam nulla\r\n              dictumst varius tellus nec ultrices.\r\n            </label>\r\n\r\n            <label style={{ display: \"block\" }}>- Element</label>\r\n            <label style={{ display: \"block\" }}>- Element</label>\r\n            <label style={{ display: \"block\" }}>- Element</label>\r\n            <label style={{ display: \"block\" }}>- Element</label>\r\n          </Col>\r\n\r\n          <Col style = {{ display: 'flex', textAlign: 'center' }}>\r\n            <RightSide imgWidth = \"100%\" imgHeight = \"100%\" src = \"https://freelancingbuzz.com/wp-content/uploads/2019/07/freelancers.jpeg\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Principal;\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerProfesional.js",["249","250","251","252","253","254","255","256","257","258"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { storage } from \"../firebase/index\"\r\n\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUser,\r\n  faAddressBook,\r\n  faEye,\r\n  faEyeSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/PageStyles/registerProfesional.css\";\r\n\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\nimport { register } from \"../actions/authAction\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst RegisterProfesional = (props) => {\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"PROPS\", props)\r\n\r\n    if (props.error.id != null) {\r\n      console.log(\"ERROR\", props.error)\r\n      toast.error(props.error.msg.message)\r\n      props.clearErrors()\r\n    }\r\n\r\n  }, [props.error])\r\n\r\n  const [isShowPass1, setIsShowPass1] = useState(true);\r\n  const [isShowPass2, setIsShowPass2] = useState(true);\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [disableButton, setDisableButto] = useState(true);\r\n\r\n  const [selectedState, setSelectedState] = useState(\"Selecciona tu estado\");\r\n\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const [usernameError, setUsernameError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [stateError, setStateError] = useState(null);\r\n\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\r\n\r\n  let copyStates = [...states]\r\n\r\n  const [pdf, setPdf] = useState(\"\")\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    state: \"\",\r\n    isBussines: false,\r\n  });\r\n\r\n\r\n  const stateChange = (v) => {\r\n    setSelectedState(v);\r\n    setUserInfo({ ...userInfo, state: v });\r\n  };\r\n\r\n  const checkForm = () => {\r\n    if (userInfo.name === \"\") {\r\n      errorHandler(setNameError, \"Por favor, ingrese un nombre\");\r\n      console.log(\"User vacio\");\r\n    }\r\n    else if (userInfo.username === \"\") {\r\n      errorHandler(setUsernameError, \"Por favor, ingrese un nombre de usuario\");\r\n      console.log(\"Username vacio\");\r\n    }\r\n    else if (userInfo.password === \"\") {\r\n      errorHandler(setPasswordError, \"Por favor, ingrese una contraseña\");\r\n      console.log(\"Password vacio\");\r\n    }\r\n    else if (userInfo.state === \"\") {\r\n      errorHandler(setStateError, \"Por favor, ingrese una fecha\");\r\n    }\r\n    else if (userInfo.password !== confirmPassword && userInfo.password.length > 0) {\r\n      errorHandler(setConfirmPasswordError, \"Contraseñas no coinciden\");\r\n    } else {\r\n      props.onRegister({ ...userInfo,  pdf_url: pdf  }, props.history)\r\n\r\n    }\r\n  };\r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const registrarse = () => {\r\n\r\n    checkForm();\r\n  };\r\n\r\n  const uplodadFile = async (files) => {\r\n\r\n    console.log(\"EVENT\", files[0])\r\n\r\n    const formData = new FormData()\r\n\r\n    formData.append(\"file\", files[0])\r\n    formData.append(\"upload_preset\", \"hobah1xn\")\r\n\r\n    const uploadTask = storage.ref(`pdf/${files[0].name}`).put(files[0]);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {},\r\n      error => {\r\n        console.log(error)\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"pdf\")\r\n          .child(files[0].name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            console.log(\"URL\", url)\r\n            setPdf(url)\r\n          })\r\n      }\r\n    )\r\n\r\n  //  setPdf(data.data.secure_url)\r\n\r\n  } \r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"card-continer-profesional\">\r\n        <Card className=\"card-profesional\">\r\n          <Card.Body>\r\n            <Card.Title style={{ textAlign: \"center\" }}>\r\n              Crear cuenta\r\n            </Card.Title>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faAddressBook} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, name: e.target.value })\r\n                }\r\n                placeholder=\"Nombre Completo\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={nameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{nameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, username: e.target.value })\r\n                }\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={usernameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{usernameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass1(!isShowPass1)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass1 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, password: e.target.value });\r\n                  setConfirmPassword(e.target.value == \"\" ? \"\" : null);\r\n                }}\r\n                placeholder=\"Contraseña\"\r\n                type={isShowPass1 ? \"password\" : null}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass2(!isShowPass2)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass2 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={userInfo.password.length == 0}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirmar Contraseña\"\r\n                type={isShowPass2 ? \"password\" : null}\r\n                value={confirmPassword}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={confirmPasswordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{confirmPasswordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedState}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese ciudad\"\r\n                onChange={ (e) => setStates(states.filter( (v) => v.includes(e.target.value) ) )  }\r\n              />\r\n                </div>\r\n                {states.map((value) => (\r\n                  <Dropdown.Item onClick={() => stateChange(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <input type = \"file\" onChange = { (e) =>  uplodadFile(e.target.files) } />\r\n            \r\n            <label style={{ fontSize: \"14px\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => setDisableButto(!disableButton)}\r\n              />{\" \"}\r\n              Al crear tu cuenta aceptas los terminos de servicio y politica de\r\n              seguridad\r\n            </label>\r\n\r\n            <Button\r\n              disabled={disableButton}\r\n              style={{ width: \"100%\" }}\r\n              variant=\"success\"\r\n              onClick={() => registrarse()}\r\n            >\r\n              Registrarse\r\n            </Button>\r\n            <ToastContainer />\r\n\r\n\r\n            <hr />\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>\r\n                Ya estas registrado?{\" \"}\r\n              </label>{\" \"}\r\n              <Link to=\"/login\" style={{ marginLeft: \"3px\" }}>\r\n                Ingresa\r\n              </Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, error } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegister: (user, history) => {\r\n      dispatch(register(user, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( RegisterProfesional );\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\registerBusiness.js",["259","260","261","262","263","264","265","266","267","268"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUser,\r\n  faAddressBook,\r\n  faEye,\r\n  faEyeSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/PageStyles/registerProfesional.css\";\r\n\r\nimport { Spring, Transition } from \"react-spring/renderprops\";\r\nimport { register } from \"../actions/authAction\";\r\nimport { getRubros } from \"../actions/rubroActions\"\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n\r\nconst RegisterBusiness = (props) => {\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"PROPS\", props)\r\n\r\n    if (props.error.id != null) {\r\n      console.log(\"ERROR\", props.error)\r\n      toast.error(props.error.msg.message)\r\n      props.clearErrors()\r\n    }\r\n\r\n  }, [props.error])\r\n\r\n  useEffect(() => {\r\n\r\n    props.onGetRubros()\r\n\r\n  }, [])\r\n\r\n  const [isShowPass1, setIsShowPass1] = useState(true);\r\n  const [isShowPass2, setIsShowPass2] = useState(true);\r\n\r\n  const [states, setStates] = useState([\r\n    \"Amazonas\",\r\n    \"Anzoategui\",\r\n    \"Aragua\",\r\n    \"Barinas\",\r\n    \"Bolivar\",\r\n    \"Carabobo\",\r\n    \"Cojedes\",\r\n    \"Delta Amacuro\",\r\n    \"Distrito Capital\",\r\n    \"Falcon\",\r\n    \"Guarico\",\r\n    \"Lara\",\r\n    \"Merida\",\r\n    \"Miranda\",\r\n    \"Monagas\",\r\n    \"Nueva Esparta\",\r\n    \"Portuguesa\",\r\n    \"Sucre\",\r\n    \"Tachira\",\r\n    \"Trujillo\",\r\n    \"La Guaira\",\r\n    \"Yaracuy\",\r\n    \"Zulia\"\r\n    ]);\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    state: \"\",\r\n    isBussines: true\r\n  });\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [disableButton, setDisableButto] = useState(true);\r\n\r\n  const [selectedState, setSelectedState] = useState(\"Selecciona tu estado\");\r\n\r\n  const [selectedRubro, setSelectedRubro] = useState({\r\n    id: 0,\r\n    nombre: \"Selecciona un rubro\"\r\n  })\r\n\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const [usernameError, setUsernameError] = useState(null);\r\n\r\n  const [passwordError, setPasswordError] = useState(null);\r\n\r\n  const [stateError, setStateError] = useState(null);\r\n\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(null);\r\n\r\n  let copyStates = [...states]\r\n\r\n  const stateChange = (v) => {\r\n    setSelectedState(v);\r\n    setUserInfo({ ...userInfo, state: v });\r\n  };\r\n\r\n  const checkForm = () => {\r\n    if (userInfo.name === \"\") {\r\n      errorHandler(setNameError, \"Por favor, ingrese un nombre\");\r\n      console.log(\"User vacio\");\r\n    }\r\n    else if (userInfo.username === \"\") {\r\n      errorHandler(setUsernameError, \"Por favor, ingrese un nombre de usuario\");\r\n      console.log(\"Username vacio\");\r\n    }\r\n    else if (userInfo.password === \"\") {\r\n      errorHandler(setPasswordError, \"Por favor, ingrese una contraseña\");\r\n      console.log(\"Password vacio\");\r\n    }\r\n    else if (userInfo.state === \"\") {\r\n      errorHandler(setStateError, \"Por favor, ingrese una fecha\");\r\n    }\r\n    else if (userInfo.password !== confirmPassword && userInfo.password.length > 0) {\r\n      errorHandler(setConfirmPasswordError, \"Contraseñas no coinciden\");\r\n    } else {\r\n      props.onRegister(userInfo, props.history)\r\n    }\r\n  };\r\n\r\n  const rubros = () => {\r\n    if (props.rubros.rubros.length > 0) {\r\n      return props.rubros.rubros.map((value) => (\r\n       <Dropdown.Item onClick={() => changeRubro(value)}>\r\n         {value.nombre}\r\n       </Dropdown.Item>\r\n     ))\r\n    }\r\n  }\r\n\r\n  const changeRubro = (rubro) => {\r\n\r\n    setSelectedRubro(rubro)\r\n    setUserInfo({ ...userInfo, rubro_id: rubro.rubro_id });\r\n\r\n  }\r\n  \r\n\r\n  const errorHandler = (setState, param) => {\r\n    setState(param);\r\n    setTimeout(() => {\r\n      setState(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const registrarse = () => {\r\n\r\n    checkForm();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"card-continer-profesional\">\r\n        <Card className=\"card-profesional\">\r\n          <Card.Body>\r\n            <Card.Title style={{ textAlign: \"center\" }}>\r\n              Crear cuenta empresarial\r\n            </Card.Title>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faAddressBook} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, name: e.target.value })\r\n                }\r\n                placeholder=\"Nombre Completo\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={nameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{nameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) =>\r\n                  setUserInfo({ ...userInfo, username: e.target.value })\r\n                }\r\n                placeholder=\"Usuario\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={usernameError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{usernameError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass1(!isShowPass1)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass1 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                onChange={(e) => {\r\n                  setUserInfo({ ...userInfo, password: e.target.value });\r\n                  setConfirmPassword(e.target.value == \"\" ? \"\" : null);\r\n                }}\r\n                placeholder=\"Contraseña\"\r\n                type={isShowPass1 ? \"password\" : null}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={passwordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{passwordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend onClick={() => setIsShowPass2(!isShowPass2)}>\r\n                <InputGroup.Text id=\"basic-addon1\">\r\n                  {\" \"}\r\n                  {isShowPass2 ? (\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  ) : (\r\n                    <FontAwesomeIcon icon={faEyeSlash} />\r\n                  )}{\" \"}\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                disabled={userInfo.password.length == 0}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirmar Contraseña\"\r\n                type={isShowPass2 ? \"password\" : null}\r\n                value={confirmPassword}\r\n              />\r\n            </InputGroup>\r\n\r\n            <Transition\r\n              items={confirmPasswordError !== null}\r\n              from={{ opacity: 0 }}\r\n              enter={{ opacity: 1 }}\r\n              leave={{ opacity: 0 }}\r\n            >\r\n              {(show) =>\r\n                show &&\r\n                ((props) => (\r\n                  <div style={props}>\r\n                    <Alert variant=\"danger\">{confirmPasswordError}</Alert>\r\n                  </div>\r\n                ))\r\n              }\r\n            </Transition>\r\n            \r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedState}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese rubro\"\r\n                onChange={ (e) => setStates(states.filter( (v) => v.includes(e.target.value) ) )  }\r\n              />\r\n                </div>\r\n                {states.map((value) => (\r\n                  <Dropdown.Item onClick={() => stateChange(value)}>\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            \r\n            <Dropdown drop=\"up\" style={{ marginBottom: \"10px\", width: \"100%\" }}>\r\n              <Dropdown.Toggle\r\n                style={{ width: \"100%\" }}\r\n                variant=\"success\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                {selectedRubro.nombre}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu style={{ width: \"100%\"}} className = \"dropdown-register\">\r\n                <div style = {{  display: 'flex', justifyContent: 'center' }}>\r\n\r\n              <FormControl style = {{ width: '90%' }}\r\n                placeholder=\"Ingrese ciudad\"\r\n                onChange={ (e) => setStates(states.filter( (v) => v.includes(e.target.value) ) )  }\r\n              />\r\n                </div>\r\n                {rubros()}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <label style={{ fontSize: \"14px\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => setDisableButto(!disableButton)}\r\n              />{\" \"}\r\n              Al crear tu cuenta aceptas los terminos de servicio y politica de\r\n              seguridad\r\n            </label>\r\n\r\n            <Button\r\n              disabled={disableButton}\r\n              style={{ width: \"100%\" }}\r\n              variant=\"success\"\r\n              onClick={() => registrarse()}\r\n            >\r\n              Registrarse\r\n            </Button>\r\n            <ToastContainer />\r\n\r\n\r\n            <hr />\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <label style={{ whiteSpace: \"nowrap\" }}>\r\n                Ya estas registrado?{\" \"}\r\n              </label>{\" \"}\r\n              <Link to=\"/login\" style={{ marginLeft: \"3px\" }}>\r\n                Ingresa\r\n              </Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { auth, error, rubros } = state;\r\n\r\n  return {\r\n    auth,\r\n    error,\r\n    rubros\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegister: (user, history) => {\r\n      dispatch(register(user, history));\r\n    },\r\n    clearErrors: () => {\r\n      dispatch({ type: \"CLEAR_ERRORS\" });\r\n    },\r\n    onGetRubros : () => {\r\n      dispatch(getRubros())\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( RegisterBusiness );\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\rubroPage.js",["269","270","271","272","273","274","275","276","277","278"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Actions */\r\nimport { getRubros } from '../actions/rubroActions'\r\nimport {  getAreas } from '../actions/areasActions'\r\nimport { sendAreas } from '../actions/areasActions'\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/rubro.css\";\r\n\r\n/* React Boostrap */\r\nimport {\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Image,\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\n/* Font-awesome */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faSearch,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* Otros */\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nconst Rubro = (props) => {\r\n\r\n  useEffect(() => {\r\n   props.onGetRubros()    \r\n  }, [])\r\n\r\n  // /* Peticion a la base de datos */\r\n  // const [rubros, setRubros] = useState([\r\n  //   \"Programacion y tecnologia\",\r\n  //   \"Diseño y multimedia\",\r\n  //   \"Redaccion y traduccion\",\r\n  //   \"Marketing digital y ventas\",\r\n  //   \"Soporte administrativo\",\r\n  //   \"Legal\",\r\n  //   \"Finanzas y Negocios\",\r\n  //   \"Ingenieria y Arquitectura\",\r\n  // ]);\r\n\r\n  const [rubroIndex, setRubroIndex] = useState(null);\r\n\r\n  const [rubroValue, setRubroValue] = useState(null)\r\n\r\n  const [experiencia, setExperiencia] = useState([\r\n    \"menos de 1 año\",\r\n    \"entre 1 y 3 años\",\r\n    \"4 a 6 años\",\r\n    \"mas de 7 años\",\r\n  ]);\r\n\r\n  const [experienciaSelected, setExperienciaSelected] = useState(\"Experiencia\")\r\n\r\n  const[experienciaTemp, setExperienciaTemp] = useState(\"\")\r\n\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [estadoChip, setEstadoChip] = useState(\"new\")\r\n\r\n  const [send, setSend] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n    if( chips.length > 0 && estadoChip === \"new\") {\r\n\r\n      let value = {\r\n        area: chips[chips.length-1].value,\r\n        experiencia: experienciaTemp,\r\n        id: chips[chips.length-1].id\r\n      }\r\n\r\n      setInfoUser(oldValues =>  ( { ...oldValues, info : [...oldValues.info, value] } ))\r\n\r\n    }\r\n\r\n  }, [chips])\r\n\r\n  // const[textInput, setTextInput] = useState(\"\")\r\n\r\n  const [disableButton, setDisableButton] = useState(false);\r\n\r\n  const [colors, setColors] = useState([\r\n    \"#1878D7\",\r\n    \"#D71843\",\r\n    \"#B418D7\",\r\n    \"#18D735\",\r\n  ]);\r\n\r\n  const [infoUser, setInfoUser] = useState({\r\n    rubro: \"\",\r\n    info: []\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    if(send) {\r\n\r\n      console.log(\"INFO USER\", infoUser)\r\n      props.onSendAreas(infoUser, props.auth, props.history)\r\n      \r\n    }\r\n\r\n  }, [infoUser])\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const rubroSelected = (rubro, index) => {\r\n\r\n    setChips([])\r\n\r\n    setRubroIndex(index);\r\n    setRubroValue(rubro)\r\n\r\n    /* Consulta al back */\r\n    props.onGetAreas(rubro.rubro_id)\r\n    \r\n\r\n  };\r\n\r\n  const addTag = () => {\r\n\r\n    setEstadoChip(\"new\")\r\n\r\n    setExperienciaTemp(experienciaSelected)\r\n\r\n    if (chips.length >= 3) {\r\n      setDisableButton(true);\r\n    }\r\n\r\n    let checkIfExist = chips.find((v) => v.value === value)\r\n\r\n    \r\n    let id_current = props.areas.find((v) => v.nombre === value )\r\n    \r\n\r\n    if (!checkIfExist) {\r\n      \r\n      setChips((oldArray) => [\r\n        ...oldArray,\r\n        { value, colors: colors[Math.floor(Math.random() * 4) + 0], id: id_current.area_id},\r\n      ]);\r\n  \r\n  \r\n      setValue(\"\")\r\n      setExperienciaSelected(\"Experiencia\")\r\n    }\r\n\r\n\r\n  };  \r\n\r\n  const onSaveUser =  () => {\r\n\r\n    setSend(true)\r\n\r\n    /* Llevar a Redux */\r\n    setInfoUser(oldValue =>  ( {...oldValue, rubro: rubroValue } ) )\r\n\r\n  }\r\n\r\n  const deleteChip = (i) => {\r\n\r\n    setEstadoChip(\"edit\")\r\n\r\n    // estadoChip = \"edit\"\r\n\r\n    setChips(chips.filter((v, index) => index !== i));\r\n\r\n    setInfoUser(oldValues => ({ info: oldValues.info.filter((v, index) =>  index !== i )  }) )\r\n\r\n\r\n\r\n    if (chips.length < 5) {\r\n      setDisableButton(false);\r\n    }\r\n  };\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : props.areas.filter(\r\n          (lang) => lang.nombre.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.nombre;\r\n\r\n  const renderSuggestion = (suggestion) => <div>{suggestion.nombre}</div>;\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Ingrese su area\",\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"rubro-page-style\">\r\n        <Card className=\"card-rubro\">\r\n          <Card.Body>\r\n            <h1>{props.auth !== null ? props.auth.nombre_completo : null }, listo para trabajar?</h1>\r\n            <label>Indicanos cuales son tus habilidades.</label>\r\n            <br />\r\n            <label>\r\n              Recuerda! Mientras mas informacion proporciones, mas facil te\r\n              encontraran\r\n            </label>\r\n            <label style={{ display: \"block\" }}>\r\n              En que rubro te especializas?\r\n            </label>\r\n            <Container>\r\n              <Row>\r\n                {/* Aqui iria un mapeo de forma dinamica, traido desde el back */}\r\n\r\n                {  props.rubros ? props.rubros.map((v, i) => {\r\n                  return (\r\n                    <Col style={{ marginTop: \"20px\" }} lg={3}>\r\n                      <Card\r\n                        style={{ padding: \"10px\" }}\r\n                        className={i === rubroIndex ? \"selected\" : null}\r\n                        onClick={() => rubroSelected(v, i)}\r\n                      >\r\n                        <div className=\"rubro-container\">\r\n                          <label className=\"label-rubro\">{v.nombre}</label>\r\n\r\n                          {i === rubroIndex ? (\r\n                            <div className=\"style-icon-rubro\">\r\n                              <FontAwesomeIcon icon={faCheckCircle} />\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  );\r\n                }) : null }\r\n              </Row>\r\n\r\n              {rubroIndex !== null ? (\r\n                <div>\r\n                  <h3 style={{ marginTop: \"30px\" }}>\r\n                    Cuales son las areas en las que te especializas\r\n                  </h3>\r\n\r\n                  <Row>\r\n                    <Col lg={7}>\r\n                      {/* <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                          placeholder=\"Buscar Area\"\r\n                          className=\"input-rubro\"\r\n                          onChange={(e) => onChangeText(e.target.value)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                      </InputGroup> */}\r\n\r\n                      <Autosuggest\r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={\r\n                          onSuggestionsFetchRequested\r\n                        }\r\n                        onSuggestionsClearRequested={\r\n                          onSuggestionsClearRequested\r\n                        }\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col lg={5}>\r\n                      <div className=\"right-rubro\">\r\n                        <Dropdown style={{ width: \"60%\" }}>\r\n                          <Dropdown.Toggle\r\n                            variant=\"success\"\r\n                            id=\"dropdown-basic\"\r\n                            style={{ width: \"100%\" }}\r\n                          >\r\n                            {experienciaSelected}\r\n                          </Dropdown.Toggle>\r\n\r\n                          <Dropdown.Menu>\r\n                            {experiencia.map((v) => {\r\n                              return <Dropdown.Item onClick = { () => setExperienciaSelected(v) } >{v}</Dropdown.Item>;\r\n                            })}\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Button\r\n                          className=\"button-rubro\"\r\n                          disabled={disableButton || value === \"\" || experienciaSelected === \"Experiencia\" }\r\n                          onClick={() => addTag()}\r\n                        >\r\n                          Agregar\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              ) : null}\r\n              \r\n\r\n              {chips.length > 0 ? (\r\n                <div className=\"chips-rubro\">\r\n                  {chips.map((v, i) => {\r\n                    return (\r\n                      <div\r\n                        className=\"chips-container\"\r\n                        style={{ backgroundColor: v.colors }}\r\n                      >\r\n                        <div className=\"chip-element-rubro\">\r\n                          <label>{v.value}</label>\r\n                          <FontAwesomeIcon\r\n                            className=\"icon-rubro-container\"\r\n                            icon={faTimesCircle}\r\n                            onClick={() => deleteChip(i)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"buttons-rubro\">\r\n                <Button\r\n                  onClick={() => props.history.push(\"/registro/postregister\")}\r\n                  className=\"button-rubro\"\r\n                >\r\n                  Anterior\r\n                </Button>\r\n                <Button\r\n                  disabled={chips.length <= 0 ? true : false}\r\n                  className=\"button-rubro\"\r\n                  onClick = {() => onSaveUser() }\r\n                >\r\n                  Siguiente\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const { rubros, areas, auth } = state\r\n\r\n  return {\r\n    rubros: rubros.rubros,\r\n    areas: areas.areas,\r\n    auth: auth.user\r\n  }\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onGetRubros: () => {\r\n      dispatch(getRubros())\r\n    },\r\n    onGetAreas: (rubro_id) => {\r\n      dispatch(getAreas(rubro_id))\r\n    },\r\n    onSendAreas : (data, user, history) => {\r\n      dispatch(sendAreas(data, user, history))\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Rubro);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\postRegisterPage.js",["279","280"],"/* React importaciones */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n/* CSS */\r\nimport \"../styles/PageStyles/postRegister.css\";\r\n\r\n/* React Boostrap */\r\nimport { Card, Button, Container, Row, Col, Alert, Image } from \"react-bootstrap\";\r\n\r\n\r\nconst PostRegister = (props) => {\r\n\r\n    const [isDisable, setIsDisable] = useState(true)\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      { console.log(\"PROPS\", props) }\r\n      <div className=\"content-container\">\r\n        <Card className = \"card-style-post\">\r\n          <Card.Body>\r\n            <Container>\r\n              <Row>\r\n                <Col lg={8} md = {12} className = \"left-content-post\" >\r\n                  <h3 style = {{ textAlign: 'center' }}>Hola {  props.auth !== null ? props.auth.nombre_completo : null  } bienvenido a (Nombre pagina)</h3>\r\n                  <label style = {{ marginTop: '10px' }}>\r\n                    Aqui te ayudaremos a crear tu perfil como freelancer para\r\n                    que consigas tu primer proyecto. Sigue estos pasos, y llena\r\n                    toda la informacion posible para que aumenten tus\r\n                    posibilidades de conseguir empleo.\r\n                    <br />\r\n                    <br />\r\n                    Ten en cuenta que un perfil con poca informacion es un\r\n                    perfil sin transparencia, por ende tus posibilidades de\r\n                    conseguir trabajo se veran afectadas de manera directa\r\n                  </label>\r\n                  <br />\r\n                  <br />\r\n                  <label className = \"checkbox-container\">\r\n                    <input\r\n                      name=\"isGoing\"\r\n                      type=\"checkbox\"\r\n                      style = {{ marginRight: '5px' }}\r\n                      className = \"checkbox-style\"\r\n                      onChange={ () => setIsDisable(!isDisable)   }\r\n                    />\r\n                    Entendido\r\n                  </label>\r\n                </Col>\r\n                <Col lg={4} md = {12} className = \"right-content-post\">\r\n                    <Image className = \"img-container-post\" src=\"https://consejos-de.com/wp-content/uploads/2018/05/working-3406785_640-compressor.jpg\" fluid />     \r\n                    <div className = \"boton-contenedor\">    \r\n                    <Button onClick = { () => props.history.push('/registro/rubro')  } style = {{ marginTop: '10%', borderRadius: '20px' }} variant=\"success\" disabled = {isDisable}>Comenzar</Button>\r\n                    </div>   \r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  console.log(\"STATE\", state)\r\n\r\n  const {  auth  } = state\r\n\r\n  return {\r\n    auth: auth.user\r\n  }\r\n\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n\r\n\r\n\r\n// }\r\n\r\nexport default connect(mapStateToProps, null) (PostRegister);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\dashboard.js",["281","282","283"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from '../components/navBar'\r\n\r\nimport { SET_RENDER } from '../actions/types'\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    useEffect (() => {\r\n      if(props.isFirstRender.firstRender) {\r\n        toast.success(\"Bienvenido \" + props.auth.user.nombre_completo )\r\n        props.onFistRenderChange()\r\n      }\r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n        <NavBar />\r\n      <h1>Dashboard</h1>\r\n      {  }\r\n      <ToastContainer type = \"logeado\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth, isFirstRender } = state\r\n\r\n    return {\r\n        auth,\r\n        isFirstRender\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    onFistRenderChange: () => {\r\n      dispatch({type: SET_RENDER })\r\n    }\r\n\r\n  }\r\n   \r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Dashboard)\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\publicaciones.js",["284","285","286","287","288","289","290"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n/* Components */\r\nimport NavBar from \"../components/navBar\";\r\n\r\n/* Actions */\r\nimport {\r\n  getAnuncioByUser,\r\n  deleteAnuncioById,\r\n  updateAnuncioById,\r\n  clearMessage,\r\n  saveAnuncio\r\n} from \"../actions/anuncioUser\";\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nimport { getRubros } from \"../actions/rubroActions\";\r\n\r\nimport { getAreas } from \"../actions/areasActions\";\r\n\r\nimport {\r\n  Container as Contenedor,\r\n  Button as Boton,\r\n} from \"react-floating-action-button\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* React boostrap */\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  Image,\r\n  Card,\r\n  Modal,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nimport \"../styles/PageStyles/anuniosUser.css\";\r\n\r\n/* Otros */\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Publicaciones = (props) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [isEditMode, setIsEditMode] = useState([]);\r\n\r\n  const [postInfo, setPostInfo] = useState('');\r\n\r\n  const [selectedRubro, setSelectedRubro] = useState({\r\n    rubro_id: 0,\r\n    nombre: \"Seleccionar rubro\",\r\n  });\r\n\r\n  const [anuncios, setAnuncios] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [isRenderInput, setIsRenderInput] = useState(false);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [titulo, setTitulo] = useState('')\r\n\r\n  const [descripcion, setDescripcion] = useState('')\r\n\r\n  const [disponibilidad, setDisponibilidad] = useState('')\r\n\r\n  const returnIcon = () => {\r\n    return <FontAwesomeIcon icon={faPlus} />;\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const onChangeEditMode = (index) => {\r\n    let newValue = [...isEditMode];\r\n\r\n    newValue[index] = !isEditMode[index];\r\n\r\n    if (!newValue[index]) {\r\n      let oldValue = [...props.useranuncios.userAnuncios];\r\n      setAnuncios(oldValue);\r\n    }\r\n\r\n    setIsEditMode(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.onHandleGetUserPost();\r\n\r\n    if (props.rubros.rubros.length == 0) {\r\n      props.onGetRubros();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.useranuncios.userAnuncios !== null) {\r\n      setIsEditMode(props.useranuncios.userAnuncios.map(() => false));\r\n      setAnuncios(props.useranuncios.userAnuncios);\r\n    }\r\n  }, [props.useranuncios.userAnuncios]);\r\n\r\n  useEffect(() => {\r\n    if (props.useranuncios.msg !== \"\") {\r\n      toast.success(props.useranuncios.msg);\r\n      props.onClearMessage();\r\n    }\r\n  }, [props.useranuncios.msg]);\r\n\r\n  useEffect(() => {\r\n    if (selectedRubro.nombre !== \"Seleccionar rubro\") {\r\n      props.onGetAreas(selectedRubro.rubro_id);\r\n\r\n      setIsRenderInput(true);\r\n    }\r\n  }, [selectedRubro]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (postInfo !== '') {\r\n\r\n      props.onSendData(postInfo)\r\n\r\n      setShow(false)\r\n\r\n    }\r\n\r\n  }, [postInfo])\r\n\r\n  const verPropuesta = (v) => {\r\n\r\n    history.push(`/propuesta/${v.anuncio_id}`)\r\n\r\n  }\r\n\r\n  const renderButtonsInEditMode = (v, i) => (\r\n    <div>\r\n      <Button\r\n        variant=\"success\"\r\n        style={{ marginTop: \"200px\" }}\r\n        onClick={() =>\r\n          props.onUpdateUserPost(\r\n            v.anuncio_id,\r\n            anuncios[i],\r\n            isEditMode,\r\n            setIsEditMode,\r\n            i\r\n          )\r\n        }\r\n      >\r\n        Guardar\r\n      </Button>\r\n      <Button\r\n        variant=\"warning\"\r\n        style={{ marginTop: \"200px\", marginLeft: \"5px\" }}\r\n        onClick={() => onChangeEditMode(i)}\r\n      >\r\n        Volver\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  const renderItem = () => {\r\n    if (props.rubros.rubros.length > 0) {\r\n      return (\r\n        <Dropdown\r\n          drop=\"up\"\r\n          style={{ marginTop: \"20px\", width: \"100%\", marginBottom: \"20px\" }}\r\n        >\r\n          <Dropdown.Toggle\r\n            style={{ width: \"100%\" }}\r\n            variant=\"success\"\r\n            id=\"dropdown-basic\"\r\n          >\r\n            {selectedRubro.nombre}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu\r\n            style={{ width: \"100%\" }}\r\n            className=\"dropdown-register\"\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}></div>\r\n            {props.rubros.rubros.map((value) => (\r\n              <Dropdown.Item onClick={() => stateChange(value)}>\r\n                {value.nombre}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  const stateChange = (valor) => {\r\n    setSelectedRubro({ nombre: valor.nombre, rubro_id: valor.rubro_id });\r\n  };\r\n\r\n  const renderButtonsNormalMode = (v, i) => (\r\n    <div>\r\n      <Button\r\n        variant=\"danger\"\r\n        style={{ marginTop: \"200px\" }}\r\n        onClick={() => props.onDeleteUserPost(v.anuncio_id)}\r\n      >\r\n        Eliminar\r\n      </Button>\r\n      <Button\r\n        variant=\"warning\"\r\n        style={{ marginTop: \"200px\", marginLeft: \"5px\" }}\r\n        onClick={() => onChangeEditMode(i)}\r\n      >\r\n        Editar\r\n      </Button>\r\n\r\n      <Button \r\n      onClick = {() => verPropuesta(v) }\r\n      style={{ marginTop: \"200px\", marginLeft: \"20px\" }}\r\n      >\r\n        Ver propuestas\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  const changeValue = (value, propiedad, index) => {\r\n    const valor = [...anuncios];\r\n\r\n    valor[index] = {\r\n      ...valor[index],\r\n      [propiedad]: value,\r\n    };\r\n\r\n    setAnuncios(valor);\r\n  };\r\n\r\n  /* Suggestions Component */\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.nombre;\r\n\r\n  const renderSuggestion = (suggestion) => <div>{suggestion.nombre}</div>;\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : props.areas.filter(\r\n          (lang) =>\r\n            lang.nombre.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Ingrese su area\",\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n\r\n  /* FINALIZA SUGGEST */\r\n\r\n  const addTag = () => {\r\n\r\n    console.log(\"VALOR\", value)\r\n\r\n    console.log(\"AREAS\", props.areas.find(v => v.nombre === value))\r\n\r\n    let newValue = props.areas.find(v => v.nombre === value)\r\n\r\n    setChips((oldValues) => [...oldValues, newValue]);\r\n    setValue(\"\")\r\n  };\r\n\r\n  const deleteChip = (i) => {\r\n\r\n    setChips(chips.filter((v, index) => index !== i));\r\n\r\n  }\r\n\r\n  const sendData = () => {\r\n\r\n    setPostInfo({\r\n      titulo,\r\n      descripcion,\r\n      rubro_id: selectedRubro.rubro_id,\r\n      area_id : chips.map(v => v.area_id ),\r\n      disponibilidad\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Container>\r\n        <Row>\r\n          {anuncios.length > 0 ? (\r\n            anuncios.map((v, i) => {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card style={{ marginTop: \"30px\" }}>\r\n                    <Card.Body>\r\n                      <div style={{ height: \"70px\" }}>\r\n                        {isEditMode[i] ? (\r\n                          <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            value={v.titulo}\r\n                            onChange={(e) =>\r\n                              changeValue(e.target.value, \"titulo\", i)\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          // <FormControl\r\n                          //   value = { v.titulo  }\r\n                          // />\r\n                          <Card.Title>{v.titulo}</Card.Title>\r\n                        )}\r\n                        {isEditMode[i] ? (\r\n                          <Form.Control\r\n                            style={{ marginTop: \"40px\" }}\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            value={v.descripcion}\r\n                            onChange={(e) =>\r\n                              changeValue(e.target.value, \"descripcion\", i)\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          <Card.Text>{v.descripcion}</Card.Text>\r\n                        )}\r\n                      </div>\r\n                      {/* <button >Sexo</button> */}\r\n                      {isEditMode[i]\r\n                        ? renderButtonsInEditMode(v, i)\r\n                        : renderButtonsNormalMode(v, i)}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })\r\n          ) : (\r\n            <h1>No hay publicaciones disponibles</h1>\r\n          )}\r\n        </Row>\r\n        <ToastContainer />\r\n        <Contenedor>\r\n          <Boton tooltip=\"Agregar\" rotate={true} onClick={() => setShow(true)}>\r\n            {returnIcon()}\r\n          </Boton>\r\n        </Contenedor>\r\n\r\n        <>\r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Agregar anuncio</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <FormControl placeholder=\"Titulo\" onChange = { (e) => setTitulo(e.target.value)  } />\r\n              <FormControl\r\n                style={{ marginTop: \"20px\" }}\r\n                placeholder=\"Descripcion\"\r\n                onChange = { (e) => setDescripcion(e.target.value)  }\r\n              />\r\n\r\n              {renderItem()}\r\n\r\n              {isRenderInput ? (\r\n                <Row>\r\n                  <Col lg={9}>\r\n                    <Autosuggest\r\n                      className=\"input-suggest-areas\"\r\n                      suggestions={suggestions}\r\n                      onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                      onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                      getSuggestionValue={getSuggestionValue}\r\n                      renderSuggestion={renderSuggestion}\r\n                      inputProps={inputProps}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Button onClick={() => addTag()}>Añadir</Button>\r\n                  </Col>\r\n                </Row>\r\n              ) : null}\r\n\r\n              {chips.length > 0 ? (\r\n                <div className=\"chips-rubro\">\r\n                  {chips.map((v, i) => {\r\n                    return (\r\n                      <div\r\n                        className=\"chips-container\"\r\n                        style={{ backgroundColor: 'green' }}\r\n                      >\r\n                        <div className=\"chip-element-rubro\">\r\n                          <label>{v.nombre}</label>\r\n                          <FontAwesomeIcon\r\n                            className=\"icon-rubro-container\"\r\n                            icon={faTimesCircle}\r\n                            onClick={() => deleteChip(i)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n\r\n              <FormControl\r\n                style={{ marginTop: \"20px\" }}\r\n                placeholder=\"Disponibilidad\"\r\n                onChange = { (e) => setDisponibilidad(e.target.value) }\r\n              />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick = { () => sendData() }>Guardar</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, isFirstRender, useranuncios, rubros, areas } = state;\r\n\r\n  return {\r\n    auth,\r\n    isFirstRender,\r\n    useranuncios,\r\n    rubros,\r\n    areas: areas.areas,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onHandleGetUserPost: () => {\r\n      dispatch(getAnuncioByUser());\r\n    },\r\n    onDeleteUserPost: (id) => {\r\n      dispatch(deleteAnuncioById(id));\r\n    },\r\n    onUpdateUserPost: (id, anuncio, isEditMode, setIsEditMode, i) => {\r\n      dispatch(updateAnuncioById(id, anuncio, isEditMode, setIsEditMode, i));\r\n    },\r\n    onClearMessage: () => {\r\n      dispatch(clearMessage());\r\n    },\r\n    onGetRubros: () => {\r\n      dispatch(getRubros());\r\n    },\r\n    onGetAreas: (rubro_id) => {\r\n      dispatch(getAreas(rubro_id));\r\n    },\r\n    onSendData: (data) => {\r\n      dispatch(saveAnuncio(data))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\proyectos.js",["291","292"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavBar from '../components/navBar'\r\n\r\n\r\nconst Proyectos = (props) => {\r\n\r\n    useEffect (() => {\r\n     \r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n        <NavBar />\r\n        <h1>Proyectos</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth, isFirstRender } = state\r\n\r\n    return {\r\n        auth,\r\n        isFirstRender\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n\r\n//   return {\r\n//     onFistRenderChange: () => {\r\n//       dispatch({type: SET_RENDER })\r\n//     }\r\n\r\n//   }\r\n   \r\n\r\n// }\r\n\r\nexport default connect(mapStateToProps, null) (Proyectos)\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miPerfil.js",["293","294","295"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MiPerfil = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Mi Perfil</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth } = state\r\n\r\n    return {\r\n        auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (MiPerfil)\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\chatPage.js",["296","297","298","299"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect, useParams } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { io } from 'socket.io-client'\r\n\r\nimport {  Button, Form } from 'react-bootstrap'\r\n\r\nimport axios from 'axios'\r\n\r\nlet socket;\r\n\r\nconst ChatPage = (props) => {\r\n\r\n    const [valor, setValor] = useState('')\r\n\r\n    useEffect (() => {\r\n\r\n        socket = io('')\r\n\r\n        console.log(\"SOCKET\", socket)\r\n        console.log(\"ID\", props.match.params.id)\r\n        /* El back va a estar escuchando esto */\r\n        socket.emit('join', { room: props.match.params.id })\r\n\r\n        return () => {\r\n            socket.emit('disconnect')\r\n            socket.off()\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            console.log(\"MESSAGE\", message)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const enviarMensaje = (e) => {\r\n\r\n        e.preventDefault()\r\n            console.log(\"VALOR\", valor)\r\n            socket.emit('sendMessage', { texto : valor, room: props.match.params.id, username: props.auth.user.username_freelancer, toUser: 'carlos' })\r\n        }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat</h1>\r\n\r\n      <Form.Control\r\n              placeholder=\"Escribir mensaje\"\r\n              onChange = {(e) => setValor(e.target.value) }\r\n              \r\n            />        \r\n    <Button onClick = {(e) => enviarMensaje(e) }>Enviar Mensaje</Button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { auth } = state\r\n\r\n    return {\r\n        auth\r\n    }\r\n\r\n}\r\n\r\nexport default connect (mapStateToProps, null) (ChatPage)\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\miCuenta.js",["300","301","302"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Componentes */\r\nimport NavBar from \"../components/navBar\";\r\n\r\n/* React Boostrap */\r\nimport { Tab , Tabs } from \"react-bootstrap\";\r\n\r\n/* Pages */\r\nimport MiPerfil from '../Pages/miPerfil'\r\nimport Cuenta from '../Pages/cuenta'\r\n\r\nconst MiCuenta = (props) => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Tabs style = {{ justifyContent: 'center' }} defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"home\" title=\"Home\">\r\n          <Cuenta />\r\n        </Tab>\r\n        <Tab eventKey=\"profile\" title=\"Profile\">\r\n          <MiPerfil />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n\r\n  return {\r\n    auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiCuenta);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\authAction.js",["303"],"import axios from \"axios\";\r\n\r\n/* Tipos */\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADING,\r\n  NOT_USER,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  LOGOUT_SUCCESS\r\n} from \"../actions/types\";\r\n\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\n/*** Funcion que realizara el login en comunicacion con el reducer */\r\nexport const login = (username, password, history) => async (dispatch) => {\r\n  let body = JSON.stringify({ username, password });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    let res = await axios.post(\"/login\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"user\",\r\n      JSON.stringify({\r\n        ...res.data.user,\r\n      })\r\n    );\r\n\r\n    history.push(\"/home\");\r\n  } catch (err) {\r\n    if (err.response.data.message === \"Usuario no existente\") {\r\n      dispatch(returnErrors(err.response.data, err.response.status, NOT_USER));\r\n      dispatch({ type: AUTH_ERROR });\r\n    } else {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, LOGIN_FAIL)\r\n      );\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  }\r\n};\r\n\r\nexport const register = (user, history) => async (dispatch) => {\r\n  console.log(\"USER INFO\", user)\r\n  let body = JSON.stringify(user);\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    let res = await axios.post(\"/registro\", body, config);\r\n\r\n    localStorage.setItem(\r\n      \"user\",\r\n      JSON.stringify({\r\n        ...res.data.user,\r\n      })\r\n    );\r\n\r\n    dispatch({ type: USER_LOADED });\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    if (user.isBussines) {\r\n      history.push('/home')\r\n    } else {\r\n      history.push(\"/registro/postregister\");\r\n    }\r\n\r\n  } catch (err) {\r\n    if (err.response.data.message === \"Usuario ya existente\") {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, REGISTER_FAIL)\r\n      );\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  }\r\n};\r\n\r\nexport const logOut = (history) => async (dispatch) => {\r\n\r\n  let resp = await axios.get('/logout')\r\n\r\n  dispatch({ type: LOGOUT_SUCCESS })\r\n\r\n  localStorage.removeItem('user')\r\n\r\n\r\n}\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\rubroActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anunciosActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\areasActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\cuenta.js",["304","305","306","307"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MiCuenta = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Mi cuenta</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiCuenta\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\anuncioUser.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\rightSide.js",["308"],"import React, { useState } from \"react\";\r\n\r\nimport { Image, Container } from \"react-bootstrap\";\r\n\r\nconst RightSide = ({ src, imgWidth, imgHeight }) => {\r\n\r\n    return (\r\n        <Container style = {{ padding: 0}} >\r\n            <Image style = {{ width: imgWidth, height: imgHeight }} src = {src} />\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default RightSide","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\navBar.js",["309","310","311","312"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/* React boostrap */\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Button,\r\n  Overlay,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Container,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\n/* Router */\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logOut } from \"../actions/authAction\";\r\n\r\nconst Navigation = ({ type, auth, onLogOut }) => {\r\n  const logOut = () => {\r\n    onLogOut();\r\n  };\r\n\r\n  const renderName = () => {\r\n    if (auth.user !== null) {\r\n        return auth.user.username_freelancer\r\n    }\r\n  }\r\n\r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title style={{ textAlign: \"center\" }} as=\"h3\">\r\n        {renderName()}\r\n      </Popover.Title>\r\n      <Popover.Content>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              {\" \"}\r\n              <Link to=\"/micuenta\"> Mi cuenta</Link>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <Row>\r\n            <label\r\n              style={{ width: \"100%\", textAlign: \"center\" }}\r\n              onClick={() => logOut()}\r\n            >\r\n              Cerrar Sesion\r\n            </label>\r\n          </Row>\r\n        </Container>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  const render = () => {\r\n    if (type === \"home\") {\r\n      return (\r\n        <Navbar className=\"bg-success\">\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Nav>\r\n              <Nav.Item style={{ marginRight: \"50px\" }}>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/login\" style={{ color: \"white\" }}>\r\n                    Iniciar Sesion\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Button\r\n                  style={{ borderColor: \"black\", borderWidth: \"2px\" }}\r\n                  variant=\"success\"\r\n                >\r\n                  {\" \"}\r\n                  <Link to=\"/registro\" style={{ color: \"white\" }}>\r\n                    Registrarse\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      );\r\n    } else {\r\n      return (\r\n        <Navbar className=\"bg-success\">\r\n          <Navbar.Collapse>\r\n            <Nav>\r\n              {  auth.user.isbussines ? (\r\n              <Nav.Item>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/mispublicaciones\" style={{ color: \"white\" }}>\r\n                    Mis publicaciones\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n              ) : null  }\r\n\r\n              <Nav.Item>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/misproyectos\" style={{ color: \"white\" }}>\r\n                    Mis Proyectos\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Nav style={{ marginRight: \"100px\" }}>\r\n              <Nav.Item style={{ marginRight: \"50px\" }}>\r\n                <Button variant=\"success\">\r\n                  {\" \"}\r\n                  <Link to=\"/login\" style={{ color: \"white\" }}>\r\n                    ??\r\n                  </Link>\r\n                </Button>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  placement=\"bottom\"\r\n                  overlay={popover}\r\n                >\r\n                  <Button variant=\"success\">\r\n                    {\" \"}\r\n                    {/* <Link to=\"/registro\" style={{ color: \"white\" }}> */}\r\n                    Cuenta\r\n                    {/* </Link> */}\r\n                  </Button>\r\n                </OverlayTrigger>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{render()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n\r\n  return {\r\n    auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogOut: (history) => {\r\n      dispatch(logOut(history));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\footer.js",["313","314","315"],"/* React importaciones */\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\r\n\r\nimport \"../styles/ComponentsStyles/footer.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone, faEnvelope, faInfo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container className=\"footer-container\">\r\n        <Row>\r\n          <Col lg = {4} sm = {6}>\r\n            <div className=\"content-1\">\r\n              <label className=\"label-style\">Contactanos</label>\r\n              <label className=\"label-style\">\r\n                {\" \"}\r\n                <FontAwesomeIcon\r\n                  icon={faPhone}\r\n                  color=\"white\"\r\n                  className=\"icon\"\r\n                />{\" \"}\r\n                +58 4120055000\r\n              </label>\r\n              <label className=\"label-style\">\r\n                {\" \"}\r\n                <FontAwesomeIcon\r\n                  icon={faEnvelope}\r\n                  color=\"white\"\r\n                  className=\"icon\"\r\n                />{\" \"}\r\n                TuWork@gmail.com\r\n              </label>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col lg = {4} sm = {6}>\r\n            <div className=\"content-1\">\r\n              <label className=\"label-style\">\r\n                {\" \"}\r\n                <FontAwesomeIcon\r\n                  icon={faInfo}\r\n                  color=\"white\"\r\n                  style={{ marginRight: \"6px\" }}\r\n                />{\" \"}\r\n                Sobre nosotros\r\n              </label>\r\n              <label className=\"label-style\">\r\n                Somos una empresa jkasnjkdnjadnasndjknasjkdnjasndjkaskdnas\r\n              </label>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col lg = {4} sm = {6}>\r\n            <div>\r\n              <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label style = {{ color: 'white' }}>Danos tu opninion</Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} />\r\n                </Form.Group>\r\n              </Form>\r\n              <div className = \"boton-container\"> \r\n              <Button variant=\"success\">Enviar</Button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <div className=\"bg-success footer-final\">\r\n        <label style={{ display: \"block\", textAlign: \"center\", color: 'white' }}>\r\n          Copyright &copy; 2021. Todos los derechos reservados\r\n        </label>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\components\\categories.js",["316","317"],"/* React importaciones  */\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\n\r\n/* React boostrap */\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n/* CSS */\r\nimport \"../styles/ComponentsStyles/Categories.css\";\r\n\r\nconst Categories = ({ content }) => {\r\n  const cardSelected = () => {\r\n    console.log(\"Contendio del card\", content);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"card-style\" onClick={() => cardSelected(content)}>\r\n        <Card.Img variant=\"top\" src = {content.src} className = \"image\" />\r\n        <Card.Body>\r\n          <Card.Title style = {{ textAlign : 'center' }}>{content.titulo}</Card.Title>\r\n          <Card.Text>\r\n            asnjksdnsjkddjkbjkasbdjkbasdbasjkdbasdbjkabjdbvfyuv\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\firebase\\index.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\propuestaActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\propuestaReducer.js",["318"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\Pages\\propuestaPage.js",["319","320","321"],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\actions\\userInfoActions.js",[],"C:\\Users\\Luis\\Documents\\GitHub\\TesisLuis\\server\\client\\src\\reducers\\userInfoReducer.js",["322"],{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":1,"column":8,"nodeType":"329","messageId":"330","endLine":1,"endColumn":12},{"ruleId":"327","severity":1,"message":"331","line":4,"column":32,"nodeType":"329","messageId":"330","endLine":4,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":8,"column":1,"nodeType":"334","endLine":26,"endColumn":2},{"ruleId":"332","severity":1,"message":"333","line":9,"column":1,"nodeType":"334","endLine":50,"endColumn":2},{"ruleId":"332","severity":1,"message":"333","line":8,"column":1,"nodeType":"334","endLine":27,"endColumn":2},{"ruleId":"332","severity":1,"message":"333","line":8,"column":1,"nodeType":"334","endLine":22,"endColumn":2},{"ruleId":"332","severity":1,"message":"333","line":7,"column":1,"nodeType":"334","endLine":21,"endColumn":2},{"ruleId":"332","severity":1,"message":"333","line":9,"column":1,"nodeType":"334","endLine":26,"endColumn":2},{"ruleId":"332","severity":1,"message":"333","line":9,"column":1,"nodeType":"334","endLine":48,"endColumn":2},{"ruleId":"327","severity":1,"message":"335","line":28,"column":10,"nodeType":"329","messageId":"330","endLine":28,"endColumn":16},{"ruleId":"336","severity":1,"message":"337","line":38,"column":20,"nodeType":"338","messageId":"339","endLine":38,"endColumn":22},{"ruleId":"327","severity":1,"message":"340","line":46,"column":9,"nodeType":"329","messageId":"330","endLine":46,"endColumn":14},{"ruleId":"341","severity":1,"message":"342","line":53,"column":6,"nodeType":"343","endLine":53,"endColumn":8,"suggestions":"344"},{"ruleId":"341","severity":1,"message":"345","line":60,"column":6,"nodeType":"343","endLine":60,"endColumn":8,"suggestions":"346"},{"ruleId":"336","severity":1,"message":"337","line":73,"column":17,"nodeType":"338","messageId":"339","endLine":73,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":73,"column":35,"nodeType":"338","messageId":"339","endLine":73,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":77,"column":17,"nodeType":"338","messageId":"339","endLine":77,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":81,"column":25,"nodeType":"338","messageId":"339","endLine":81,"endColumn":27},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"348","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":8},{"ruleId":"327","severity":1,"message":"349","line":36,"column":3,"nodeType":"329","messageId":"330","endLine":36,"endColumn":16},{"ruleId":"336","severity":1,"message":"337","line":80,"column":26,"nodeType":"338","messageId":"339","endLine":80,"endColumn":28},{"ruleId":"341","severity":1,"message":"350","line":84,"column":6,"nodeType":"343","endLine":84,"endColumn":8,"suggestions":"351"},{"ruleId":"341","severity":1,"message":"352","line":97,"column":6,"nodeType":"343","endLine":97,"endColumn":8,"suggestions":"353"},{"ruleId":"341","severity":1,"message":"354","line":126,"column":6,"nodeType":"343","endLine":126,"endColumn":25,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":134,"column":25,"nodeType":"358","messageId":"359","endLine":134,"endColumn":27},{"ruleId":"341","severity":1,"message":"360","line":154,"column":6,"nodeType":"343","endLine":154,"endColumn":13,"suggestions":"361"},{"ruleId":"341","severity":1,"message":"362","line":164,"column":6,"nodeType":"343","endLine":164,"endColumn":21,"suggestions":"363"},{"ruleId":"336","severity":1,"message":"337","line":170,"column":45,"nodeType":"338","messageId":"339","endLine":170,"endColumn":47},{"ruleId":"356","severity":1,"message":"357","line":209,"column":25,"nodeType":"358","messageId":"359","endLine":209,"endColumn":27},{"ruleId":"364","severity":1,"message":"365","line":327,"column":15,"nodeType":"366","endLine":327,"endColumn":48},{"ruleId":"327","severity":1,"message":"347","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":42},{"ruleId":"327","severity":1,"message":"367","line":33,"column":10,"nodeType":"329","messageId":"330","endLine":33,"endColumn":21},{"ruleId":"327","severity":1,"message":"368","line":35,"column":22,"nodeType":"329","messageId":"330","endLine":35,"endColumn":35},{"ruleId":"327","severity":1,"message":"369","line":13,"column":3,"nodeType":"329","messageId":"330","endLine":13,"endColumn":12},{"ruleId":"327","severity":1,"message":"370","line":14,"column":3,"nodeType":"329","messageId":"330","endLine":14,"endColumn":6},{"ruleId":"327","severity":1,"message":"371","line":15,"column":3,"nodeType":"329","messageId":"330","endLine":15,"endColumn":6},{"ruleId":"327","severity":1,"message":"335","line":35,"column":10,"nodeType":"329","messageId":"330","endLine":35,"endColumn":16},{"ruleId":"327","severity":1,"message":"372","line":38,"column":8,"nodeType":"329","messageId":"330","endLine":38,"endColumn":13},{"ruleId":"341","severity":1,"message":"373","line":53,"column":6,"nodeType":"343","endLine":53,"endColumn":19,"suggestions":"374"},{"ruleId":"327","severity":1,"message":"375","line":96,"column":10,"nodeType":"329","messageId":"330","endLine":96,"endColumn":20},{"ruleId":"327","severity":1,"message":"376","line":100,"column":7,"nodeType":"329","messageId":"330","endLine":100,"endColumn":17},{"ruleId":"336","severity":1,"message":"337","line":273,"column":53,"nodeType":"338","messageId":"339","endLine":273,"endColumn":55},{"ruleId":"336","severity":1,"message":"337","line":308,"column":52,"nodeType":"338","messageId":"339","endLine":308,"endColumn":54},{"ruleId":"327","severity":1,"message":"369","line":11,"column":3,"nodeType":"329","messageId":"330","endLine":11,"endColumn":12},{"ruleId":"327","severity":1,"message":"370","line":12,"column":3,"nodeType":"329","messageId":"330","endLine":12,"endColumn":6},{"ruleId":"327","severity":1,"message":"371","line":13,"column":3,"nodeType":"329","messageId":"330","endLine":13,"endColumn":6},{"ruleId":"327","severity":1,"message":"335","line":33,"column":10,"nodeType":"329","messageId":"330","endLine":33,"endColumn":16},{"ruleId":"341","severity":1,"message":"373","line":51,"column":6,"nodeType":"343","endLine":51,"endColumn":19,"suggestions":"377"},{"ruleId":"341","severity":1,"message":"378","line":57,"column":6,"nodeType":"343","endLine":57,"endColumn":8,"suggestions":"379"},{"ruleId":"327","severity":1,"message":"375","line":113,"column":10,"nodeType":"329","messageId":"330","endLine":113,"endColumn":20},{"ruleId":"327","severity":1,"message":"376","line":117,"column":7,"nodeType":"329","messageId":"330","endLine":117,"endColumn":17},{"ruleId":"336","severity":1,"message":"337","line":263,"column":53,"nodeType":"338","messageId":"339","endLine":263,"endColumn":55},{"ruleId":"336","severity":1,"message":"337","line":298,"column":52,"nodeType":"338","messageId":"339","endLine":298,"endColumn":54},{"ruleId":"327","severity":1,"message":"380","line":21,"column":3,"nodeType":"329","messageId":"330","endLine":21,"endColumn":8},{"ruleId":"327","severity":1,"message":"381","line":22,"column":3,"nodeType":"329","messageId":"330","endLine":22,"endColumn":8},{"ruleId":"327","severity":1,"message":"382","line":23,"column":3,"nodeType":"329","messageId":"330","endLine":23,"endColumn":13},{"ruleId":"327","severity":1,"message":"383","line":24,"column":3,"nodeType":"329","messageId":"330","endLine":24,"endColumn":14},{"ruleId":"327","severity":1,"message":"384","line":32,"column":3,"nodeType":"329","messageId":"330","endLine":32,"endColumn":11},{"ruleId":"341","severity":1,"message":"378","line":43,"column":6,"nodeType":"343","endLine":43,"endColumn":8,"suggestions":"385"},{"ruleId":"327","severity":1,"message":"386","line":61,"column":23,"nodeType":"329","messageId":"330","endLine":61,"endColumn":37},{"ruleId":"341","severity":1,"message":"387","line":92,"column":6,"nodeType":"343","endLine":92,"endColumn":13,"suggestions":"388"},{"ruleId":"327","severity":1,"message":"389","line":98,"column":18,"nodeType":"329","messageId":"330","endLine":98,"endColumn":27},{"ruleId":"341","severity":1,"message":"390","line":119,"column":6,"nodeType":"343","endLine":119,"endColumn":16,"suggestions":"391"},{"ruleId":"327","severity":1,"message":"392","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":26},{"ruleId":"327","severity":1,"message":"380","line":11,"column":45,"nodeType":"329","messageId":"330","endLine":11,"endColumn":50},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"341","severity":1,"message":"378","line":19,"column":8,"nodeType":"343","endLine":19,"endColumn":10,"suggestions":"394"},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"381","line":42,"column":3,"nodeType":"329","messageId":"330","endLine":42,"endColumn":8},{"ruleId":"336","severity":1,"message":"337","line":107,"column":36,"nodeType":"338","messageId":"339","endLine":107,"endColumn":38},{"ruleId":"341","severity":1,"message":"378","line":110,"column":6,"nodeType":"343","endLine":110,"endColumn":8,"suggestions":"395"},{"ruleId":"341","severity":1,"message":"378","line":124,"column":6,"nodeType":"343","endLine":124,"endColumn":30,"suggestions":"396"},{"ruleId":"341","severity":1,"message":"378","line":132,"column":6,"nodeType":"343","endLine":132,"endColumn":21,"suggestions":"397"},{"ruleId":"341","severity":1,"message":"378","line":144,"column":6,"nodeType":"343","endLine":144,"endColumn":16,"suggestions":"398"},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"392","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":36},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"399","line":2,"column":55,"nodeType":"329","messageId":"330","endLine":2,"endColumn":64},{"ruleId":"327","severity":1,"message":"400","line":10,"column":8,"nodeType":"329","messageId":"330","endLine":10,"endColumn":13},{"ruleId":"341","severity":1,"message":"401","line":32,"column":8,"nodeType":"343","endLine":32,"endColumn":10,"suggestions":"402"},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"392","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":36},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"403","line":105,"column":7,"nodeType":"329","messageId":"330","endLine":105,"endColumn":11},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"392","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":36},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"404","line":4,"column":10,"nodeType":"329","messageId":"330","endLine":4,"endColumn":17},{"ruleId":"327","severity":1,"message":"393","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"392","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":36},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"405","line":10,"column":3,"nodeType":"329","messageId":"330","endLine":10,"endColumn":10},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"392","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":36},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"393","line":2,"column":17,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"347","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":42},{"ruleId":"332","severity":1,"message":"333","line":9,"column":1,"nodeType":"334","endLine":34,"endColumn":2},{"ruleId":"327","severity":1,"message":"347","line":2,"column":38,"nodeType":"329","messageId":"330","endLine":2,"endColumn":53},{"ruleId":"327","severity":1,"message":"406","line":16,"column":10,"nodeType":"329","messageId":"330","endLine":16,"endColumn":23},{"ruleId":"341","severity":1,"message":"407","line":28,"column":6,"nodeType":"343","endLine":28,"endColumn":8,"suggestions":"408"},{"ruleId":"332","severity":1,"message":"333","line":8,"column":1,"nodeType":"334","endLine":26,"endColumn":2},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Spring' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'items' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'auth.isAuthenticated' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["411"],"React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array. If 'clearErrors' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["412"],"'useLayoutEffect' is defined but never used.","'Toast' is defined but never used.","'faCheckCircle' is defined but never used.","React Hook useEffect has a missing dependency: 'history.action'. Either include it or remove the dependency array.",["413"],"React Hook useEffect has missing dependencies: 'auth.user.username_freelancer', 'onGetAnuncios', 'onGetPropuestas', 'onGetRubros', and 'rubros.rubros.length'. Either include them or remove the dependency array. If 'onGetAnuncios' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],"React Hook useEffect has a missing dependency: 'auth.user.username_freelancer'. Either include it or remove the dependency array.",["415"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'history' and 'onGetAnuncios'. Either include them or remove the dependency array. If 'onGetAnuncios' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["416"],"React Hook useEffect has missing dependencies: 'auth.user.username_freelancer', 'onCleanPropuesta', and 'onGetPropuestas'. Either include them or remove the dependency array. If 'onCleanPropuesta' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["417"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'searchValue' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["418"],"'stateError' is assigned a value but never used.","'copyStates' is assigned a value but never used.",["419"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["420"],"'Alert' is defined but never used.","'Image' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'faSearch' is defined but never used.",["421"],"'setExperiencia' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'estadoChip' and 'experienciaTemp'. Either include them or remove the dependency array.",["422"],"'setColors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'send'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["423"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["424"],["425"],["426"],["427"],["428"],"'useParams' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["429"],"'resp' is assigned a value but never used.","'connect' is defined but never used.","'Overlay' is defined but never used.","'cleanUserInfo' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'onGetByAnuncio'. Either include them or remove the dependency array. If 'onGetByAnuncio' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["430"],"no-global-assign","no-unsafe-negation",{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"445","fix":"447"},{"desc":"448","fix":"449"},{"desc":"448","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"448","fix":"455"},{"desc":"448","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},"Update the dependencies array to be: [auth.isAuthenticated, history]",{"range":"467","text":"468"},"Update the dependencies array to be: [clearErrors]",{"range":"469","text":"470"},"Update the dependencies array to be: [history.action]",{"range":"471","text":"472"},"Update the dependencies array to be: [auth.user.username_freelancer, onGetAnuncios, onGetPropuestas, onGetRubros, rubros.rubros.length]",{"range":"473","text":"474"},"Update the dependencies array to be: [anuncios.anuncios, auth.user.username_freelancer]",{"range":"475","text":"476"},"Update the dependencies array to be: [chips, history, onGetAnuncios]",{"range":"477","text":"478"},"Update the dependencies array to be: [auth.user.username_freelancer, onCleanPropuesta, onGetPropuestas, propuesta.msg]",{"range":"479","text":"480"},"Update the dependencies array to be: [props, props.error]",{"range":"481","text":"482"},{"range":"483","text":"482"},"Update the dependencies array to be: [props]",{"range":"484","text":"485"},{"range":"486","text":"485"},"Update the dependencies array to be: [chips, estadoChip, experienciaTemp]",{"range":"487","text":"488"},"Update the dependencies array to be: [infoUser, props, send]",{"range":"489","text":"490"},{"range":"491","text":"485"},{"range":"492","text":"485"},"Update the dependencies array to be: [props, props.useranuncios.msg]",{"range":"493","text":"494"},"Update the dependencies array to be: [props, selectedRubro]",{"range":"495","text":"496"},"Update the dependencies array to be: [postInfo, props]",{"range":"497","text":"498"},"Update the dependencies array to be: [props.match.params.id]",{"range":"499","text":"500"},"Update the dependencies array to be: [id, onGetByAnuncio]",{"range":"501","text":"502"},[1458,1460],"[auth.isAuthenticated, history]",[1575,1577],"[clearErrors]",[1909,1911],"[history.action]",[2242,2244],"[auth.user.username_freelancer, onGetAnuncios, onGetPropuestas, onGetRubros, rubros.rubros.length]",[2926,2945],"[anuncios.anuncios, auth.user.username_freelancer]",[3373,3380],"[chips, history, onGetAnuncios]",[3572,3587],"[auth.user.username_freelancer, onCleanPropuesta, onGetPropuestas, propuesta.msg]",[1105,1118],"[props, props.error]",[1080,1093],[1153,1155],"[props]",[868,870],[2124,2131],"[chips, estadoChip, experienciaTemp]",[2621,2631],"[infoUser, props, send]",[522,524],[2489,2491],[2899,2923],"[props, props.useranuncios.msg]",[3101,3116],"[props, selectedRubro]",[3249,3259],"[postInfo, props]",[732,734],"[props.match.params.id]",[715,717],"[id, onGetByAnuncio]"]